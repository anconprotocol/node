/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { InvoiceAsset, InvoiceAssetInterface } from "../InvoiceAsset";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ancon",
        type: "address",
      },
      {
        internalType: "address",
        name: "_kyx",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lendingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dataProvider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "cufeId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "cafeUri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "diddoc",
        type: "string",
      },
    ],
    name: "RequestAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "cufeId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "RequestMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dataProvider",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "invoiceAssetCDList",
    outputs: [
      {
        internalType: "contract InvoiceAssetCD",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "kyx",
    outputs: [
      {
        internalType: "contract KYX",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lendingPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "string",
        name: "cufeId",
        type: "string",
      },
      {
        internalType: "string",
        name: "cafeUri",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "kyxId",
        type: "string",
      },
      {
        internalType: "string",
        name: "diddoc",
        type: "string",
      },
      {
        internalType: "bool",
        name: "minted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cufeId",
        type: "string",
      },
    ],
    name: "getRequest",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "cufeId",
            type: "string",
          },
          {
            internalType: "string",
            name: "cafeUri",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "string",
            name: "kyxId",
            type: "string",
          },
          {
            internalType: "string",
            name: "diddoc",
            type: "string",
          },
          {
            internalType: "bool",
            name: "minted",
            type: "bool",
          },
        ],
        internalType: "struct InvoiceAsset.Request",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "packetProof",
        type: "tuple",
      },
    ],
    name: "createRequestWithProof",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "packetProof",
        type: "tuple",
      },
    ],
    name: "mintCDwithProof",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600a553480156200001657600080fd5b5060405162003bf338038062003bf383398101604081905262000039916200011a565b6200004433620000ad565b600580546001600160a01b03199081166001600160a01b03988916179091556006805482169688169690961790955560078054861694871694909417909355600a9290925560088054841691851691909117905560098054909216921691909117905562000192565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200011557600080fd5b919050565b60008060008060008060c087890312156200013457600080fd5b6200013f87620000fd565b95506200014f60208801620000fd565b94506200015f60408801620000fd565b93506200016f60608801620000fd565b92506200017f60808801620000fd565b915060a087015190509295509295509295565b613a5180620001a26000396000f3fe60806040523480156200001157600080fd5b50600436106200016c5760003560e01c806385b9241311620000dd578063c6532251116200008b578063ddca3f43116200006e578063ddca3f431462000328578063f2fde38b1462000332578063fc0c546a146200034957600080fd5b8063c653225114620002e8578063ced72f87146200031f57600080fd5b8063a59a997311620000c0578063a59a997314620002a9578063b334ed8614620002bd578063b8b1c55014620002d157600080fd5b806385b9241314620002715780638da5cb5b146200029757600080fd5b8063692d51d2116200013b578063715018a6116200011e578063715018a6146200022d57806371b33dc51462000237578063783436a5146200024b57600080fd5b8063692d51d214620001eb57806369fe0e2d146200021657600080fd5b80633aeac4e114620001715780633cd559a4146200018a57806351cff8d914620001bb5780635badbe4c14620001d2575b600080fd5b620001886200018236600462001c07565b6200035d565b005b6006546200019e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b62000188620001cc36600462001c45565b6200056e565b620001dc60015481565b604051908152602001620001b2565b62000202620001fc36600462001d9c565b620006be565b604051620001b29695949392919062001e53565b620001886200022736600462001ecd565b6200094f565b62000188620009b0565b6007546200019e906001600160a01b031681565b620002626200025c36600462002202565b62000a1a565b604051620001b291906200229e565b620002886200028236600462001d9c565b62001011565b604051620001b29190620022b3565b6000546001600160a01b03166200019e565b6008546200019e906001600160a01b031681565b6009546200019e906001600160a01b031681565b62000262620002e236600462002202565b620013a0565b6200019e620002f936600462001d9c565b80516020818301810180516003825292820191909301209152546001600160a01b031681565b600454620001dc565b620001dc60045481565b620001886200034336600462001c45565b6200193e565b6005546200019e906001600160a01b031681565b6000546001600160a01b03163314620003bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156200041e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044491906200235c565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015620004b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004d7919062002383565b620005255760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152606401620003b4565b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516200056191815260200190565b60405180910390a2505050565b6000546001600160a01b03163314620005ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620003b4565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d80600081146200061b576040519150601f19603f3d011682016040523d82523d6000602084013e62000620565b606091505b509150915081620006745760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401620003b4565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051620006b091815260200190565b60405180910390a250505050565b8051602081830181018051600282529282019190930120915280548190620006e690620023a3565b80601f01602080910402602001604051908101604052809291908181526020018280546200071490620023a3565b8015620007655780601f10620007395761010080835404028352916020019162000765565b820191906000526020600020905b8154815290600101906020018083116200074757829003601f168201915b5050505050908060010180546200077c90620023a3565b80601f0160208091040260200160405190810160405280929190818152602001828054620007aa90620023a3565b8015620007fb5780601f10620007cf57610100808354040283529160200191620007fb565b820191906000526020600020905b815481529060010190602001808311620007dd57829003601f168201915b505050600284015460038501805494956001600160a01b039092169491935091506200082790620023a3565b80601f01602080910402602001604051908101604052809291908181526020018280546200085590620023a3565b8015620008a65780601f106200087a57610100808354040283529160200191620008a6565b820191906000526020600020905b8154815290600101906020018083116200088857829003601f168201915b505050505090806004018054620008bd90620023a3565b80601f0160208091040260200160405190810160405280929190818152602001828054620008eb90620023a3565b80156200093c5780601f1062000910576101008083540402835291602001916200093c565b820191906000526020600020905b8154815290600101906020018083116200091e57829003601f168201915b5050506005909301549192505060ff1686565b6000546001600160a01b03163314620009ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620003b4565b600455565b6000546001600160a01b0316331462000a0c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620003b4565b62000a18600062001a26565b565b600654604051635eccc37160e01b8152600481018690526060917fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470916001600160a01b0390911690635eccc37190602401600060405180830381865afa15801562000a89573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000ab391908101906200242c565b80519060200120141562000b0a5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206d6f6e696b657200000000000000000000000000000000006044820152606401620003b4565b60065460208301516040516397554e8f60e01b81526001600160a01b03909216916397554e8f9162000b4a91899133918991908b908a906004016200262a565b6020604051808303816000875af115801562000b6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b90919062002383565b62000bde5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401620003b4565b6000806000806000806000808b80602001905181019062000c009190620026ae565b975097509750975097509750975097508760405160200162000c239190620027d4565b6040516020818303038152906040528051906020012060028960405162000c4b9190620027d4565b9081526040516020918190038201812062000c6992909101620027f2565b604051602081830303815290604052805190602001201462000cce5760405162461bcd60e51b815260206004820152601760248201527f72657175657374206d75737420626520637265617465640000000000000000006044820152606401620003b4565b6007546040516332e6c90760e01b81526001600160a01b03909116906332e6c9079062000d029089908b9060040162002896565b6000604051808303816000875af115801562000d22573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000d4c9190810190620028b1565b608001511515600114801562000dea57506007546040516332e6c90760e01b815233916001600160a01b0316906332e6c9079062000d91908a908c9060040162002896565b6000604051808303816000875af115801562000db1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000ddb9190810190620028b1565b60a001516001600160a01b0316145b62000e265760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964204b594360a81b6044820152606401620003b4565b60008062000e3686868662001a83565b909250905060018215151462000e8f5760405162461bcd60e51b815260206004820152600f60248201527f696e76616c696420696e766f69636500000000000000000000000000000000006044820152606401620003b4565b600854600954600a54604051600093339388936001600160a01b0392831693929091169162000ebe9062001b3d565b6001600160a01b039586168152938516602085015291841660408401529092166060820152608081019190915260a001604051809103906000f08015801562000f0b573d6000803e3d6000fd5b509050600160028c60405162000f229190620027d4565b908152604051908190036020018120600501805492151560ff1990931692909217909155819060039062000f58908e90620027d4565b90815260405190819003602001812080546001600160a01b039390931673ffffffffffffffffffffffffffffffffffffffff199093169290921790915562000fa2908990620027d4565b60405180910390208b60405162000fba9190620027d4565b6040519081900381206001600160a01b0387168252907fe59a14afc2e6e4f59f9676c830a655854b9526714b7a87ed78234192981e4db09060200160405180910390a350989e9d5050505050505050505050505050565b620010566040518060c00160405280606081526020016060815260200160006001600160a01b0316815260200160608152602001606081526020016000151581525090565b60006001600160a01b0316600283604051620010739190620027d4565b908152604051908190036020019020600201546001600160a01b03161415620010df5760405162461bcd60e51b815260206004820152601060248201527f6e6f207265717565737420666f756e64000000000000000000000000000000006044820152606401620003b4565b600282604051620010f19190620027d4565b90815260200160405180910390206040518060c00160405290816000820180546200111c90620023a3565b80601f01602080910402602001604051908101604052809291908181526020018280546200114a90620023a3565b80156200119b5780601f106200116f576101008083540402835291602001916200119b565b820191906000526020600020905b8154815290600101906020018083116200117d57829003601f168201915b50505050508152602001600182018054620011b690620023a3565b80601f0160208091040260200160405190810160405280929190818152602001828054620011e490620023a3565b8015620012355780601f10620012095761010080835404028352916020019162001235565b820191906000526020600020905b8154815290600101906020018083116200121757829003601f168201915b505050918352505060028201546001600160a01b031660208201526003820180546040909201916200126790620023a3565b80601f01602080910402602001604051908101604052809291908181526020018280546200129590620023a3565b8015620012e65780601f10620012ba57610100808354040283529160200191620012e6565b820191906000526020600020905b815481529060010190602001808311620012c857829003601f168201915b505050505081526020016004820180546200130190620023a3565b80601f01602080910402602001604051908101604052809291908181526020018280546200132f90620023a3565b8015620013805780601f10620013545761010080835404028352916020019162001380565b820191906000526020600020905b8154815290600101906020018083116200136257829003601f168201915b50505091835250506005919091015460ff16151560209091015292915050565b600654604051635eccc37160e01b8152600481018690526060917fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470916001600160a01b0390911690635eccc37190602401600060405180830381865afa1580156200140f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200143991908101906200242c565b805190602001201415620014905760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206d6f6e696b657200000000000000000000000000000000006044820152606401620003b4565b60065460208301516040516397554e8f60e01b81526001600160a01b03909216916397554e8f91620014d091899133918991908b908a906004016200262a565b6020604051808303816000875af1158015620014f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001516919062002383565b620015645760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401620003b4565b60008060008060008880602001905181019062001582919062002987565b94509450945094509450846040516020016200159f9190620027d4565b60405160208183030381529060405280519060200120600286604051620015c79190620027d4565b90815260405160209181900382018120620015e592909101620027f2565b6040516020818303038152906040528051906020012014156200164b5760405162461bcd60e51b815260206004820152601660248201527f7265717565737420616c726561647920657869737473000000000000000000006044820152606401620003b4565b6007546040516332e6c90760e01b81526001600160a01b03909116906332e6c907906200167f908590879060040162002896565b6000604051808303816000875af11580156200169f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620016c99190810190620028b1565b60800151151560011480156200176757506007546040516332e6c90760e01b815233916001600160a01b0316906332e6c907906200170e908690889060040162002896565b6000604051808303816000875af11580156200172e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620017589190810190620028b1565b60a001516001600160a01b0316145b620017a35760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964204b594360a81b6044820152606401620003b4565b60018054620017b29162002a4b565b6001556040805160c0810182528681526020810186905233818301526060810185905260808101839052600060a08201529051600290620017f5908890620027d4565b908152602001604051809103902060008201518160000190805190602001906200182192919062001b4b565b5060208281015180516200183c926001850192019062001b4b565b50604082015160028201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055606082015180516200188d91600384019160209091019062001b4b565b5060808201518051620018ab91600484019160209091019062001b4b565b5060a091909101516005909101805460ff1916911515919091179055604051620018d7908590620027d4565b604051809103902085604051620018ef9190620027d4565b60405180910390207f6ea7b3ccf6aadb8805bbf9690ffc492656f03a9006876832a7f484788a597f85836040516200192891906200229e565b60405180910390a3509298975050505050505050565b6000546001600160a01b031633146200199a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620003b4565b6001600160a01b03811662001a185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401620003b4565b62001a238162001a26565b50565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000606062001a9483858762001aa0565b91509150935093915050565b60006060600085518551855188888860405160200162001ac69695949392919062002a72565b6040516020818303038152906040529050835167ffffffffffffffff81111562001af45762001af462001c6c565b6040519080825280601f01601f19166020018201604052801562001b1f576020820181803683370190505b50915083516020830182516020840160055afa925050935093915050565b610f428062002ada83390190565b82805462001b5990620023a3565b90600052602060002090601f01602090048101928262001b7d576000855562001bc8565b82601f1062001b9857805160ff191683800117855562001bc8565b8280016001018555821562001bc8579182015b8281111562001bc857825182559160200191906001019062001bab565b5062001bd692915062001bda565b5090565b5b8082111562001bd6576000815560010162001bdb565b6001600160a01b038116811462001a2357600080fd5b6000806040838503121562001c1b57600080fd5b823562001c288162001bf1565b9150602083013562001c3a8162001bf1565b809150509250929050565b60006020828403121562001c5857600080fd5b813562001c658162001bf1565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171562001ca85762001ca862001c6c565b60405290565b6040516080810167ffffffffffffffff8111828210171562001ca85762001ca862001c6c565b60405160a0810167ffffffffffffffff8111828210171562001ca85762001ca862001c6c565b604051601f8201601f1916810167ffffffffffffffff8111828210171562001d265762001d2662001c6c565b604052919050565b600067ffffffffffffffff82111562001d4b5762001d4b62001c6c565b50601f01601f191660200190565b600062001d7062001d6a8462001d2e565b62001cfa565b905082815283838301111562001d8557600080fd5b828260208301376000602084830101529392505050565b60006020828403121562001daf57600080fd5b813567ffffffffffffffff81111562001dc757600080fd5b8201601f8101841362001dd957600080fd5b62001dea8482356020840162001d59565b949350505050565b60005b8381101562001e0f57818101518382015260200162001df5565b8381111562001e1f576000848401525b50505050565b6000815180845262001e3f81602086016020860162001df2565b601f01601f19169290920160200192915050565b60c08152600062001e6860c083018962001e25565b828103602084015262001e7c818962001e25565b90506001600160a01b0387166040840152828103606084015262001ea1818762001e25565b9050828103608084015262001eb7818662001e25565b91505082151560a0830152979650505050505050565b60006020828403121562001ee057600080fd5b5035919050565b600082601f83011262001ef957600080fd5b62001c658383356020850162001d59565b801515811462001a2357600080fd5b803562001f268162001f0a565b919050565b80356006811062001f2657600080fd5b600060c0828403121562001f4e57600080fd5b62001f5862001c82565b9050813562001f678162001f0a565b815262001f776020830162001f2b565b602082015262001f8a6040830162001f2b565b604082015262001f9d6060830162001f2b565b606082015260808201356009811062001fb557600080fd5b608082015260a082013567ffffffffffffffff81111562001fd557600080fd5b62001fe38482850162001ee7565b60a08301525092915050565b600082601f8301126200200157600080fd5b8135602067ffffffffffffffff8083111562002021576200202162001c6c565b8260051b6200203283820162001cfa565b93845285810183019383810190888611156200204d57600080fd5b84880192505b858310156200211b578235848111156200206d5760008081fd5b88016080818b03601f1901811315620020865760008081fd5b6200209062001cae565b878301356200209f8162001f0a565b81526040620020b084820162001f2b565b8983015260608085013589811115620020c95760008081fd5b620020d98f8c8389010162001ee7565b8484015250928401359288841115620020f457600091508182fd5b620021048e8b8688010162001ee7565b908301525084525050918401919084019062002053565b98975050505050505050565b600060a082840312156200213a57600080fd5b6200214462001cd4565b9050620021518262001f19565b8152602082013567ffffffffffffffff808211156200216f57600080fd5b6200217d8583860162001ee7565b602084015260408401359150808211156200219757600080fd5b620021a58583860162001ee7565b60408401526060840135915080821115620021bf57600080fd5b620021cd8583860162001f3b565b60608401526080840135915080821115620021e757600080fd5b50620021f68482850162001fef565b60808301525092915050565b600080600080608085870312156200221957600080fd5b84359350602085013567ffffffffffffffff808211156200223957600080fd5b620022478883890162001ee7565b945060408701359150808211156200225e57600080fd5b6200226c8883890162002127565b935060608701359150808211156200228357600080fd5b50620022928782880162002127565b91505092959194509250565b60208152600062001c65602083018462001e25565b602081526000825160c06020840152620022d160e084018262001e25565b90506020840151601f1980858403016040860152620022f1838362001e25565b92506001600160a01b036040870151166060860152606086015191508085840301608086015262002323838362001e25565b925060808601519150808584030160a08601525062002343828262001e25565b91505060a0840151151560c08401528091505092915050565b6000602082840312156200236f57600080fd5b5051919050565b805162001f268162001f0a565b6000602082840312156200239657600080fd5b815162001c658162001f0a565b600181811c90821680620023b857607f821691505b60208210811415620023da57634e487b7160e01b600052602260045260246000fd5b50919050565b600082601f830112620023f257600080fd5b81516200240362001d6a8262001d2e565b8181528460208386010111156200241957600080fd5b62001dea82602083016020870162001df2565b6000602082840312156200243f57600080fd5b815167ffffffffffffffff8111156200245757600080fd5b62001dea84828501620023e0565b634e487b7160e01b600052602160045260246000fd5b600681106200248e576200248e62002465565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015620025295782840389528151608081511515865286820151620024da888801826200247b565b506040808301518282890152620024f48389018262001e25565b925050506060808301519250868203818801525062002514818362001e25565b9a87019a9550505090840190600101620024b0565b5091979650505050505050565b8051151582526000602082015160a060208501526200255960a085018262001e25565b90506040830151848203604086015262002574828262001e25565b9150506060830151848203606086015280511515825260208101516200259e60208401826200247b565b506040810151620025b360408401826200247b565b506060810151620025c860608401826200247b565b50608081015160098110620025e157620025e162002465565b8060808401525060a0810151905060c060a08301526200260560c083018262001e25565b9150506080830151848203608086015262002621828262002492565b95945050505050565b8681526001600160a01b038616602082015260c0604082015260006200265460c083018762002536565b828103606084015262002668818762001e25565b905082810360808401526200267e818662001e25565b905082810360a084015262002694818562002536565b9998505050505050505050565b805162001f268162001bf1565b600080600080600080600080610100898b031215620026cc57600080fd5b885167ffffffffffffffff80821115620026e557600080fd5b620026f38c838d01620023e0565b995060208b01519150808211156200270a57600080fd5b620027188c838d01620023e0565b985060408b0151975060608b01519150808211156200273657600080fd5b620027448c838d01620023e0565b965060808b01519150808211156200275b57600080fd5b620027698c838d01620023e0565b955060a08b01519150808211156200278057600080fd5b6200278e8c838d01620023e0565b945060c08b0151915080821115620027a557600080fd5b50620027b48b828c01620023e0565b925050620027c560e08a01620026a1565b90509295985092959890939650565b60008251620027e881846020870162001df2565b9190910192915050565b600080835481600182811c9150808316806200280f57607f831692505b60208084108214156200283057634e487b7160e01b86526022600452602486fd5b818015620028475760018114620028595762002888565b60ff1986168952848901965062002888565b60008a81526020902060005b86811015620028805781548b82015290850190830162002865565b505084890196505b509498975050505050505050565b82815260406020820152600062001dea604083018462001e25565b600060208284031215620028c457600080fd5b815167ffffffffffffffff80821115620028dd57600080fd5b9083019060c08286031215620028f257600080fd5b620028fc62001c82565b8251828111156200290c57600080fd5b6200291a87828601620023e0565b825250602083015160208201526040830151828111156200293a57600080fd5b6200294887828601620023e0565b60408301525060608301516060820152620029666080840162002376565b60808201526200297960a08401620026a1565b60a082015295945050505050565b600080600080600060a08688031215620029a057600080fd5b855167ffffffffffffffff80821115620029b957600080fd5b620029c789838a01620023e0565b96506020880151915080821115620029de57600080fd5b620029ec89838a01620023e0565b9550604088015191508082111562002a0357600080fd5b62002a1189838a01620023e0565b945060608801519350608088015191508082111562002a2f57600080fd5b5062002a3e88828901620023e0565b9150509295509295909350565b6000821982111562002a6d57634e487b7160e01b600052601160045260246000fd5b500190565b8681528560208201528460408201526000845162002a9881606085016020890162001df2565b84519083019062002ab181606084016020890162001df2565b845191019062002ac981606084016020880162001df2565b016060019897505050505050505056fe6080604052600060055534801561001557600080fd5b50604051610f42380380610f42833981016040819052610034916100a8565b600280546001600160a01b03199081166001600160a01b039687161790915560038054821694861694909417909355600480548416928516929092179091556005556006805490911692909116919091179055610106565b80516001600160a01b03811681146100a357600080fd5b919050565b600080600080600060a086880312156100c057600080fd5b6100c98661008c565b94506100d76020870161008c565b93506100e56040870161008c565b92506100f36060870161008c565b9150608086015190509295509295909350565b610e2d806101156000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063a415bcad11610081578063ddca3f431161005b578063ddca3f4314610189578063e5feb78114610192578063fc0c546a146101a557600080fd5b8063a415bcad14610150578063a59a997314610163578063b334ed861461017657600080fd5b80635badbe4c116100b25780635badbe4c146100f65780638da5cb5b14610112578063928d300e1461013d57600080fd5b80630bdc85d5146100ce578063102680e3146100e3575b600080fd5b6100e16100dc366004610bca565b6101b8565b005b6100e16100f1366004610c0c565b610312565b6100ff60005481565b6040519081526020015b60405180910390f35b600654610125906001600160a01b031681565b6040516001600160a01b039091168152602001610109565b6100e161014b366004610c3c565b6103e3565b6100e161015e366004610c59565b6105d8565b600354610125906001600160a01b031681565b600454610125906001600160a01b031681565b6100ff60015481565b6100e16101a0366004610ccd565b610677565b600254610125906001600160a01b031681565b6006546001600160a01b031633146102175760405162461bcd60e51b815260206004820181905260248201527f6f6e6c792061737369676e6564206f776e65722063616e2064656c656761746560448201526064015b60405180910390fd5b600480546040516334924edb60e21b81526001600160a01b03848116938201939093526000929091169063d2493b6c90602401606060405180830381865afa158015610267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028b9190610d04565b506040517fc04a8a100000000000000000000000000000000000000000000000000000000081526001600160a01b03878116600483015260248201879052919350908316915063c04a8a1090604401600060405180830381600087803b1580156102f457600080fd5b505af1158015610308573d6000803e3d6000fd5b5050505050505050565b6103276001600160a01b03821633308561073d565b600354610341906001600160a01b038381169116846107ee565b6003546040517f573ade810000000000000000000000000000000000000000000000000000000081526001600160a01b03838116600483015260248201859052600160448301523060648301529091169063573ade81906084016020604051808303816000875af11580156103ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103de9190610d46565b505050565b6006546001600160a01b0316331461043d5760405162461bcd60e51b815260206004820181905260248201527f6f6e6c792061737369676e6564206f776e65722063616e2064656c6567617465604482015260640161020e565b600480546040516334924edb60e21b81526001600160a01b03848116938201939093526000929091169063d2493b6c90602401606060405180830381865afa15801561048d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b19190610d04565b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053a9190610d46565b6003546040517f69328dec0000000000000000000000000000000000000000000000000000000081526001600160a01b038681166004830152602482018490523360448301529293509116906369328dec906064016020604051808303816000875af11580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190610d46565b50505050565b6003546040517fa415bcad0000000000000000000000000000000000000000000000000000000081526001600160a01b038781166004830152602482018790526044820186905261ffff8516606483015283811660848301529091169063a415bcad9060a401600060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b505050505050505050565b8015610692576106926001600160a01b03841633308561073d565b6003546106ac906001600160a01b038581169116846107ee565b6003546040517fe8eda9df0000000000000000000000000000000000000000000000000000000081526001600160a01b03858116600483015260248201859052306044830152600060648301529091169063e8eda9df90608401600060405180830381600087803b15801561072057600080fd5b505af1158015610734573d6000803e3d6000fd5b50505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526105d29085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261093c565b80158061088157506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa15801561085b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087f9190610d46565b155b6108f35760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000606482015260840161020e565b6040516001600160a01b0383166024820152604481018290526103de9084907f095ea7b3000000000000000000000000000000000000000000000000000000009060640161078a565b6000610991826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610a219092919063ffffffff16565b8051909150156103de57808060200190518101906109af9190610d5f565b6103de5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161020e565b6060610a308484600085610a3a565b90505b9392505050565b606082471015610ab25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161020e565b843b610b005760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161020e565b600080866001600160a01b03168587604051610b1c9190610da8565b60006040518083038185875af1925050503d8060008114610b59576040519150601f19603f3d011682016040523d82523d6000602084013e610b5e565b606091505b5091509150610b6e828286610b79565b979650505050505050565b60608315610b88575081610a33565b825115610b985782518084602001fd5b8160405162461bcd60e51b815260040161020e9190610dc4565b6001600160a01b0381168114610bc757600080fd5b50565b600080600060608486031215610bdf57600080fd5b8335610bea81610bb2565b9250602084013591506040840135610c0181610bb2565b809150509250925092565b60008060408385031215610c1f57600080fd5b823591506020830135610c3181610bb2565b809150509250929050565b600060208284031215610c4e57600080fd5b8135610a3381610bb2565b600080600080600060a08688031215610c7157600080fd5b8535610c7c81610bb2565b94506020860135935060408601359250606086013561ffff81168114610ca157600080fd5b91506080860135610cb181610bb2565b809150509295509295909350565b8015158114610bc757600080fd5b600080600060608486031215610ce257600080fd5b8335610ced81610bb2565b9250602084013591506040840135610c0181610cbf565b600080600060608486031215610d1957600080fd5b8351610d2481610bb2565b6020850151909350610d3581610bb2565b6040850151909250610c0181610bb2565b600060208284031215610d5857600080fd5b5051919050565b600060208284031215610d7157600080fd5b8151610a3381610cbf565b60005b83811015610d97578181015183820152602001610d7f565b838111156105d25750506000910152565b60008251610dba818460208701610d7c565b9190910192915050565b6020815260008251806020840152610de3816040850160208701610d7c565b601f01601f1916919091016040019291505056fea26469706673582212206ee382b988e951ae1ada90b5b49e0e236f193b20e29b99b35c85ee4611db8c9364736f6c634300080c0033a2646970667358221220db37f15459cb8cb0bbe6df253c7a9477e64ad48e60325911136c2778aee0cbd164736f6c634300080c0033";

type InvoiceAssetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InvoiceAssetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InvoiceAsset__factory extends ContractFactory {
  constructor(...args: InvoiceAssetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _tokenERC20: string,
    _ancon: string,
    _kyx: string,
    _lendingPool: string,
    _dataProvider: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InvoiceAsset> {
    return super.deploy(
      _tokenERC20,
      _ancon,
      _kyx,
      _lendingPool,
      _dataProvider,
      chain,
      overrides || {}
    ) as Promise<InvoiceAsset>;
  }
  getDeployTransaction(
    _tokenERC20: string,
    _ancon: string,
    _kyx: string,
    _lendingPool: string,
    _dataProvider: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenERC20,
      _ancon,
      _kyx,
      _lendingPool,
      _dataProvider,
      chain,
      overrides || {}
    );
  }
  attach(address: string): InvoiceAsset {
    return super.attach(address) as InvoiceAsset;
  }
  connect(signer: Signer): InvoiceAsset__factory {
    return super.connect(signer) as InvoiceAsset__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InvoiceAssetInterface {
    return new utils.Interface(_abi) as InvoiceAssetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InvoiceAsset {
    return new Contract(address, _abi, signerOrProvider) as InvoiceAsset;
  }
}
