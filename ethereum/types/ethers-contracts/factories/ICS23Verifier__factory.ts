/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ICS23Verifier, ICS23VerifierInterface } from "../ICS23Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "hashFromByteSlices",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610865806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e189ffa914610030575b600080fd5b61004361003e366004610608565b610055565b60405190815260200160405180910390f35b600061006082610066565b92915050565b8051600090806100d4576040805160008152602081019182905260029161008d9190610721565b602060405180830381855afa1580156100aa573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906100cd919061075c565b9392505050565b8060011415610100576100cd836000815181106100f3576100f3610775565b602002602001015161014c565b600061010c845161026c565b9050600061012461011f8660008561033a565b610066565b9050600061013661011f87858761033a565b905061014282826103fe565b9695505050505050565b6000808251600161015d91906107a1565b67ffffffffffffffff811115610175576101756105c1565b6040519080825280601f01601f19166020018201604052801561019f576020820181803683370190505b509050600060f81b816000815181106101ba576101ba610775565b60200101906001600160f81b031916908160001a90535060005b835181101561025b578381815181106101ef576101ef610775565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016826102228360016107a1565b8151811061023257610232610775565b60200101906001600160f81b031916908160001a90535080610253816107b9565b9150506101d4565b5060028160405161008d9190610721565b60006001821015610302576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f547279696e6720746f2073706c69742061207472656520776974682073697a6560448201527f203c203100000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b816001141561031357506000919050565b60015b826103228260026107d4565b1015610060576103336002826107d4565b9050610316565b6060600061034884846107f3565b67ffffffffffffffff811115610360576103606105c1565b60405190808252806020026020018201604052801561039357816020015b606081526020019060019003908161037e5790505b50905060005b81518110156103f557856103ad82876107a1565b815181106103bd576103bd610775565b60200260200101518282815181106103d7576103d7610775565b602002602001018190525080806103ed906107b9565b915050610399565b50949350505050565b60008061040c60208061080a565b61041790600161080a565b60ff1667ffffffffffffffff811115610432576104326105c1565b6040519080825280601f01601f19166020018201604052801561045c576020820181803683370190505b509050600160f81b8160008151811061047757610477610775565b60200101906001600160f81b031916908160001a905350600160005b60208110156104fb578581602081106104ae576104ae610775565b1a60f81b8383815181106104c4576104c4610775565b60200101906001600160f81b031916908160001a905350816104e5816107b9565b92505080806104f3906107b9565b915050610493565b5060005b60208110156105675784816020811061051a5761051a610775565b1a60f81b83838151811061053057610530610775565b60200101906001600160f81b031916908160001a90535081610551816107b9565b925050808061055f906107b9565b9150506104ff565b506002826040516105789190610721565b602060405180830381855afa158015610595573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105b8919061075c565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610600576106006105c1565b604052919050565b6000602080838503121561061b57600080fd5b823567ffffffffffffffff8082111561063357600080fd5b8185019150601f868184011261064857600080fd5b82358281111561065a5761065a6105c1565b8060051b6106698682016105d7565b918252848101860191868101908a84111561068357600080fd5b87870192505b83831015610713578235868111156106a15760008081fd5b8701603f81018c136106b35760008081fd5b888101356040888211156106c9576106c96105c1565b6106da828901601f19168c016105d7565b8281528e828486010111156106ef5760008081fd5b828285018d83013760009281018c0192909252508352509187019190870190610689565b9a9950505050505050505050565b6000825160005b818110156107425760208186018101518583015201610728565b81811115610751576000828501525b509190910192915050565b60006020828403121561076e57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156107b4576107b461078b565b500190565b60006000198214156107cd576107cd61078b565b5060010190565b60008160001904831182151516156107ee576107ee61078b565b500290565b6000828210156108055761080561078b565b500390565b600060ff821660ff84168060ff038211156108275761082761078b565b01939250505056fea264697066735822122083c6e9c8a206e99b212e4077fe1477ed008092bf48a2daa18a8aa4dfd00663dd64736f6c634300080b0033";

type ICS23VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ICS23VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ICS23Verifier__factory extends ContractFactory {
  constructor(...args: ICS23VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ICS23Verifier> {
    return super.deploy(overrides || {}) as Promise<ICS23Verifier>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ICS23Verifier {
    return super.attach(address) as ICS23Verifier;
  }
  connect(signer: Signer): ICS23Verifier__factory {
    return super.connect(signer) as ICS23Verifier__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ICS23VerifierInterface {
    return new utils.Interface(_abi) as ICS23VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICS23Verifier {
    return new Contract(address, _abi, signerOrProvider) as ICS23Verifier;
  }
}
