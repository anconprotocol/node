/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ICredentialRegistry,
  ICredentialRegistryInterface,
} from "../ICredentialRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "credentialHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "id",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "iat",
        type: "uint256",
      },
    ],
    name: "CredentialRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "credentialHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "by",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "CredentialRevoked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "credentialHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "from",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exp",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "registerCredential",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "credentialHash",
        type: "bytes32",
      },
    ],
    name: "revokeCredential",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_credentialHash",
        type: "bytes32",
      },
    ],
    name: "status",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "credentialHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "issuer",
        type: "address",
      },
    ],
    name: "exist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ICredentialRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): ICredentialRegistryInterface {
    return new utils.Interface(_abi) as ICredentialRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICredentialRegistry {
    return new Contract(address, _abi, signerOrProvider) as ICredentialRegistry;
  }
}
