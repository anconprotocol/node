/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XDVNFT, XDVNFTInterface } from "../XDVNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "anconprotocolAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dagContractOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeForContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeForPaymentAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForPaymentAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "burnWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060105560006011553480156200001b57600080fd5b5060405162003503380380620035038339810160408190526200003e916200029c565b835184908490620000579060009060208501906200010c565b5080516200006d9060019060208401906200010c565b50506006805460ff19169055506200008533620000ba565b600d80546001600160a01b039384166001600160a01b031991821617909155600e805492909316911617905550620003689050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011a906200032b565b90600052602060002090601f0160209004810192826200013e576000855562000189565b82601f106200015957805160ff191683800117855562000189565b8280016001018555821562000189579182015b82811115620001895782518255916020019190600101906200016c565b50620001979291506200019b565b5090565b5b808211156200019757600081556001016200019c565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001da57600080fd5b81516001600160401b0380821115620001f757620001f7620001b2565b604051601f8301601f19908116603f01168101908282118183101715620002225762000222620001b2565b816040528381526020925086838588010111156200023f57600080fd5b600091505b8382101562000263578582018301518183018401529082019062000244565b83821115620002755760008385830101525b9695505050505050565b80516001600160a01b03811681146200029757600080fd5b919050565b60008060008060808587031215620002b357600080fd5b84516001600160401b0380821115620002cb57600080fd5b620002d988838901620001c8565b95506020870151915080821115620002f057600080fd5b50620002ff87828801620001c8565b93505062000310604086016200027f565b915062000320606086016200027f565b905092959194509250565b600181811c908216806200034057607f821691505b602082108114156200036257634e487b7160e01b600052602260045260246000fd5b50919050565b61318b80620003786000396000f3fe608060405234801561001057600080fd5b50600436106102265760003560e01c8063715018a61161012a578063b86be2ca116100bd578063e53ae1021161008c578063e9cbd82211610071578063e9cbd8221461049f578063ea641b7d146104b2578063f2fde38b146104c557600080fd5b8063e53ae1021461045a578063e985e9c51461046357600080fd5b8063b86be2ca14610418578063b88d4fde1461042b578063c014b9da1461043e578063c87b56dd1461044757600080fd5b80638da5cb5b116100f95780638da5cb5b146103d957806395d89b41146103ea57806397ded632146103f2578063a22cb4651461040557600080fd5b8063715018a61461039a578063756af45f146103a25780637927b898146103b55780637ac3c02f146103c857600080fd5b806340c10f19116101bd5780635600f04f1161018c5780636352211e116101715780636352211e146103615780636c19e7831461037457806370a082311461038757600080fd5b80635600f04f1461034e5780635c975abb1461035657600080fd5b806340c10f19146102f457806342842e0e1461031557806342966c681461032857806351cff8d91461033b57600080fd5b806323b872dd116101f957806323b872dd146102a8578063252498a2146102bb5780632c078e8d146102ce5780633cd559a4146102e157600080fd5b806301ffc9a71461022b57806306fdde0314610253578063081812fc14610268578063095ea7b314610293575b600080fd5b61023e6102393660046125ea565b6104d8565b60405190151581526020015b60405180910390f35b61025b610575565b60405161024a919061265f565b61027b610276366004612672565b610607565b6040516001600160a01b03909116815260200161024a565b6102a66102a13660046126a0565b6106a1565b005b6102a66102b63660046126cc565b6107d3565b6102a66102c9366004612829565b61085b565b6102a66102dc366004612672565b6108cc565b600e5461027b906001600160a01b031681565b6103076103023660046126a0565b61092b565b60405190815260200161024a565b6102a66103233660046126cc565b610a02565b6102a6610336366004612672565b610a1d565b6102a6610349366004612872565b610aa4565b61025b610bed565b60065460ff1661023e565b61027b61036f366004612672565b610c7b565b6102a6610382366004612872565b610d06565b610307610395366004612872565b610d82565b6102a6610e1c565b6102a66103b0366004612872565b610e82565b600f5461027b906001600160a01b031681565b600a546001600160a01b031661027b565b6008546001600160a01b031661027b565b61025b611087565b610307610400366004612b60565b611096565b6102a6610413366004612c15565b61122b565b6102a6610426366004612672565b6112f0565b6102a6610439366004612c4e565b61134f565b61030760105481565b61025b610455366004612672565b6113dd565b61030760115481565b61023e610471366004612cba565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600d5461027b906001600160a01b031681565b6103076104c0366004612b60565b6113e8565b6102a66104d3366004612872565b611552565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061053b57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061056f57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461058490612ce8565b80601f01602080910402602001604051908101604052809291908181526020018280546105b090612ce8565b80156105fd5780601f106105d2576101008083540402835291602001916105fd565b820191906000526020600020905b8154815290600101906020018083116105e057829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166106855760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106ac82610c7b565b9050806001600160a01b0316836001600160a01b031614156107365760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015260840161067c565b336001600160a01b038216148061075257506107528133610471565b6107c45760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015260840161067c565b6107ce8383611631565b505050565b6107de335b8261169f565b6108505760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161067c565b6107ce838383611796565b6008546001600160a01b031633146108b55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067c565b80516108c8906009906020840190612505565b5050565b6008546001600160a01b031633146109265760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067c565b601155565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c40161067c565b6107ce8383836040518060200160405280600081525061134f565b610a26336107d8565b610a985760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656400000000000000000000000000000000606482015260840161067c565b610aa18161196e565b50565b6008546001600160a01b03163314610afe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067c565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610b4d576040519150601f19603f3d011682016040523d82523d6000602084013e610b52565b606091505b509150915081610ba45760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e64204574686572000000000000000000000000604482015260640161067c565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610bdf91815260200190565b60405180910390a250505050565b60098054610bfa90612ce8565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2690612ce8565b8015610c735780601f10610c4857610100808354040283529160200191610c73565b820191906000526020600020905b815481529060010190602001808311610c5657829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b03168061056f5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606482015260840161067c565b6008546001600160a01b03163314610d605760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067c565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610e005760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015260840161067c565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b03163314610e765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067c565b610e806000611977565b565b6008546001600160a01b03163314610edc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067c565b600d546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610f3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f629190612d23565b600d546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610fd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff49190612d3c565b6110405760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c6564000000000000000000000000604482015260640161067c565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161107b91815260200190565b60405180910390a25050565b60606001805461058490612ce8565b600e5460405163bb893b6f60e01b81526000916001600160a01b03169063bb893b6f906110cf90339088908b908b908a90600401612f02565b6020604051808303816000875af11580156110ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111129190612d3c565b61115e5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f66000000000000000000000000604482015260640161067c565b600080868060200190518101906111759190612f5e565b91509150818160405160200161118c929190612feb565b6040516020818303038152906040528051906020012084146111f05760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207061636b6574000000000000000000000000000000000000604482015260640161067c565b6111fe600c80546001019055565b6000611209600c5490565b905061121583826119c9565b61121f81836119e3565b98975050505050505050565b6001600160a01b0382163314156112845760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161067c565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b0316331461134a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067c565b601055565b611359338361169f565b6113cb5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015260840161067c565b6113d784848484611a8c565b50505050565b606061056f82611b0a565b600e5460405163bb893b6f60e01b81526000916001600160a01b03169063bb893b6f9061142190339088908b908b908a90600401612f02565b6020604051808303816000875af1158015611440573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114649190612d3c565b6114b05760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f66000000000000000000000000604482015260640161067c565b6000858060200190518101906114c69190612d23565b9050806040516020016114db91815260200190565b60405160208183030381529060405280519060200120831461153f5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207061636b6574000000000000000000000000000000000000604482015260640161067c565b6115488161196e565b9695505050505050565b6008546001600160a01b031633146115ac5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067c565b6001600160a01b0381166116285760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161067c565b610aa181611977565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061166682610c7b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166117185760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161067c565b600061172383610c7b565b9050806001600160a01b0316846001600160a01b0316148061175e5750836001600160a01b031661175384610607565b6001600160a01b0316145b8061178e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166117a982610c7b565b6001600160a01b0316146118255760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e0000000000000000000000000000000000000000000000606482015260840161067c565b6001600160a01b0382166118a05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161067c565b6118ab838383611c95565b6118b6600082611631565b6001600160a01b03831660009081526003602052604081208054600192906118df908490613039565b90915550506001600160a01b038216600090815260036020526040812080546001929061190d908490613050565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610aa181611d0a565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6108c8828260405180602001604052806000815250611d4a565b6000828152600260205260409020546001600160a01b0316611a6d5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e000000000000000000000000000000000000606482015260840161067c565b600082815260076020908152604090912082516107ce92840190612505565b611a97848484611796565b611aa384848484611dc8565b6113d75760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161067c565b6000818152600260205260409020546060906001600160a01b0316611b975760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e000000000000000000000000000000606482015260840161067c565b60008281526007602052604081208054611bb090612ce8565b80601f0160208091040260200160405190810160405280929190818152602001828054611bdc90612ce8565b8015611c295780601f10611bfe57610100808354040283529160200191611c29565b820191906000526020600020905b815481529060010190602001808311611c0c57829003601f168201915b505050505090506000611c4760408051602081019091526000815290565b9050805160001415611c5a575092915050565b815115611c8c578082604051602001611c74929190613068565b60405160208183030381529060405292505050919050565b61178e84611f11565b60065460ff1615611ce85760405162461bcd60e51b815260206004820152601e60248201527f5844563a20546f6b656e20657865637574696f6e206973207061757365640000604482015260640161067c565b6001600160a01b038316611cff57611cff33612007565b6107ce838383612165565b611d13816121de565b60008181526007602052604090208054611d2c90612ce8565b159050610aa1576000818152600760205260408120610aa191612589565b611d548383612285565b611d616000848484611dc8565b6107ce5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161067c565b60006001600160a01b0384163b15611f0657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e0c903390899088908890600401613097565b6020604051808303816000875af1925050508015611e47575060408051601f3d908101601f19168201909252611e44918101906130c9565b60015b611eec573d808015611e75576040519150601f19603f3d011682016040523d82523d6000602084013e611e7a565b606091505b508051611ee45760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606482015260840161067c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061178e565b506001949350505050565b6000818152600260205260409020546060906001600160a01b0316611f9e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606482015260840161067c565b6000611fb560408051602081019091526000815290565b90506000815111611fd55760405180602001604052806000815250612000565b80611fdf846123d3565b604051602001611ff0929190613068565b6040516020818303038152906040525b9392505050565b600d546011546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af115801561207c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120a09190612d3c565b6121125760405162461bcd60e51b815260206004820152602260248201527f5844563a205472616e73666572206661696c656420666f72207265636970696560448201527f6e74000000000000000000000000000000000000000000000000000000000000606482015260840161067c565b806001600160a01b03167fff781da90c6b849a72bafc99aedde3dff0b039f697f31c21e96d587accee276060115460105460405161215a929190918252602082015260400190565b60405180910390a250565b60065460ff16156107ce5760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201527f68696c6520706175736564000000000000000000000000000000000000000000606482015260840161067c565b60006121e982610c7b565b90506121f781600084611c95565b612202600083611631565b6001600160a01b038116600090815260036020526040812080546001929061222b908490613039565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0382166122db5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161067c565b6000818152600260205260409020546001600160a01b0316156123405760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161067c565b61234c60008383611c95565b6001600160a01b0382166000908152600360205260408120805460019290612375908490613050565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60608161241357505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561243d5780612427816130e6565b91506124369050600a83613117565b9150612417565b60008167ffffffffffffffff8111156124585761245861270d565b6040519080825280601f01601f191660200182016040528015612482576020820181803683370190505b5090505b841561178e57612497600183613039565b91506124a4600a8661312b565b6124af906030613050565b60f81b8183815181106124c4576124c461313f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506124fe600a86613117565b9450612486565b82805461251190612ce8565b90600052602060002090601f0160209004810192826125335760008555612579565b82601f1061254c57805160ff1916838001178555612579565b82800160010185558215612579579182015b8281111561257957825182559160200191906001019061255e565b506125859291506125bf565b5090565b50805461259590612ce8565b6000825580601f106125a5575050565b601f016020900490600052602060002090810190610aa191905b5b8082111561258557600081556001016125c0565b6001600160e01b031981168114610aa157600080fd5b6000602082840312156125fc57600080fd5b8135612000816125d4565b60005b8381101561262257818101518382015260200161260a565b838111156113d75750506000910152565b6000815180845261264b816020860160208601612607565b601f01601f19169290920160200192915050565b6020815260006120006020830184612633565b60006020828403121561268457600080fd5b5035919050565b6001600160a01b0381168114610aa157600080fd5b600080604083850312156126b357600080fd5b82356126be8161268b565b946020939093013593505050565b6000806000606084860312156126e157600080fd5b83356126ec8161268b565b925060208401356126fc8161268b565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156127465761274661270d565b60405290565b6040516080810167ffffffffffffffff811182821017156127465761274661270d565b60405160a0810167ffffffffffffffff811182821017156127465761274661270d565b604051601f8201601f1916810167ffffffffffffffff811182821017156127bb576127bb61270d565b604052919050565b600067ffffffffffffffff8211156127dd576127dd61270d565b50601f01601f191660200190565b60006127fe6127f9846127c3565b612792565b905082815283838301111561281257600080fd5b828260208301376000602084830101529392505050565b60006020828403121561283b57600080fd5b813567ffffffffffffffff81111561285257600080fd5b8201601f8101841361286357600080fd5b61178e848235602084016127eb565b60006020828403121561288457600080fd5b81356120008161268b565b600082601f8301126128a057600080fd5b612000838335602085016127eb565b8015158114610aa157600080fd5b80356128c8816128af565b919050565b8035600681106128c857600080fd5b600060c082840312156128ee57600080fd5b6128f6612723565b90508135612903816128af565b8152612911602083016128cd565b6020820152612922604083016128cd565b6040820152612933606083016128cd565b606082015260808201356009811061294a57600080fd5b608082015260a082013567ffffffffffffffff81111561296957600080fd5b6129758482850161288f565b60a08301525092915050565b600082601f83011261299257600080fd5b8135602067ffffffffffffffff808311156129af576129af61270d565b8260051b6129be838201612792565b93845285810183019383810190888611156129d857600080fd5b84880192505b8583101561121f578235848111156129f65760008081fd5b88016080818b03601f1901811315612a0e5760008081fd5b612a1661274c565b87830135612a23816128af565b81526040612a328482016128cd565b8983015260608085013589811115612a4a5760008081fd5b612a588f8c8389010161288f565b8484015250928401359288841115612a7257600091508182fd5b612a808e8b8688010161288f565b90830152508452505091840191908401906129de565b600060a08284031215612aa857600080fd5b612ab061276f565b9050612abb826128bd565b8152602082013567ffffffffffffffff80821115612ad857600080fd5b612ae48583860161288f565b60208401526040840135915080821115612afd57600080fd5b612b098583860161288f565b60408401526060840135915080821115612b2257600080fd5b612b2e858386016128dc565b60608401526080840135915080821115612b4757600080fd5b50612b5484828501612981565b60808301525092915050565b600080600080600060a08688031215612b7857600080fd5b853567ffffffffffffffff80821115612b9057600080fd5b612b9c89838a0161288f565b96506020880135915080821115612bb257600080fd5b612bbe89838a0161288f565b95506040880135915080821115612bd457600080fd5b612be089838a01612a96565b94506060880135915080821115612bf657600080fd5b50612c0388828901612a96565b95989497509295608001359392505050565b60008060408385031215612c2857600080fd5b8235612c338161268b565b91506020830135612c43816128af565b809150509250929050565b60008060008060808587031215612c6457600080fd5b8435612c6f8161268b565b93506020850135612c7f8161268b565b925060408501359150606085013567ffffffffffffffff811115612ca257600080fd5b612cae8782880161288f565b91505092959194509250565b60008060408385031215612ccd57600080fd5b8235612cd88161268b565b91506020830135612c438161268b565b600181811c90821680612cfc57607f821691505b60208210811415612d1d57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215612d3557600080fd5b5051919050565b600060208284031215612d4e57600080fd5b8151612000816128af565b634e487b7160e01b600052602160045260246000fd5b60068110612d7f57612d7f612d59565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015612e125782840389528151608081511515865286820151612dc888880182612d6f565b506040808301518282890152612de083890182612633565b9250505060608083015192508682038188015250612dfe8183612633565b9a87019a9550505090840190600101612da1565b5091979650505050505050565b8051151582526000602082015160a06020850152612e4060a0850182612633565b905060408301518482036040860152612e598282612633565b915050606083015184820360608601528051151582526020810151612e816020840182612d6f565b506040810151612e946040840182612d6f565b506060810151612ea76060840182612d6f565b50608081015160098110612ebd57612ebd612d59565b8060808401525060a0810151905060c060a0830152612edf60c0830182612633565b91505060808301518482036080860152612ef98282612d83565b95945050505050565b6001600160a01b038616815260a060208201526000612f2460a0830187612e1f565b8281036040840152612f368187612633565b90508281036060840152612f4a8186612633565b9050828103608084015261121f8185612e1f565b60008060408385031215612f7157600080fd5b8251612f7c8161268b565b602084015190925067ffffffffffffffff811115612f9957600080fd5b8301601f81018513612faa57600080fd5b8051612fb86127f9826127c3565b818152866020838501011115612fcd57600080fd5b612fde826020830160208601612607565b8093505050509250929050565b6bffffffffffffffffffffffff198360601b16815260008251613015816014850160208701612607565b919091016014019392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561304b5761304b613023565b500390565b6000821982111561306357613063613023565b500190565b6000835161307a818460208801612607565b83519083019061308e818360208801612607565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526115486080830184612633565b6000602082840312156130db57600080fd5b8151612000816125d4565b60006000198214156130fa576130fa613023565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261312657613126613101565b500490565b60008261313a5761313a613101565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220f897075abcc1be3dd0c88385956630b6f3e2771cd817d20b1532a12403579eac64736f6c634300080b0033";

type XDVNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVNFT__factory extends ContractFactory {
  constructor(...args: XDVNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      overrides || {}
    ) as Promise<XDVNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      overrides || {}
    );
  }
  attach(address: string): XDVNFT {
    return super.attach(address) as XDVNFT;
  }
  connect(signer: Signer): XDVNFT__factory {
    return super.connect(signer) as XDVNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVNFTInterface {
    return new utils.Interface(_abi) as XDVNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): XDVNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVNFT;
  }
}
