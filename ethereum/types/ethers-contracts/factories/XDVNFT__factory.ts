/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XDVNFT, XDVNFTInterface } from "../XDVNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "anconprotocolAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "authenticate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dagContractOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeForContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "serviceFeeForPaymentAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForPaymentAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferURI",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadataUri",
        type: "string",
      },
      {
        internalType: "address",
        name: "transferTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferMetadataOwnership",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060105560006011553480156200001b57600080fd5b50604051620037a2380380620037a28339810160408190526200003e916200029c565b835184908490620000579060009060208501906200010c565b5080516200006d9060019060208401906200010c565b50506006805460ff19169055506200008533620000ba565b600d80546001600160a01b039384166001600160a01b031991821617909155600e805492909316911617905550620003689050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011a906200032b565b90600052602060002090601f0160209004810192826200013e576000855562000189565b82601f106200015957805160ff191683800117855562000189565b8280016001018555821562000189579182015b82811115620001895782518255916020019190600101906200016c565b50620001979291506200019b565b5090565b5b808211156200019757600081556001016200019c565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001da57600080fd5b81516001600160401b0380821115620001f757620001f7620001b2565b604051601f8301601f19908116603f01168101908282118183101715620002225762000222620001b2565b816040528381526020925086838588010111156200023f57600080fd5b600091505b8382101562000263578582018301518183018401529082019062000244565b83821115620002755760008385830101525b9695505050505050565b80516001600160a01b03811681146200029757600080fd5b919050565b60008060008060808587031215620002b357600080fd5b84516001600160401b0380821115620002cb57600080fd5b620002d988838901620001c8565b95506020870151915080821115620002f057600080fd5b50620002ff87828801620001c8565b93505062000310604086016200027f565b915062000320606086016200027f565b905092959194509250565b600181811c908216806200034057607f821691505b602082108114156200036257634e487b7160e01b600052602260045260246000fd5b50919050565b61342a80620003786000396000f3fe608060405234801561001057600080fd5b506004361061025c5760003560e01c80636c19e78311610145578063a22cb465116100bd578063c87b56dd1161008c578063e985e9c511610071578063e985e9c5146104f7578063e9cbd82214610533578063f2fde38b1461054657600080fd5b8063c87b56dd146104db578063e53ae102146104ee57600080fd5b8063a22cb46514610499578063b86be2ca146104ac578063b88d4fde146104bf578063c014b9da146104d257600080fd5b80637927b898116101145780638da5cb5b116100f95780638da5cb5b1461046d57806395d89b411461047e578063a0d9c7211461048657600080fd5b80637927b898146104495780637ac3c02f1461045c57600080fd5b80636c19e7831461040857806370a082311461041b578063715018a61461042e578063756af45f1461043657600080fd5b80632d4da937116101d857806342842e0e116101a75780635600f04f1161018c5780635600f04f146103e25780635c975abb146103ea5780636352211e146103f557600080fd5b806342842e0e146103bc57806342966c68146103cf57600080fd5b80632d4da9371461037057806330ba1adf146103835780633cd559a41461039657806340c10f19146103a957600080fd5b8063150b7a021161022f57806323b872dd1161021457806323b872dd14610337578063252498a21461034a5780632c078e8d1461035d57600080fd5b8063150b7a02146102de5780631777110d1461031657600080fd5b806301ffc9a71461026157806306fdde0314610289578063081812fc1461029e578063095ea7b3146102c9575b600080fd5b61027461026f366004612705565b610559565b60405190151581526020015b60405180910390f35b6102916105f6565b604051610280919061277a565b6102b16102ac36600461278d565b610688565b6040516001600160a01b039091168152602001610280565b6102dc6102d73660046127bb565b610722565b005b6102fd6102ec3660046127e7565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610280565b610329610324366004612c77565b610854565b604051908152602001610280565b6102dc610345366004612d24565b610988565b6102dc610358366004612d65565b610a10565b6102dc61036b36600461278d565b610a81565b61032961037e366004612d9a565b610ae0565b610274610391366004612de3565b610b5e565b600e546102b1906001600160a01b031681565b6103296103b73660046127bb565b610ba0565b6102dc6103ca366004612d24565b610c1e565b6102dc6103dd36600461278d565b610c39565b610291610cc0565b60065460ff16610274565b6102b161040336600461278d565b610d4e565b6102dc610416366004612e2a565b610dd9565b610329610429366004612e2a565b610e55565b6102dc610eef565b6102dc610444366004612e2a565b610f55565b600f546102b1906001600160a01b031681565b600a546001600160a01b03166102b1565b6008546001600160a01b03166102b1565b61029161115a565b6103296104943660046127bb565b611169565b6102dc6104a7366004612e47565b6111e7565b6102dc6104ba36600461278d565b6112ac565b6102dc6104cd366004612e80565b61130b565b61032960105481565b6102916104e936600461278d565b611399565b61032960115481565b610274610505366004612ee0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600d546102b1906001600160a01b031681565b6102dc610554366004612e2a565b6113a4565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806105bc57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806105f057507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461060590612f0e565b80601f016020809104026020016040519081016040528092919081815260200182805461063190612f0e565b801561067e5780601f106106535761010080835404028352916020019161067e565b820191906000526020600020905b81548152906001019060200180831161066157829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166107065760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061072d82610d4e565b9050806001600160a01b0316836001600160a01b031614156107b75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016106fd565b336001600160a01b03821614806107d357506107d38133610505565b6108455760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106fd565b61084f8383611483565b505050565b600e546040517f354763d90000000000000000000000000000000000000000000000000000000081526000916001600160a01b03169063354763d9906108a29088908890879060040161300f565b6020604051808303816000875af11580156108c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e59190613114565b6109315760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f6600000000000000000000000060448201526064016106fd565b61093f600c80546001019055565b600080858060200190518101906109569190613131565b915091506000610965600c5490565b905061097183826114f1565b61097b818361150b565b925050505b949350505050565b610993335b826115b4565b610a055760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016106fd565b61084f8383836116a7565b6008546001600160a01b03163314610a6a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b8051610a7d906009906020840190612620565b5050565b6008546001600160a01b03163314610adb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b601155565b6040516001600160a01b03831660248201526044810182905260009060099060640160408051601f198184030181529181526020820180516001600160e01b03167f85fa63ef000000000000000000000000000000000000000000000000000000001790525163138db8bf60e31b81526106fd9291906004016131be565b6020810151604082015160608301516000929190831a33610b8c610b8383601b613290565b8890868661187f565b6001600160a01b0316149695505050505050565b6040516001600160a01b03831660248201526044810182905260009060099060640160408051601f198184030181529181526020820180516001600160e01b03167f6de436f8000000000000000000000000000000000000000000000000000000001790525163138db8bf60e31b81526106fd9291906004016131be565b61084f8383836040518060200160405280600081525061130b565b610c423361098d565b610cb45760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f7665640000000000000000000000000000000060648201526084016106fd565b610cbd816118a7565b50565b60098054610ccd90612f0e565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf990612f0e565b8015610d465780601f10610d1b57610100808354040283529160200191610d46565b820191906000526020600020905b815481529060010190602001808311610d2957829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806105f05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016106fd565b6008546001600160a01b03163314610e335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610ed35760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016106fd565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b03163314610f495760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b610f5360006118b0565b565b6008546001600160a01b03163314610faf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b600d546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611011573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103591906132b5565b600d546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156110a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c79190613114565b6111135760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c656400000000000000000000000060448201526064016106fd565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161114e91815260200190565b60405180910390a25050565b60606001805461060590612f0e565b6040516001600160a01b03831660248201526044810182905260009060099060640160408051601f198184030181529181526020820180516001600160e01b03167f678c2428000000000000000000000000000000000000000000000000000000001790525163138db8bf60e31b81526106fd9291906004016131be565b6001600160a01b0382163314156112405760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106fd565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b031633146113065760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b601055565b61131533836115b4565b6113875760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016106fd565b61139384848484611902565b50505050565b60606105f082611980565b6008546001600160a01b031633146113fe5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b6001600160a01b03811661147a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106fd565b610cbd816118b0565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906114b882610d4e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610a7d828260405180602001604052806000815250611b0b565b6000828152600260205260409020546001600160a01b03166115955760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016106fd565b6000828152600760209081526040909120825161084f92840190612620565b6000818152600260205260408120546001600160a01b031661162d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106fd565b600061163883610d4e565b9050806001600160a01b0316846001600160a01b031614806116735750836001600160a01b031661166884610688565b6001600160a01b0316145b8061098057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610980565b826001600160a01b03166116ba82610d4e565b6001600160a01b0316146117365760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016106fd565b6001600160a01b0382166117b15760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106fd565b6117bc838383611b89565b6117c7600082611483565b6001600160a01b03831660009081526003602052604081208054600192906117f09084906132ce565b90915550506001600160a01b038216600090815260036020526040812080546001929061181e9084906132e5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600080600061189087878787611bfe565b9150915061189d81611ceb565b5095945050505050565b610cbd81611ea6565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61190d8484846116a7565b61191984848484611ee6565b6113935760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016106fd565b6000818152600260205260409020546060906001600160a01b0316611a0d5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000060648201526084016106fd565b60008281526007602052604081208054611a2690612f0e565b80601f0160208091040260200160405190810160405280929190818152602001828054611a5290612f0e565b8015611a9f5780601f10611a7457610100808354040283529160200191611a9f565b820191906000526020600020905b815481529060010190602001808311611a8257829003601f168201915b505050505090506000611abd60408051602081019091526000815290565b9050805160001415611ad0575092915050565b815115611b02578082604051602001611aea9291906132fd565b60405160208183030381529060405292505050919050565b6109808461202c565b611b158383612122565b611b226000848484611ee6565b61084f5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016106fd565b60065460ff1615611bdc5760405162461bcd60e51b815260206004820152601e60248201527f5844563a20546f6b656e20657865637574696f6e20697320706175736564000060448201526064016106fd565b6001600160a01b038316611bf357611bf333612270565b61084f8383836123ce565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611c355750600090506003611ce2565b8460ff16601b14158015611c4d57508460ff16601c14155b15611c5e5750600090506004611ce2565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611cb2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611cdb57600060019250925050611ce2565b9150600090505b94509492505050565b6000816004811115611cff57611cff612f49565b1415611d085750565b6001816004811115611d1c57611d1c612f49565b1415611d6a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106fd565b6002816004811115611d7e57611d7e612f49565b1415611dcc5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106fd565b6003816004811115611de057611de0612f49565b1415611e395760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106fd565b6004816004811115611e4d57611e4d612f49565b1415610cbd5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106fd565b611eaf81612447565b60008181526007602052604090208054611ec890612f0e565b159050610cbd576000818152600760205260408120610cbd916126a4565b60006001600160a01b0384163b1561202457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611f2a90339089908890889060040161332c565b6020604051808303816000875af1925050508015611f65575060408051601f3d908101601f19168201909252611f6291810190613368565b60015b61200a573d808015611f93576040519150601f19603f3d011682016040523d82523d6000602084013e611f98565b606091505b5080516120025760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016106fd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610980565b506001610980565b6000818152600260205260409020546060906001600160a01b03166120b95760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016106fd565b60006120d060408051602081019091526000815290565b905060008151116120f0576040518060200160405280600081525061211b565b806120fa846124ee565b60405160200161210b9291906132fd565b6040516020818303038152906040525b9392505050565b6001600160a01b0382166121785760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106fd565b6000818152600260205260409020546001600160a01b0316156121dd5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106fd565b6121e960008383611b89565b6001600160a01b03821660009081526003602052604081208054600192906122129084906132e5565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600d546011546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af11580156122e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123099190613114565b61237b5760405162461bcd60e51b815260206004820152602260248201527f5844563a205472616e73666572206661696c656420666f72207265636970696560448201527f6e7400000000000000000000000000000000000000000000000000000000000060648201526084016106fd565b806001600160a01b03167fff781da90c6b849a72bafc99aedde3dff0b039f697f31c21e96d587accee27606011546010546040516123c3929190918252602082015260400190565b60405180910390a250565b60065460ff161561084f5760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201527f68696c652070617573656400000000000000000000000000000000000000000060648201526084016106fd565b600061245282610d4e565b905061246081600084611b89565b61246b600083611483565b6001600160a01b03811660009081526003602052604081208054600192906124949084906132ce565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60608161252e57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115612558578061254281613385565b91506125519050600a836133b6565b9150612532565b60008167ffffffffffffffff81111561257357612573612886565b6040519080825280601f01601f19166020018201604052801561259d576020820181803683370190505b5090505b8415610980576125b26001836132ce565b91506125bf600a866133ca565b6125ca9060306132e5565b60f81b8183815181106125df576125df6133de565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612619600a866133b6565b94506125a1565b82805461262c90612f0e565b90600052602060002090601f01602090048101928261264e5760008555612694565b82601f1061266757805160ff1916838001178555612694565b82800160010185558215612694579182015b82811115612694578251825591602001919060010190612679565b506126a09291506126da565b5090565b5080546126b090612f0e565b6000825580601f106126c0575050565b601f016020900490600052602060002090810190610cbd91905b5b808211156126a057600081556001016126db565b6001600160e01b031981168114610cbd57600080fd5b60006020828403121561271757600080fd5b813561211b816126ef565b60005b8381101561273d578181015183820152602001612725565b838111156113935750506000910152565b60008151808452612766816020860160208601612722565b601f01601f19169290920160200192915050565b60208152600061211b602083018461274e565b60006020828403121561279f57600080fd5b5035919050565b6001600160a01b0381168114610cbd57600080fd5b600080604083850312156127ce57600080fd5b82356127d9816127a6565b946020939093013593505050565b6000806000806000608086880312156127ff57600080fd5b853561280a816127a6565b9450602086013561281a816127a6565b935060408601359250606086013567ffffffffffffffff8082111561283e57600080fd5b818801915088601f83011261285257600080fd5b81358181111561286157600080fd5b89602082850101111561287357600080fd5b9699959850939650602001949392505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156128bf576128bf612886565b60405290565b6040516080810167ffffffffffffffff811182821017156128bf576128bf612886565b60405160a0810167ffffffffffffffff811182821017156128bf576128bf612886565b604051601f8201601f1916810167ffffffffffffffff8111828210171561293457612934612886565b604052919050565b600067ffffffffffffffff82111561295657612956612886565b50601f01601f191660200190565b600082601f83011261297557600080fd5b81356129886129838261293c565b61290b565b81815284602083860101111561299d57600080fd5b816020850160208301376000918101602001919091529392505050565b8015158114610cbd57600080fd5b80356129d3816129ba565b919050565b8035600681106129d357600080fd5b600060c082840312156129f957600080fd5b612a0161289c565b90508135612a0e816129ba565b8152612a1c602083016129d8565b6020820152612a2d604083016129d8565b6040820152612a3e606083016129d8565b6060820152608082013560098110612a5557600080fd5b608082015260a082013567ffffffffffffffff811115612a7457600080fd5b612a8084828501612964565b60a08301525092915050565b600082601f830112612a9d57600080fd5b8135602067ffffffffffffffff80831115612aba57612aba612886565b8260051b612ac983820161290b565b9384528581018301938381019088861115612ae357600080fd5b84880192505b85831015612ba157823584811115612b015760008081fd5b88016080818b03601f1901811315612b195760008081fd5b612b216128c5565b87830135612b2e816129ba565b81526040612b3d8482016129d8565b8983015260608085013589811115612b555760008081fd5b612b638f8c83890101612964565b8484015250928401359288841115612b7d57600091508182fd5b612b8b8e8b86880101612964565b9083015250845250509184019190840190612ae9565b98975050505050505050565b600060a08284031215612bbf57600080fd5b612bc76128e8565b9050612bd2826129c8565b8152602082013567ffffffffffffffff80821115612bef57600080fd5b612bfb85838601612964565b60208401526040840135915080821115612c1457600080fd5b612c2085838601612964565b60408401526060840135915080821115612c3957600080fd5b612c45858386016129e7565b60608401526080840135915080821115612c5e57600080fd5b50612c6b84828501612a8c565b60808301525092915050565b60008060008060808587031215612c8d57600080fd5b843567ffffffffffffffff80821115612ca557600080fd5b612cb188838901612964565b95506020870135915080821115612cc757600080fd5b612cd388838901612964565b94506040870135915080821115612ce957600080fd5b612cf588838901612bad565b93506060870135915080821115612d0b57600080fd5b50612d1887828801612bad565b91505092959194509250565b600080600060608486031215612d3957600080fd5b8335612d44816127a6565b92506020840135612d54816127a6565b929592945050506040919091013590565b600060208284031215612d7757600080fd5b813567ffffffffffffffff811115612d8e57600080fd5b61098084828501612964565b600080600060608486031215612daf57600080fd5b833567ffffffffffffffff811115612dc657600080fd5b612dd286828701612964565b9350506020840135612d54816127a6565b60008060408385031215612df657600080fd5b82359150602083013567ffffffffffffffff811115612e1457600080fd5b612e2085828601612964565b9150509250929050565b600060208284031215612e3c57600080fd5b813561211b816127a6565b60008060408385031215612e5a57600080fd5b8235612e65816127a6565b91506020830135612e75816129ba565b809150509250929050565b60008060008060808587031215612e9657600080fd5b8435612ea1816127a6565b93506020850135612eb1816127a6565b925060408501359150606085013567ffffffffffffffff811115612ed457600080fd5b612d1887828801612964565b60008060408385031215612ef357600080fd5b8235612efe816127a6565b91506020830135612e75816127a6565b600181811c90821680612f2257607f821691505b60208210811415612f4357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60068110612f6f57612f6f612f49565b9052565b600081518084526020808501808196508360051b8101915082860160005b858110156130025782840389528151608081511515865286820151612fb888880182612f5f565b506040808301518282890152612fd08389018261274e565b9250505060608083015192508682038188015250612fee818361274e565b9a87019a9550505090840190600101612f91565b5091979650505050505050565b600060608083526130228184018761274e565b8381036020850152613034818761274e565b90508381036040850152845115158152602085015160a0602083015261305d60a083018261274e565b905060408601518282036040840152613076828261274e565b9150508286015182820384840152805115158252602081015161309c6020840182612f5f565b5060408101516130af6040840182612f5f565b50838101516130c085840182612f5f565b5060808101519350600984106130d8576130d8612f49565b83608083015260a081015193505060c060a08201526130fa60c082018461274e565b92505060808501518183036080830152612ba18382612f73565b60006020828403121561312657600080fd5b815161211b816129ba565b6000806040838503121561314457600080fd5b825161314f816127a6565b602084015190925067ffffffffffffffff81111561316c57600080fd5b8301601f8101851361317d57600080fd5b805161318b6129838261293c565b8181528660208385010111156131a057600080fd5b6131b1826020830160208601612722565b8093505050509250929050565b60408152600080845481600182811c9150808316806131de57607f831692505b60208084108214156131fe57634e487b7160e01b86526022600452602486fd5b604088018490526060880182801561321d576001811461322e57613259565b60ff19871682528282019750613259565b60008c81526020902060005b878110156132535781548482015290860190840161323a565b83019850505b5050878603818901525050505050613271818561274e565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156132ad576132ad61327a565b019392505050565b6000602082840312156132c757600080fd5b5051919050565b6000828210156132e0576132e061327a565b500390565b600082198211156132f8576132f861327a565b500190565b6000835161330f818460208801612722565b835190830190613323818360208801612722565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261335e608083018461274e565b9695505050505050565b60006020828403121561337a57600080fd5b815161211b816126ef565b60006000198214156133995761339961327a565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826133c5576133c56133a0565b500490565b6000826133d9576133d96133a0565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212209173b13cc874be263e50e025a8ac2395ae026149070337fd165b74046b8dddd664736f6c634300080b0033";

type XDVNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVNFT__factory extends ContractFactory {
  constructor(...args: XDVNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      overrides || {}
    ) as Promise<XDVNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      overrides || {}
    );
  }
  attach(address: string): XDVNFT {
    return super.attach(address) as XDVNFT;
  }
  connect(signer: Signer): XDVNFT__factory {
    return super.connect(signer) as XDVNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVNFTInterface {
    return new utils.Interface(_abi) as XDVNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): XDVNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVNFT;
  }
}
