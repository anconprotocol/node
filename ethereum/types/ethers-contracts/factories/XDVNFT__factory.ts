/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XDVNFT, XDVNFTInterface } from "../XDVNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "anconprotocolAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dagContractOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeForContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "serviceFeeForPaymentAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForPaymentAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferURI",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadataUri",
        type: "string",
      },
      {
        internalType: "address",
        name: "transferTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferMetadataOwnership",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060105560006011553480156200001b57600080fd5b50604051620033f6380380620033f68339810160408190526200003e916200029c565b835184908490620000579060009060208501906200010c565b5080516200006d9060019060208401906200010c565b50506006805460ff19169055506200008533620000ba565b600d80546001600160a01b039384166001600160a01b031991821617909155600e805492909316911617905550620003689050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011a906200032b565b90600052602060002090601f0160209004810192826200013e576000855562000189565b82601f106200015957805160ff191683800117855562000189565b8280016001018555821562000189579182015b82811115620001895782518255916020019190600101906200016c565b50620001979291506200019b565b5090565b5b808211156200019757600081556001016200019c565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001da57600080fd5b81516001600160401b0380821115620001f757620001f7620001b2565b604051601f8301601f19908116603f01168101908282118183101715620002225762000222620001b2565b816040528381526020925086838588010111156200023f57600080fd5b600091505b8382101562000263578582018301518183018401529082019062000244565b83821115620002755760008385830101525b9695505050505050565b80516001600160a01b03811681146200029757600080fd5b919050565b60008060008060808587031215620002b357600080fd5b84516001600160401b0380821115620002cb57600080fd5b620002d988838901620001c8565b95506020870151915080821115620002f057600080fd5b50620002ff87828801620001c8565b93505062000310604086016200027f565b915062000320606086016200027f565b905092959194509250565b600181811c908216806200034057607f821691505b602082108114156200036257634e487b7160e01b600052602260045260246000fd5b50919050565b61307e80620003786000396000f3fe608060405234801561001057600080fd5b50600436106102415760003560e01c80636c19e78311610145578063a22cb465116100bd578063c87b56dd1161008c578063e985e9c511610071578063e985e9c5146104c9578063e9cbd82214610505578063f2fde38b1461051857600080fd5b8063c87b56dd146104ad578063e53ae102146104c057600080fd5b8063a22cb4651461046b578063b86be2ca1461047e578063b88d4fde14610491578063c014b9da146104a457600080fd5b80637927b898116101145780638da5cb5b116100f95780638da5cb5b1461043f57806395d89b4114610450578063a0d9c7211461045857600080fd5b80637927b8981461041b5780637ac3c02f1461042e57600080fd5b80636c19e783146103da57806370a08231146103ed578063715018a614610400578063756af45f1461040857600080fd5b80632c078e8d116101d857806342842e0e116101a75780635600f04f1161018c5780635600f04f146103b45780635c975abb146103bc5780636352211e146103c757600080fd5b806342842e0e1461038e57806342966c68146103a157600080fd5b80632c078e8d146103425780632d4da937146103555780633cd559a41461036857806340c10f191461037b57600080fd5b8063150b7a0211610214578063150b7a02146102c35780631777110d146102fb57806323b872dd1461031c578063252498a21461032f57600080fd5b806301ffc9a71461024657806306fdde031461026e578063081812fc14610283578063095ea7b3146102ae575b600080fd5b6102596102543660046123c5565b61052b565b60405190151581526020015b60405180910390f35b6102766105c8565b604051610265919061243a565b61029661029136600461244d565b61065a565b6040516001600160a01b039091168152602001610265565b6102c16102bc36600461247b565b6106f4565b005b6102e26102d13660046124a7565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610265565b61030e610309366004612937565b610826565b604051908152602001610265565b6102c161032a3660046129e4565b61095a565b6102c161033d366004612a25565b6109e2565b6102c161035036600461244d565b610a53565b61030e610363366004612a5a565b610ab2565b600e54610296906001600160a01b031681565b61030e61038936600461247b565b610b30565b6102c161039c3660046129e4565b610bae565b6102c16103af36600461244d565b610bc9565b610276610c50565b60065460ff16610259565b6102966103d536600461244d565b610cde565b6102c16103e8366004612aa3565b610d69565b61030e6103fb366004612aa3565b610de5565b6102c1610e7f565b6102c1610416366004612aa3565b610ee5565b600f54610296906001600160a01b031681565b600a546001600160a01b0316610296565b6008546001600160a01b0316610296565b6102766110ea565b61030e61046636600461247b565b6110f9565b6102c1610479366004612ac0565b611177565b6102c161048c36600461244d565b61123c565b6102c161049f366004612af9565b61129b565b61030e60105481565b6102766104bb36600461244d565b611329565b61030e60115481565b6102596104d7366004612b59565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600d54610296906001600160a01b031681565b6102c1610526366004612aa3565b611334565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061058e57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806105c257507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600080546105d790612b87565b80601f016020809104026020016040519081016040528092919081815260200182805461060390612b87565b80156106505780601f1061062557610100808354040283529160200191610650565b820191906000526020600020905b81548152906001019060200180831161063357829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166106d85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006106ff82610cde565b9050806001600160a01b0316836001600160a01b031614156107895760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016106cf565b336001600160a01b03821614806107a557506107a581336104d7565b6108175760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106cf565b6108218383611413565b505050565b600e546040517f354763d90000000000000000000000000000000000000000000000000000000081526000916001600160a01b03169063354763d99061087490889088908790600401612c88565b6020604051808303816000875af1158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b79190612d8d565b6109035760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f6600000000000000000000000060448201526064016106cf565b610911600c80546001019055565b600080858060200190518101906109289190612daa565b915091506000610937600c5490565b90506109438382611481565b61094d818361149b565b925050505b949350505050565b610965335b82611544565b6109d75760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016106cf565b610821838383611637565b6008546001600160a01b03163314610a3c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cf565b8051610a4f9060099060208401906122e0565b5050565b6008546001600160a01b03163314610aad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cf565b601155565b6040516001600160a01b03831660248201526044810182905260009060099060640160408051601f198184030181529181526020820180516001600160e01b03167f85fa63ef000000000000000000000000000000000000000000000000000000001790525163138db8bf60e31b81526106cf929190600401612e37565b6040516001600160a01b03831660248201526044810182905260009060099060640160408051601f198184030181529181526020820180516001600160e01b03167f6de436f8000000000000000000000000000000000000000000000000000000001790525163138db8bf60e31b81526106cf929190600401612e37565b6108218383836040518060200160405280600081525061129b565b610bd23361095f565b610c445760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f7665640000000000000000000000000000000060648201526084016106cf565b610c4d8161180f565b50565b60098054610c5d90612b87565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8990612b87565b8015610cd65780601f10610cab57610100808354040283529160200191610cd6565b820191906000526020600020905b815481529060010190602001808311610cb957829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806105c25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016106cf565b6008546001600160a01b03163314610dc35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cf565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610e635760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016106cf565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b03163314610ed95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cf565b610ee36000611818565b565b6008546001600160a01b03163314610f3f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cf565b600d546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610fa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc59190612ef3565b600d546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015611033573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110579190612d8d565b6110a35760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c656400000000000000000000000060448201526064016106cf565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516110de91815260200190565b60405180910390a25050565b6060600180546105d790612b87565b6040516001600160a01b03831660248201526044810182905260009060099060640160408051601f198184030181529181526020820180516001600160e01b03167f678c2428000000000000000000000000000000000000000000000000000000001790525163138db8bf60e31b81526106cf929190600401612e37565b6001600160a01b0382163314156111d05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106cf565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b031633146112965760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cf565b601055565b6112a53383611544565b6113175760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016106cf565b6113238484848461186a565b50505050565b60606105c2826118e8565b6008546001600160a01b0316331461138e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106cf565b6001600160a01b03811661140a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106cf565b610c4d81611818565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061144882610cde565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610a4f828260405180602001604052806000815250611a73565b6000828152600260205260409020546001600160a01b03166115255760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016106cf565b60008281526007602090815260409091208251610821928401906122e0565b6000818152600260205260408120546001600160a01b03166115bd5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106cf565b60006115c883610cde565b9050806001600160a01b0316846001600160a01b031614806116035750836001600160a01b03166115f88461065a565b6001600160a01b0316145b8061095257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16610952565b826001600160a01b031661164a82610cde565b6001600160a01b0316146116c65760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016106cf565b6001600160a01b0382166117415760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106cf565b61174c838383611af1565b611757600082611413565b6001600160a01b0383166000908152600360205260408120805460019290611780908490612f22565b90915550506001600160a01b03821660009081526003602052604081208054600192906117ae908490612f39565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610c4d81611b66565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611875848484611637565b61188184848484611ba6565b6113235760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016106cf565b6000818152600260205260409020546060906001600160a01b03166119755760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000060648201526084016106cf565b6000828152600760205260408120805461198e90612b87565b80601f01602080910402602001604051908101604052809291908181526020018280546119ba90612b87565b8015611a075780601f106119dc57610100808354040283529160200191611a07565b820191906000526020600020905b8154815290600101906020018083116119ea57829003601f168201915b505050505090506000611a2560408051602081019091526000815290565b9050805160001415611a38575092915050565b815115611a6a578082604051602001611a52929190612f51565b60405160208183030381529060405292505050919050565b61095284611cec565b611a7d8383611de2565b611a8a6000848484611ba6565b6108215760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016106cf565b60065460ff1615611b445760405162461bcd60e51b815260206004820152601e60248201527f5844563a20546f6b656e20657865637574696f6e20697320706175736564000060448201526064016106cf565b6001600160a01b038316611b5b57611b5b33611f30565b61082183838361208e565b611b6f81612107565b60008181526007602052604090208054611b8890612b87565b159050610c4d576000818152600760205260408120610c4d91612364565b60006001600160a01b0384163b15611ce457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611bea903390899088908890600401612f80565b6020604051808303816000875af1925050508015611c25575060408051601f3d908101601f19168201909252611c2291810190612fbc565b60015b611cca573d808015611c53576040519150601f19603f3d011682016040523d82523d6000602084013e611c58565b606091505b508051611cc25760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016106cf565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610952565b506001610952565b6000818152600260205260409020546060906001600160a01b0316611d795760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016106cf565b6000611d9060408051602081019091526000815290565b90506000815111611db05760405180602001604052806000815250611ddb565b80611dba846121ae565b604051602001611dcb929190612f51565b6040516020818303038152906040525b9392505050565b6001600160a01b038216611e385760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106cf565b6000818152600260205260409020546001600160a01b031615611e9d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106cf565b611ea960008383611af1565b6001600160a01b0382166000908152600360205260408120805460019290611ed2908490612f39565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600d546011546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af1158015611fa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fc99190612d8d565b61203b5760405162461bcd60e51b815260206004820152602260248201527f5844563a205472616e73666572206661696c656420666f72207265636970696560448201527f6e7400000000000000000000000000000000000000000000000000000000000060648201526084016106cf565b806001600160a01b03167fff781da90c6b849a72bafc99aedde3dff0b039f697f31c21e96d587accee2760601154601054604051612083929190918252602082015260400190565b60405180910390a250565b60065460ff16156108215760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201527f68696c652070617573656400000000000000000000000000000000000000000060648201526084016106cf565b600061211282610cde565b905061212081600084611af1565b61212b600083611413565b6001600160a01b0381166000908152600360205260408120805460019290612154908490612f22565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6060816121ee57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115612218578061220281612fd9565b91506122119050600a8361300a565b91506121f2565b60008167ffffffffffffffff81111561223357612233612546565b6040519080825280601f01601f19166020018201604052801561225d576020820181803683370190505b5090505b841561095257612272600183612f22565b915061227f600a8661301e565b61228a906030612f39565b60f81b81838151811061229f5761229f613032565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506122d9600a8661300a565b9450612261565b8280546122ec90612b87565b90600052602060002090601f01602090048101928261230e5760008555612354565b82601f1061232757805160ff1916838001178555612354565b82800160010185558215612354579182015b82811115612354578251825591602001919060010190612339565b5061236092915061239a565b5090565b50805461237090612b87565b6000825580601f10612380575050565b601f016020900490600052602060002090810190610c4d91905b5b80821115612360576000815560010161239b565b6001600160e01b031981168114610c4d57600080fd5b6000602082840312156123d757600080fd5b8135611ddb816123af565b60005b838110156123fd5781810151838201526020016123e5565b838111156113235750506000910152565b600081518084526124268160208601602086016123e2565b601f01601f19169290920160200192915050565b602081526000611ddb602083018461240e565b60006020828403121561245f57600080fd5b5035919050565b6001600160a01b0381168114610c4d57600080fd5b6000806040838503121561248e57600080fd5b823561249981612466565b946020939093013593505050565b6000806000806000608086880312156124bf57600080fd5b85356124ca81612466565b945060208601356124da81612466565b935060408601359250606086013567ffffffffffffffff808211156124fe57600080fd5b818801915088601f83011261251257600080fd5b81358181111561252157600080fd5b89602082850101111561253357600080fd5b9699959850939650602001949392505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561257f5761257f612546565b60405290565b6040516080810167ffffffffffffffff8111828210171561257f5761257f612546565b60405160a0810167ffffffffffffffff8111828210171561257f5761257f612546565b604051601f8201601f1916810167ffffffffffffffff811182821017156125f4576125f4612546565b604052919050565b600067ffffffffffffffff82111561261657612616612546565b50601f01601f191660200190565b600082601f83011261263557600080fd5b8135612648612643826125fc565b6125cb565b81815284602083860101111561265d57600080fd5b816020850160208301376000918101602001919091529392505050565b8015158114610c4d57600080fd5b80356126938161267a565b919050565b80356006811061269357600080fd5b600060c082840312156126b957600080fd5b6126c161255c565b905081356126ce8161267a565b81526126dc60208301612698565b60208201526126ed60408301612698565b60408201526126fe60608301612698565b606082015260808201356009811061271557600080fd5b608082015260a082013567ffffffffffffffff81111561273457600080fd5b61274084828501612624565b60a08301525092915050565b600082601f83011261275d57600080fd5b8135602067ffffffffffffffff8083111561277a5761277a612546565b8260051b6127898382016125cb565b93845285810183019383810190888611156127a357600080fd5b84880192505b85831015612861578235848111156127c15760008081fd5b88016080818b03601f19018113156127d95760008081fd5b6127e1612585565b878301356127ee8161267a565b815260406127fd848201612698565b89830152606080850135898111156128155760008081fd5b6128238f8c83890101612624565b848401525092840135928884111561283d57600091508182fd5b61284b8e8b86880101612624565b90830152508452505091840191908401906127a9565b98975050505050505050565b600060a0828403121561287f57600080fd5b6128876125a8565b905061289282612688565b8152602082013567ffffffffffffffff808211156128af57600080fd5b6128bb85838601612624565b602084015260408401359150808211156128d457600080fd5b6128e085838601612624565b604084015260608401359150808211156128f957600080fd5b612905858386016126a7565b6060840152608084013591508082111561291e57600080fd5b5061292b8482850161274c565b60808301525092915050565b6000806000806080858703121561294d57600080fd5b843567ffffffffffffffff8082111561296557600080fd5b61297188838901612624565b9550602087013591508082111561298757600080fd5b61299388838901612624565b945060408701359150808211156129a957600080fd5b6129b58883890161286d565b935060608701359150808211156129cb57600080fd5b506129d88782880161286d565b91505092959194509250565b6000806000606084860312156129f957600080fd5b8335612a0481612466565b92506020840135612a1481612466565b929592945050506040919091013590565b600060208284031215612a3757600080fd5b813567ffffffffffffffff811115612a4e57600080fd5b61095284828501612624565b600080600060608486031215612a6f57600080fd5b833567ffffffffffffffff811115612a8657600080fd5b612a9286828701612624565b9350506020840135612a1481612466565b600060208284031215612ab557600080fd5b8135611ddb81612466565b60008060408385031215612ad357600080fd5b8235612ade81612466565b91506020830135612aee8161267a565b809150509250929050565b60008060008060808587031215612b0f57600080fd5b8435612b1a81612466565b93506020850135612b2a81612466565b925060408501359150606085013567ffffffffffffffff811115612b4d57600080fd5b6129d887828801612624565b60008060408385031215612b6c57600080fd5b8235612b7781612466565b91506020830135612aee81612466565b600181811c90821680612b9b57607f821691505b60208210811415612bbc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60068110612be857612be8612bc2565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015612c7b5782840389528151608081511515865286820151612c3188880182612bd8565b506040808301518282890152612c498389018261240e565b9250505060608083015192508682038188015250612c67818361240e565b9a87019a9550505090840190600101612c0a565b5091979650505050505050565b60006060808352612c9b8184018761240e565b8381036020850152612cad818761240e565b90508381036040850152845115158152602085015160a06020830152612cd660a083018261240e565b905060408601518282036040840152612cef828261240e565b91505082860151828203848401528051151582526020810151612d156020840182612bd8565b506040810151612d286040840182612bd8565b5083810151612d3985840182612bd8565b506080810151935060098410612d5157612d51612bc2565b83608083015260a081015193505060c060a0820152612d7360c082018461240e565b925050608085015181830360808301526128618382612bec565b600060208284031215612d9f57600080fd5b8151611ddb8161267a565b60008060408385031215612dbd57600080fd5b8251612dc881612466565b602084015190925067ffffffffffffffff811115612de557600080fd5b8301601f81018513612df657600080fd5b8051612e04612643826125fc565b818152866020838501011115612e1957600080fd5b612e2a8260208301602086016123e2565b8093505050509250929050565b60408152600080845481600182811c915080831680612e5757607f831692505b6020808410821415612e7757634e487b7160e01b86526022600452602486fd5b6040880184905260608801828015612e965760018114612ea757612ed2565b60ff19871682528282019750612ed2565b60008c81526020902060005b87811015612ecc57815484820152908601908401612eb3565b83019850505b5050878603818901525050505050612eea818561240e565b95945050505050565b600060208284031215612f0557600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612f3457612f34612f0c565b500390565b60008219821115612f4c57612f4c612f0c565b500190565b60008351612f638184602088016123e2565b835190830190612f778183602088016123e2565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152612fb2608083018461240e565b9695505050505050565b600060208284031215612fce57600080fd5b8151611ddb816123af565b6000600019821415612fed57612fed612f0c565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261301957613019612ff4565b500490565b60008261302d5761302d612ff4565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220b1731907d05db9fefac9d106400831e8c656a738542319d9158ce52a154bb47664736f6c634300080b0033";

type XDVNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVNFT__factory extends ContractFactory {
  constructor(...args: XDVNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      overrides || {}
    ) as Promise<XDVNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      overrides || {}
    );
  }
  attach(address: string): XDVNFT {
    return super.attach(address) as XDVNFT;
  }
  connect(signer: Signer): XDVNFT__factory {
    return super.connect(signer) as XDVNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVNFTInterface {
    return new utils.Interface(_abi) as XDVNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): XDVNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVNFT;
  }
}
