/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XDVNFT, XDVNFTInterface } from "../XDVNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "IWXDVaddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "WXDV",
    outputs: [
      {
        internalType: "contract IWXDV",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "lockWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "releaseWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527fa0b28d7f9d639d313fdc6d1470d226d0631d4301f548fa410483bc9b487c1d08600e556000600f553480156200003a57600080fd5b5060405162003353380380620033538339810160408190526200005d91620002cb565b845185908590620000769060009060208501906200013b565b5080516200008c9060019060208401906200013b565b505050620000a9620000a3620000e560201b60201c565b620000e9565b600c80546001600160a01b039485166001600160a01b031991821617909155600d805493909416921691909117909155600f5550620003a19050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001499062000364565b90600052602060002090601f0160209004810192826200016d5760008555620001b8565b82601f106200018857805160ff1916838001178555620001b8565b82800160010185558215620001b8579182015b82811115620001b85782518255916020019190600101906200019b565b50620001c6929150620001ca565b5090565b5b80821115620001c65760008155600101620001cb565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200020957600080fd5b81516001600160401b0380821115620002265762000226620001e1565b604051601f8301601f19908116603f01168101908282118183101715620002515762000251620001e1565b816040528381526020925086838588010111156200026e57600080fd5b600091505b8382101562000292578582018301518183018401529082019062000273565b83821115620002a45760008385830101525b9695505050505050565b80516001600160a01b0381168114620002c657600080fd5b919050565b600080600080600060a08688031215620002e457600080fd5b85516001600160401b0380821115620002fc57600080fd5b6200030a89838a01620001f7565b965060208801519150808211156200032157600080fd5b506200033088828901620001f7565b9450506200034160408701620002ae565b92506200035160608701620002ae565b9150608086015190509295509295909350565b600181811c908216806200037957607f821691505b602082108114156200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b612fa280620003b16000396000f3fe6080604052600436106101cd5760003560e01c806370a08231116100f7578063a22cb46511610095578063e985e9c511610064578063e985e9c514610537578063e9cbd82214610580578063f2fde38b146105a0578063f33d6634146105c057600080fd5b8063a22cb465146104c4578063ac5627f3146104e4578063b88d4fde146104f7578063c87b56dd1461051757600080fd5b80637ac3c02f116100d15780637ac3c02f146104535780638da5cb5b1461047157806395d89b411461048f57806397ded632146104a457600080fd5b806370a08231146103fe578063715018a61461041e578063756af45f1461043357600080fd5b806340c10f191161016f57806353f4a1141161013e57806353f4a114146103965780635600f04f146103a95780636352211e146103be5780636c19e783146103de57600080fd5b806340c10f191461030857806342842e0e1461033657806342966c681461035657806351cff8d91461037657600080fd5b8063095ea7b3116101ab578063095ea7b314610261578063150b7a021461028357806323b872dd146102c8578063252498a2146102e857600080fd5b806301ffc9a7146101d257806306fdde0314610207578063081812fc14610229575b600080fd5b3480156101de57600080fd5b506101f26101ed366004612302565b6105e0565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061021c61067d565b6040516101fe9190612377565b34801561023557600080fd5b5061024961024436600461238a565b61070f565b6040516001600160a01b0390911681526020016101fe565b34801561026d57600080fd5b5061028161027c3660046123b8565b6107a9565b005b34801561028f57600080fd5b506102af61029e3660046123e4565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101fe565b3480156102d457600080fd5b506102816102e3366004612483565b6108db565b3480156102f457600080fd5b506102816103033660046125e0565b610963565b34801561031457600080fd5b506103286103233660046123b8565b6109d4565b6040519081526020016101fe565b34801561034257600080fd5b50610281610351366004612483565b610aab565b34801561036257600080fd5b5061028161037136600461238a565b610ac6565b34801561038257600080fd5b50610281610391366004612629565b610b4d565b6103286103a4366004612923565b610c96565b3480156103b557600080fd5b5061021c610d3a565b3480156103ca57600080fd5b506102496103d936600461238a565b610dc8565b3480156103ea57600080fd5b506102816103f9366004612629565b610e53565b34801561040a57600080fd5b50610328610419366004612629565b610ecf565b34801561042a57600080fd5b50610281610f69565b34801561043f57600080fd5b5061028161044e366004612629565b610fcf565b34801561045f57600080fd5b506009546001600160a01b0316610249565b34801561047d57600080fd5b506007546001600160a01b0316610249565b34801561049b57600080fd5b5061021c6111d4565b3480156104b057600080fd5b506103286104bf366004612923565b6111e3565b3480156104d057600080fd5b506102816104df3660046129d8565b611324565b6103286104f2366004612923565b6113e9565b34801561050357600080fd5b50610281610512366004612a11565b611440565b34801561052357600080fd5b5061021c61053236600461238a565b6114ce565b34801561054357600080fd5b506101f2610552366004612a7d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561058c57600080fd5b50600c54610249906001600160a01b031681565b3480156105ac57600080fd5b506102816105bb366004612629565b6114d9565b3480156105cc57600080fd5b50600d54610249906001600160a01b031681565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061064357506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061067757507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461068c90612aab565b80601f01602080910402602001604051908101604052809291908181526020018280546106b890612aab565b80156107055780601f106106da57610100808354040283529160200191610705565b820191906000526020600020905b8154815290600101906020018083116106e857829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661078d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006107b482610dc8565b9050806001600160a01b0316836001600160a01b0316141561083e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610784565b336001600160a01b038216148061085a575061085a8133610552565b6108cc5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610784565b6108d683836115b8565b505050565b6108e6335b82611626565b6109585760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610784565b6108d683838361171d565b6007546001600160a01b031633146109bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b80516109d090600890602084019061221d565b5050565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c401610784565b6108d683838360405180602001604052806000815250611440565b610acf336108e0565b610b415760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f766564000000000000000000000000000000006064820152608401610784565b610b4a816118ea565b50565b6007546001600160a01b03163314610ba75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610bf6576040519150601f19603f3d011682016040523d82523d6000602084013e610bfb565b606091505b509150915081610c4d5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610784565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610c8891815260200190565b60405180910390a250505050565b600d54600e546040517f2e8d65660000000000000000000000000000000000000000000000000000000081526000926001600160a01b031691632e8d656691610ced9133918b908b908b908b908b90600401612c7f565b6020604051808303816000875af1158015610d0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d309190612cf6565b9695505050505050565b60088054610d4790612aab565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7390612aab565b8015610dc05780601f10610d9557610100808354040283529160200191610dc0565b820191906000526020600020905b815481529060010190602001808311610da357829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806106775760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610784565b6007546001600160a01b03163314610ead5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610f4d5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610784565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b03163314610fc35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b610fcd60006118f3565b565b6007546001600160a01b031633146110295760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b600c546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561108b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110af9190612cf6565b600c546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af115801561111d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111419190612d0f565b61118d5760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c65640000000000000000000000006044820152606401610784565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516111c891815260200190565b60405180910390a25050565b60606001805461068c90612aab565b60006111f3600b80546001019055565b60006111fe600b5490565b600d54600e546040517f9ed1156f0000000000000000000000000000000000000000000000000000000081529293506001600160a01b0390911691639ed1156f9161125991339186918d908d908d908d908d90600401612d2c565b6020604051808303816000875af1158015611278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129c9190612d0f565b6112e85760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642050726f6f66000000000000000000000000000000000000006044820152606401610784565b600080878060200190518101906112ff9190612dad565b9150915061130d8284611945565b611317838261195f565b5090979650505050505050565b6001600160a01b03821633141561137d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610784565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600d54600e546040517f7e8b80c30000000000000000000000000000000000000000000000000000000081526000926001600160a01b031691637e8b80c391610ced9133918b908b908b908b908b90600401612c7f565b61144a3383611626565b6114bc5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610784565b6114c884848484611a08565b50505050565b606061067782611a86565b6007546001600160a01b031633146115335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b6001600160a01b0381166115af5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610784565b610b4a816118f3565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906115ed82610dc8565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661169f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610784565b60006116aa83610dc8565b9050806001600160a01b0316846001600160a01b031614806116e55750836001600160a01b03166116da8461070f565b6001600160a01b0316145b8061171557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661173082610dc8565b6001600160a01b0316146117ac5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610784565b6001600160a01b0382166118275760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610784565b6118326000826115b8565b6001600160a01b038316600090815260036020526040812080546001929061185b908490612e50565b90915550506001600160a01b0382166000908152600360205260408120805460019290611889908490612e67565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b4a81611c11565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6109d0828260405180602001604052806000815250611c51565b6000828152600260205260409020546001600160a01b03166119e95760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610784565b600082815260066020908152604090912082516108d69284019061221d565b611a1384848461171d565b611a1f84848484611ccf565b6114c85760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610784565b6000818152600260205260409020546060906001600160a01b0316611b135760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610784565b60008281526006602052604081208054611b2c90612aab565b80601f0160208091040260200160405190810160405280929190818152602001828054611b5890612aab565b8015611ba55780601f10611b7a57610100808354040283529160200191611ba5565b820191906000526020600020905b815481529060010190602001808311611b8857829003601f168201915b505050505090506000611bc360408051602081019091526000815290565b9050805160001415611bd6575092915050565b815115611c08578082604051602001611bf0929190612e7f565b60405160208183030381529060405292505050919050565b61171584611e18565b611c1a81611f0e565b60008181526006602052604090208054611c3390612aab565b159050610b4a576000818152600660205260408120610b4a916122a1565b611c5b8383611fa9565b611c686000848484611ccf565b6108d65760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610784565b60006001600160a01b0384163b15611e0d57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611d13903390899088908890600401612eae565b6020604051808303816000875af1925050508015611d4e575060408051601f3d908101601f19168201909252611d4b91810190612ee0565b60015b611df3573d808015611d7c576040519150601f19603f3d011682016040523d82523d6000602084013e611d81565b606091505b508051611deb5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610784565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611715565b506001949350505050565b6000818152600260205260409020546060906001600160a01b0316611ea55760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610784565b6000611ebc60408051602081019091526000815290565b90506000815111611edc5760405180602001604052806000815250611f07565b80611ee6846120eb565b604051602001611ef7929190612e7f565b6040516020818303038152906040525b9392505050565b6000611f1982610dc8565b9050611f266000836115b8565b6001600160a01b0381166000908152600360205260408120805460019290611f4f908490612e50565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b038216611fff5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610784565b6000818152600260205260409020546001600160a01b0316156120645760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610784565b6001600160a01b038216600090815260036020526040812080546001929061208d908490612e67565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60608161212b57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115612155578061213f81612efd565b915061214e9050600a83612f2e565b915061212f565b60008167ffffffffffffffff811115612170576121706124c4565b6040519080825280601f01601f19166020018201604052801561219a576020820181803683370190505b5090505b8415611715576121af600183612e50565b91506121bc600a86612f42565b6121c7906030612e67565b60f81b8183815181106121dc576121dc612f56565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612216600a86612f2e565b945061219e565b82805461222990612aab565b90600052602060002090601f01602090048101928261224b5760008555612291565b82601f1061226457805160ff1916838001178555612291565b82800160010185558215612291579182015b82811115612291578251825591602001919060010190612276565b5061229d9291506122d7565b5090565b5080546122ad90612aab565b6000825580601f106122bd575050565b601f016020900490600052602060002090810190610b4a91905b5b8082111561229d57600081556001016122d8565b6001600160e01b031981168114610b4a57600080fd5b60006020828403121561231457600080fd5b8135611f07816122ec565b60005b8381101561233a578181015183820152602001612322565b838111156114c85750506000910152565b6000815180845261236381602086016020860161231f565b601f01601f19169290920160200192915050565b602081526000611f07602083018461234b565b60006020828403121561239c57600080fd5b5035919050565b6001600160a01b0381168114610b4a57600080fd5b600080604083850312156123cb57600080fd5b82356123d6816123a3565b946020939093013593505050565b6000806000806000608086880312156123fc57600080fd5b8535612407816123a3565b94506020860135612417816123a3565b935060408601359250606086013567ffffffffffffffff8082111561243b57600080fd5b818801915088601f83011261244f57600080fd5b81358181111561245e57600080fd5b89602082850101111561247057600080fd5b9699959850939650602001949392505050565b60008060006060848603121561249857600080fd5b83356124a3816123a3565b925060208401356124b3816123a3565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156124fd576124fd6124c4565b60405290565b6040516080810167ffffffffffffffff811182821017156124fd576124fd6124c4565b60405160a0810167ffffffffffffffff811182821017156124fd576124fd6124c4565b604051601f8201601f1916810167ffffffffffffffff81118282101715612572576125726124c4565b604052919050565b600067ffffffffffffffff821115612594576125946124c4565b50601f01601f191660200190565b60006125b56125b08461257a565b612549565b90508281528383830111156125c957600080fd5b828260208301376000602084830101529392505050565b6000602082840312156125f257600080fd5b813567ffffffffffffffff81111561260957600080fd5b8201601f8101841361261a57600080fd5b611715848235602084016125a2565b60006020828403121561263b57600080fd5b8135611f07816123a3565b600082601f83011261265757600080fd5b611f07838335602085016125a2565b8015158114610b4a57600080fd5b803561267f81612666565b919050565b80356006811061267f57600080fd5b600060c082840312156126a557600080fd5b6126ad6124da565b905081356126ba81612666565b81526126c860208301612684565b60208201526126d960408301612684565b60408201526126ea60608301612684565b606082015260808201356009811061270157600080fd5b608082015260a082013567ffffffffffffffff81111561272057600080fd5b61272c84828501612646565b60a08301525092915050565b600082601f83011261274957600080fd5b8135602067ffffffffffffffff80831115612766576127666124c4565b8260051b612775838201612549565b938452858101830193838101908886111561278f57600080fd5b84880192505b8583101561284d578235848111156127ad5760008081fd5b88016080818b03601f19018113156127c55760008081fd5b6127cd612503565b878301356127da81612666565b815260406127e9848201612684565b89830152606080850135898111156128015760008081fd5b61280f8f8c83890101612646565b848401525092840135928884111561282957600091508182fd5b6128378e8b86880101612646565b9083015250845250509184019190840190612795565b98975050505050505050565b600060a0828403121561286b57600080fd5b612873612526565b905061287e82612674565b8152602082013567ffffffffffffffff8082111561289b57600080fd5b6128a785838601612646565b602084015260408401359150808211156128c057600080fd5b6128cc85838601612646565b604084015260608401359150808211156128e557600080fd5b6128f185838601612693565b6060840152608084013591508082111561290a57600080fd5b5061291784828501612738565b60808301525092915050565b600080600080600060a0868803121561293b57600080fd5b853567ffffffffffffffff8082111561295357600080fd5b61295f89838a01612646565b9650602088013591508082111561297557600080fd5b61298189838a01612646565b9550604088013591508082111561299757600080fd5b6129a389838a01612859565b945060608801359150808211156129b957600080fd5b506129c688828901612859565b95989497509295608001359392505050565b600080604083850312156129eb57600080fd5b82356129f6816123a3565b91506020830135612a0681612666565b809150509250929050565b60008060008060808587031215612a2757600080fd5b8435612a32816123a3565b93506020850135612a42816123a3565b925060408501359150606085013567ffffffffffffffff811115612a6557600080fd5b612a7187828801612646565b91505092959194509250565b60008060408385031215612a9057600080fd5b8235612a9b816123a3565b91506020830135612a06816123a3565b600181811c90821680612abf57607f821691505b60208210811415612ae057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60068110612b0c57612b0c612ae6565b9052565b6000815180845260208085019450848260051b860182860160005b858110156113175783830389528151608081511515855286820151612b5288870182612afc565b506040808301518282880152612b6a8388018261234b565b9250505060608083015192508582038187015250612b88818361234b565b9a87019a9450505090840190600101612b2b565b8051151582526000602082015160a06020850152612bbd60a085018261234b565b905060408301518482036040860152612bd6828261234b565b915050606083015184820360608601528051151582526020810151612bfe6020840182612afc565b506040810151612c116040840182612afc565b506060810151612c246060840182612afc565b50608081015160098110612c3a57612c3a612ae6565b8060808401525060a0810151905060c060a0830152612c5c60c083018261234b565b91505060808301518482036080860152612c768282612b10565b95945050505050565b6001600160a01b038816815286602082015260e060408201526000612ca760e083018861234b565b8281036060840152612cb9818861234b565b90508281036080840152612ccd8187612b9c565b905082810360a0840152612ce18186612b9c565b9150508260c083015298975050505050505050565b600060208284031215612d0857600080fd5b5051919050565b600060208284031215612d2157600080fd5b8151611f0781612666565b60006101006001600160a01b038b168352896020840152886040840152806060840152612d5b8184018961234b565b90508281036080840152612d6f818861234b565b905082810360a0840152612d838187612b9c565b905082810360c0840152612d978186612b9c565b9150508260e08301529998505050505050505050565b60008060408385031215612dc057600080fd5b8251612dcb816123a3565b602084015190925067ffffffffffffffff811115612de857600080fd5b8301601f81018513612df957600080fd5b8051612e076125b08261257a565b818152866020838501011115612e1c57600080fd5b612e2d82602083016020860161231f565b8093505050509250929050565b634e487b7160e01b600052601160045260246000fd5b600082821015612e6257612e62612e3a565b500390565b60008219821115612e7a57612e7a612e3a565b500190565b60008351612e9181846020880161231f565b835190830190612ea581836020880161231f565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152610d30608083018461234b565b600060208284031215612ef257600080fd5b8151611f07816122ec565b6000600019821415612f1157612f11612e3a565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082612f3d57612f3d612f18565b500490565b600082612f5157612f51612f18565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212204cbd65018f00eeff0a5ffa60a192aee5aee59ee0a736bdc46aeb4b7338ffbc2d64736f6c634300080b0033";

type XDVNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVNFT__factory extends ContractFactory {
  constructor(...args: XDVNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    IWXDVaddress: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      IWXDVaddress,
      chain,
      overrides || {}
    ) as Promise<XDVNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    IWXDVaddress: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      IWXDVaddress,
      chain,
      overrides || {}
    );
  }
  attach(address: string): XDVNFT {
    return super.attach(address) as XDVNFT;
  }
  connect(signer: Signer): XDVNFT__factory {
    return super.connect(signer) as XDVNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVNFTInterface {
    return new utils.Interface(_abi) as XDVNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): XDVNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVNFT;
  }
}
