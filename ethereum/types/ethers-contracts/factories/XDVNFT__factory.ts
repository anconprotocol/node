/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XDVNFT, XDVNFTInterface } from "../XDVNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "anconprotocolAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKEN_AVAILABLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_BURNED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TOKEN_LOCKED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dagContractOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeForContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeForPaymentAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenLockStorage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForPaymentAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "burnWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "lockWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "releaseWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "islocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527faba593141db1021cb8de7f38506a824487c2f2e5758168a6568eb7d6a8dd3173600c557f35e808e423fc257ba1bb61b1c2c57e48855b39cbee1f101ebe4fcb026f39e2e0600d557f1a7568e05cd9c1f5b58509adc78e175b2c29ad54d925ee42a8b45d9d39b1081b600e55600060135560006014557fa8a7d14acee15b581bdc62c67a1b2711ec58a960850b336a002a03c0f3367b3b6016556000601755348015620000b057600080fd5b5060405162003d5138038062003d51833981016040819052620000d39162000338565b845185908590620000ec906000906020850190620001a8565b50805162000102906001906020840190620001a8565b50506006805460ff19169055506200011a3362000156565b601080546001600160a01b039485166001600160a01b0319918216179091556011805493909416921691909117909155601755506200040e9050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001b690620003d1565b90600052602060002090601f016020900481019282620001da576000855562000225565b82601f10620001f557805160ff191683800117855562000225565b8280016001018555821562000225579182015b828111156200022557825182559160200191906001019062000208565b506200023392915062000237565b5090565b5b8082111562000233576000815560010162000238565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200027657600080fd5b81516001600160401b03808211156200029357620002936200024e565b604051601f8301601f19908116603f01168101908282118183101715620002be57620002be6200024e565b81604052838152602092508683858801011115620002db57600080fd5b600091505b83821015620002ff5785820183015181830184015290820190620002e0565b83821115620003115760008385830101525b9695505050505050565b80516001600160a01b03811681146200033357600080fd5b919050565b600080600080600060a086880312156200035157600080fd5b85516001600160401b03808211156200036957600080fd5b6200037789838a0162000264565b965060208801519150808211156200038e57600080fd5b506200039d8882890162000264565b945050620003ae604087016200031b565b9250620003be606087016200031b565b9150608086015190509295509295909350565b600181811c90821680620003e657607f821691505b602082108114156200040857634e487b7160e01b600052602260045260246000fd5b50919050565b613933806200041e6000396000f3fe608060405234801561001057600080fd5b50600436106102d35760003560e01c8063715018a611610186578063b88d4fde116100e3578063e750fc8911610097578063ea641b7d11610071578063ea641b7d146105dc578063f2fde38b146105ef578063fd632d511461060257600080fd5b8063e750fc891461056d578063e985e9c51461058d578063e9cbd822146105c957600080fd5b8063c87b56dd116100c8578063c87b56dd1461052c578063cfc315041461053f578063e53ae1021461056457600080fd5b8063b88d4fde14610510578063c014b9da1461052357600080fd5b806395d89b411161013a578063a22cb4651161011f578063a22cb465146104d7578063ac5627f3146104ea578063b86be2ca146104fd57600080fd5b806395d89b41146104bc57806397ded632146104c457600080fd5b80637927b8981161016b5780637927b898146104875780637ac3c02f1461049a5780638da5cb5b146104ab57600080fd5b8063715018a61461046c578063756af45f1461047457600080fd5b806342842e0e11610234578063588f7ae2116101e85780636352211e116101cd5780636352211e146104335780636c19e7831461044657806370a082311461045957600080fd5b8063588f7ae21461041f5780635c975abb1461042857600080fd5b806351cff8d91161021957806351cff8d9146103f157806353f4a114146104045780635600f04f1461041757600080fd5b806342842e0e146103cb57806342966c68146103de57600080fd5b806323b872dd1161028b5780632c078e8d116102705780632c078e8d146103925780633cd559a4146103a557806340c10f19146103b857600080fd5b806323b872dd1461036c578063252498a21461037f57600080fd5b8063081812fc116102bc578063081812fc14610315578063095ea7b3146103405780632380bcd21461035557600080fd5b806301ffc9a7146102d857806306fdde0314610300575b600080fd5b6102eb6102e6366004612c97565b61060b565b60405190151581526020015b60405180910390f35b6103086106a8565b6040516102f79190612d0c565b610328610323366004612d1f565b61073a565b6040516001600160a01b0390911681526020016102f7565b61035361034e366004612d4d565b6107d4565b005b61035e600e5481565b6040519081526020016102f7565b61035361037a366004612d79565b610906565b61035361038d366004612ed6565b61098e565b6103536103a0366004612d1f565b6109ff565b601154610328906001600160a01b031681565b61035e6103c6366004612d4d565b610a5e565b6103536103d9366004612d79565b610b35565b6103536103ec366004612d1f565b610b50565b6103536103ff366004612f1f565b610bd7565b61035e610412366004613219565b610d20565b610308610f4b565b61035e600d5481565b60065460ff166102eb565b610328610441366004612d1f565b610fd9565b610353610454366004612f1f565b611064565b61035e610467366004612f1f565b6110e0565b61035361117a565b610353610482366004612f1f565b6111e0565b601254610328906001600160a01b031681565b600a546001600160a01b0316610328565b6008546001600160a01b0316610328565b6103086113e5565b61035e6104d2366004613219565b6113f4565b6103536104e53660046132ce565b611587565b61035e6104f8366004613219565b61164c565b61035361050b366004612d1f565b611857565b61035361051e366004613307565b6118b6565b61035e60135481565b61030861053a366004612d1f565b611944565b6102eb61054d366004612d1f565b600c54600091825260156020526040909120541490565b61035e60145481565b61035e61057b366004612d1f565b60156020526000908152604090205481565b6102eb61059b366004613373565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b601054610328906001600160a01b031681565b61035e6105ea366004613219565b61194f565b6103536105fd366004612f1f565b611ab7565b61035e600c5481565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061066e57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806106a257507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600080546106b7906133a1565b80601f01602080910402602001604051908101604052809291908181526020018280546106e3906133a1565b80156107305780601f1061070557610100808354040283529160200191610730565b820191906000526020600020905b81548152906001019060200180831161071357829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166107b85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006107df82610fd9565b9050806001600160a01b0316836001600160a01b031614156108695760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016107af565b336001600160a01b03821614806108855750610885813361059b565b6108f75760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016107af565b6109018383611b96565b505050565b610911335b82611c04565b6109835760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016107af565b610901838383611cfb565b6008546001600160a01b031633146109e85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b80516109fb906009906020840190612bb2565b5050565b6008546001600160a01b03163314610a595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b601455565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c4016107af565b610901838383604051806020016040528060008152506118b6565b610b593361090b565b610bcb5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f7665640000000000000000000000000000000060648201526084016107af565b610bd481611ed3565b50565b6008546001600160a01b03163314610c315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610c80576040519150601f19603f3d011682016040523d82523d6000602084013e610c85565b606091505b509150915081610cd75760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016107af565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610d1291815260200190565b60405180910390a250505050565b6011546016546040516397554e8f60e01b81526000926001600160a01b0316916397554e8f91610d5d9190339089908c908c908b90600401613585565b6020604051808303816000875af1158015610d7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da091906135f4565b610de35760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103830b1b5b2ba10383937b7b360611b60448201526064016107af565b60008060008088806020019051810190610dfd9190613656565b9350935093509350838383604051602001610e1a939291906136b7565b604051602081830303815290604052805190602001208614610e6f5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c1858dad95d60921b60448201526064016107af565b336001600160a01b03831614610e8457600080fd5b6017546040805160208101929092526bffffffffffffffffffffffff193060601b1690820152605401604051602081830303815290604052805190602001208114610ef457610ed7600f80546001019055565b6000610ee2600f5490565b9050610eee8382611edc565b50610f08565b610efd84611ef6565b610f08308386610b35565b610f128484611f6a565b60405184907ffb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c56590600090a2509198975050505050505050565b60098054610f58906133a1565b80601f0160208091040260200160405190810160405280929190818152602001828054610f84906133a1565b8015610fd15780601f10610fa657610100808354040283529160200191610fd1565b820191906000526020600020905b815481529060010190602001808311610fb457829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806106a25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016107af565b6008546001600160a01b031633146110be5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b03821661115e5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016107af565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b031633146111d45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b6111de6000612013565b565b6008546001600160a01b0316331461123a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b6010546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561129c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c091906136fb565b6010546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af115801561132e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135291906135f4565b61139e5760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c656400000000000000000000000060448201526064016107af565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516113d991815260200190565b60405180910390a25050565b6060600180546106b7906133a1565b6011546016546040516397554e8f60e01b81526000926001600160a01b0316916397554e8f916114319190339089908c908c908b90600401613585565b6020604051808303816000875af1158015611450573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061147491906135f4565b6114b75760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103830b1b5b2ba10383937b7b360611b60448201526064016107af565b600080868060200190518101906114ce9190613714565b9150915081816040516020016114e5929190613765565b60405160208183030381529060405280519060200120841461153a5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c1858dad95d60921b60448201526064016107af565b611548600f80546001019055565b6000611553600f5490565b905061155f8382611edc565b6115698183611f6a565b600e5460008281526015602052604090205598975050505050505050565b6001600160a01b0382163314156115e05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107af565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6011546016546040516397554e8f60e01b81526000926001600160a01b0316916397554e8f916116899190339089908c908c908b90600401613585565b6020604051808303816000875af11580156116a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116cc91906135f4565b61170f5760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103830b1b5b2ba10383937b7b360611b60448201526064016107af565b60008086806020019051810190611726919061379d565b604080516020810184905290810182905291935091506060016040516020818303038152906040528051906020012084146117945760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c1858dad95d60921b60448201526064016107af565b61179d82610fd9565b6001600160a01b0316336001600160a01b0316146117ba57600080fd5b6017546040805160208101929092526bffffffffffffffffffffffff193060601b1690820152605401604051602081830303815290604052805190602001208114156118435761180a30836107d4565b61181382612065565b60405182907f032bc66be43dbccb7487781d168eb7bda224628a3b2c3388bdf69b532a3a161190600090a261184c565b61184c82611ed3565b509695505050505050565b6008546001600160a01b031633146118b15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b601355565b6118c03383611c04565b6119325760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016107af565b61193e848484846120d9565b50505050565b60606106a282612157565b6011546016546040516397554e8f60e01b81526000926001600160a01b0316916397554e8f9161198c9190339089908c908c908b90600401613585565b6020604051808303816000875af11580156119ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119cf91906135f4565b611a125760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103830b1b5b2ba10383937b7b360611b60448201526064016107af565b600085806020019051810190611a2891906136fb565b905080604051602001611a3d91815260200190565b604051602081830303815290604052805190602001208314611a925760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c1858dad95d60921b60448201526064016107af565b611a9b81611ed3565b600d546000828152601560205260409020559695505050505050565b6008546001600160a01b03163314611b115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b6001600160a01b038116611b8d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107af565b610bd481612013565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611bcb82610fd9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316611c7d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107af565b6000611c8883610fd9565b9050806001600160a01b0316846001600160a01b03161480611cc35750836001600160a01b0316611cb88461073a565b6001600160a01b0316145b80611cf357506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611d0e82610fd9565b6001600160a01b031614611d8a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016107af565b6001600160a01b038216611e055760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016107af565b611e108383836122e2565b611e1b600082611b96565b6001600160a01b0383166000908152600360205260408120805460019290611e449084906137d7565b90915550506001600160a01b0382166000908152600360205260408120805460019290611e729084906137ee565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610bd4816123b7565b6109fb8282604051806020016040528060008152506123f7565b600c5460008281526015602052604090205414611f555760405162461bcd60e51b815260206004820152601960248201527f546f6b656e20697320616c726561647920756e6c6f636b65640000000000000060448201526064016107af565b600e5460009182526015602052604090912055565b6000828152600260205260409020546001600160a01b0316611ff45760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016107af565b6000828152600760209081526040909120825161090192840190612bb2565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600e54600082815260156020526040902054146120c45760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20697320616c7265616479206c6f636b656400000000000000000060448201526064016107af565b600c5460009182526015602052604090912055565b6120e4848484611cfb565b6120f084848484612475565b61193e5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016107af565b6000818152600260205260409020546060906001600160a01b03166121e45760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000060648201526084016107af565b600082815260076020526040812080546121fd906133a1565b80601f0160208091040260200160405190810160405280929190818152602001828054612229906133a1565b80156122765780601f1061224b57610100808354040283529160200191612276565b820191906000526020600020905b81548152906001019060200180831161225957829003601f168201915b50505050509050600061229460408051602081019091526000815290565b90508051600014156122a7575092915050565b8151156122d95780826040516020016122c1929190613806565b60405160208183030381529060405292505050919050565b611cf3846125be565b60065460ff16156123355760405162461bcd60e51b815260206004820152601e60248201527f5844563a20546f6b656e20657865637574696f6e20697320706175736564000060448201526064016107af565b600c5460008281526015602052604090205414156123955760405162461bcd60e51b815260206004820152601960248201527f5844563a205468697320746f6b656e206973206c6f636b65640000000000000060448201526064016107af565b6001600160a01b0383166123ac576123ac336126b4565b610901838383612812565b6123c08161288b565b600081815260076020526040902080546123d9906133a1565b159050610bd4576000818152600760205260408120610bd491612c36565b6124018383612932565b61240e6000848484612475565b6109015760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016107af565b60006001600160a01b0384163b156125b357604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906124b9903390899088908890600401613835565b6020604051808303816000875af19250505080156124f4575060408051601f3d908101601f191682019092526124f191810190613871565b60015b612599573d808015612522576040519150601f19603f3d011682016040523d82523d6000602084013e612527565b606091505b5080516125915760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016107af565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611cf3565b506001949350505050565b6000818152600260205260409020546060906001600160a01b031661264b5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016107af565b600061266260408051602081019091526000815290565b9050600081511161268257604051806020016040528060008152506126ad565b8061268c84612a80565b60405160200161269d929190613806565b6040516020818303038152906040525b9392505050565b6010546014546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af1158015612729573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061274d91906135f4565b6127bf5760405162461bcd60e51b815260206004820152602260248201527f5844563a205472616e73666572206661696c656420666f72207265636970696560448201527f6e7400000000000000000000000000000000000000000000000000000000000060648201526084016107af565b806001600160a01b03167fff781da90c6b849a72bafc99aedde3dff0b039f697f31c21e96d587accee2760601454601354604051612807929190918252602082015260400190565b60405180910390a250565b60065460ff16156109015760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201527f68696c652070617573656400000000000000000000000000000000000000000060648201526084016107af565b600061289682610fd9565b90506128a4816000846122e2565b6128af600083611b96565b6001600160a01b03811660009081526003602052604081208054600192906128d89084906137d7565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0382166129885760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107af565b6000818152600260205260409020546001600160a01b0316156129ed5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107af565b6129f9600083836122e2565b6001600160a01b0382166000908152600360205260408120805460019290612a229084906137ee565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b606081612ac057505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115612aea5780612ad48161388e565b9150612ae39050600a836138bf565b9150612ac4565b60008167ffffffffffffffff811115612b0557612b05612dba565b6040519080825280601f01601f191660200182016040528015612b2f576020820181803683370190505b5090505b8415611cf357612b446001836137d7565b9150612b51600a866138d3565b612b5c9060306137ee565b60f81b818381518110612b7157612b716138e7565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612bab600a866138bf565b9450612b33565b828054612bbe906133a1565b90600052602060002090601f016020900481019282612be05760008555612c26565b82601f10612bf957805160ff1916838001178555612c26565b82800160010185558215612c26579182015b82811115612c26578251825591602001919060010190612c0b565b50612c32929150612c6c565b5090565b508054612c42906133a1565b6000825580601f10612c52575050565b601f016020900490600052602060002090810190610bd491905b5b80821115612c325760008155600101612c6d565b6001600160e01b031981168114610bd457600080fd5b600060208284031215612ca957600080fd5b81356126ad81612c81565b60005b83811015612ccf578181015183820152602001612cb7565b8381111561193e5750506000910152565b60008151808452612cf8816020860160208601612cb4565b601f01601f19169290920160200192915050565b6020815260006126ad6020830184612ce0565b600060208284031215612d3157600080fd5b5035919050565b6001600160a01b0381168114610bd457600080fd5b60008060408385031215612d6057600080fd5b8235612d6b81612d38565b946020939093013593505050565b600080600060608486031215612d8e57600080fd5b8335612d9981612d38565b92506020840135612da981612d38565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612df357612df3612dba565b60405290565b6040516080810167ffffffffffffffff81118282101715612df357612df3612dba565b60405160a0810167ffffffffffffffff81118282101715612df357612df3612dba565b604051601f8201601f1916810167ffffffffffffffff81118282101715612e6857612e68612dba565b604052919050565b600067ffffffffffffffff821115612e8a57612e8a612dba565b50601f01601f191660200190565b6000612eab612ea684612e70565b612e3f565b9050828152838383011115612ebf57600080fd5b828260208301376000602084830101529392505050565b600060208284031215612ee857600080fd5b813567ffffffffffffffff811115612eff57600080fd5b8201601f81018413612f1057600080fd5b611cf384823560208401612e98565b600060208284031215612f3157600080fd5b81356126ad81612d38565b600082601f830112612f4d57600080fd5b6126ad83833560208501612e98565b8015158114610bd457600080fd5b8035612f7581612f5c565b919050565b803560068110612f7557600080fd5b600060c08284031215612f9b57600080fd5b612fa3612dd0565b90508135612fb081612f5c565b8152612fbe60208301612f7a565b6020820152612fcf60408301612f7a565b6040820152612fe060608301612f7a565b6060820152608082013560098110612ff757600080fd5b608082015260a082013567ffffffffffffffff81111561301657600080fd5b61302284828501612f3c565b60a08301525092915050565b600082601f83011261303f57600080fd5b8135602067ffffffffffffffff8083111561305c5761305c612dba565b8260051b61306b838201612e3f565b938452858101830193838101908886111561308557600080fd5b84880192505b85831015613143578235848111156130a35760008081fd5b88016080818b03601f19018113156130bb5760008081fd5b6130c3612df9565b878301356130d081612f5c565b815260406130df848201612f7a565b89830152606080850135898111156130f75760008081fd5b6131058f8c83890101612f3c565b848401525092840135928884111561311f57600091508182fd5b61312d8e8b86880101612f3c565b908301525084525050918401919084019061308b565b98975050505050505050565b600060a0828403121561316157600080fd5b613169612e1c565b905061317482612f6a565b8152602082013567ffffffffffffffff8082111561319157600080fd5b61319d85838601612f3c565b602084015260408401359150808211156131b657600080fd5b6131c285838601612f3c565b604084015260608401359150808211156131db57600080fd5b6131e785838601612f89565b6060840152608084013591508082111561320057600080fd5b5061320d8482850161302e565b60808301525092915050565b600080600080600060a0868803121561323157600080fd5b853567ffffffffffffffff8082111561324957600080fd5b61325589838a01612f3c565b9650602088013591508082111561326b57600080fd5b61327789838a01612f3c565b9550604088013591508082111561328d57600080fd5b61329989838a0161314f565b945060608801359150808211156132af57600080fd5b506132bc8882890161314f565b95989497509295608001359392505050565b600080604083850312156132e157600080fd5b82356132ec81612d38565b915060208301356132fc81612f5c565b809150509250929050565b6000806000806080858703121561331d57600080fd5b843561332881612d38565b9350602085013561333881612d38565b925060408501359150606085013567ffffffffffffffff81111561335b57600080fd5b61336787828801612f3c565b91505092959194509250565b6000806040838503121561338657600080fd5b823561339181612d38565b915060208301356132fc81612d38565b600181811c908216806133b557607f821691505b602082108114156133d657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60068110613402576134026133dc565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015613495578284038952815160808151151586528682015161344b888801826133f2565b50604080830151828289015261346383890182612ce0565b92505050606080830151925086820381880152506134818183612ce0565b9a87019a9550505090840190600101613424565b5091979650505050505050565b8051151582526000602082015160a060208501526134c360a0850182612ce0565b9050604083015184820360408601526134dc8282612ce0565b91505060608301518482036060860152805115158252602081015161350460208401826133f2565b50604081015161351760408401826133f2565b50606081015161352a60608401826133f2565b50608081015160098110613540576135406133dc565b8060808401525060a0810151905060c060a083015261356260c0830182612ce0565b9150506080830151848203608086015261357c8282613406565b95945050505050565b8681526001600160a01b038616602082015260c0604082015260006135ad60c08301876134a2565b82810360608401526135bf8187612ce0565b905082810360808401526135d38186612ce0565b905082810360a08401526135e781856134a2565b9998505050505050505050565b60006020828403121561360657600080fd5b81516126ad81612f5c565b600082601f83011261362257600080fd5b8151613630612ea682612e70565b81815284602083860101111561364557600080fd5b611cf3826020830160208701612cb4565b6000806000806080858703121561366c57600080fd5b84519350602085015167ffffffffffffffff81111561368a57600080fd5b61369687828801613611565b93505060408501516136a781612d38565b6060959095015193969295505050565b838152600083516136cf816020850160208801612cb4565b60609390931b6bffffffffffffffffffffffff1916602092909301918201929092526034019392505050565b60006020828403121561370d57600080fd5b5051919050565b6000806040838503121561372757600080fd5b825161373281612d38565b602084015190925067ffffffffffffffff81111561374f57600080fd5b61375b85828601613611565b9150509250929050565b6bffffffffffffffffffffffff198360601b1681526000825161378f816014850160208701612cb4565b919091016014019392505050565b600080604083850312156137b057600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b6000828210156137e9576137e96137c1565b500390565b60008219821115613801576138016137c1565b500190565b60008351613818818460208801612cb4565b83519083019061382c818360208801612cb4565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526138676080830184612ce0565b9695505050505050565b60006020828403121561388357600080fd5b81516126ad81612c81565b60006000198214156138a2576138a26137c1565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826138ce576138ce6138a9565b500490565b6000826138e2576138e26138a9565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220260370395a53d2e3f382b9ef4a5af11d0080158297d27d14d379a216f0764f7a64736f6c634300080b0033";

type XDVNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVNFT__factory extends ContractFactory {
  constructor(...args: XDVNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      chain,
      overrides || {}
    ) as Promise<XDVNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      chain,
      overrides || {}
    );
  }
  attach(address: string): XDVNFT {
    return super.attach(address) as XDVNFT;
  }
  connect(signer: Signer): XDVNFT__factory {
    return super.connect(signer) as XDVNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVNFTInterface {
    return new utils.Interface(_abi) as XDVNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): XDVNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVNFT;
  }
}
