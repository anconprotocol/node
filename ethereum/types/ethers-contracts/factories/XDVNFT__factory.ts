/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XDVNFT, XDVNFTInterface } from "../XDVNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "ancon",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "lockWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "releaseWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527fa0b28d7f9d639d313fdc6d1470d226d0631d4301f548fa410483bc9b487c1d08600e556000600f553480156200003a57600080fd5b50604051620037f2380380620037f28339810160408190526200005d91620002cb565b845185908590620000769060009060208501906200013b565b5080516200008c9060019060208401906200013b565b505050620000a9620000a3620000e560201b60201c565b620000e9565b600c80546001600160a01b039485166001600160a01b031991821617909155600d805493909416921691909117909155600f5550620003a19050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001499062000364565b90600052602060002090601f0160209004810192826200016d5760008555620001b8565b82601f106200018857805160ff1916838001178555620001b8565b82800160010185558215620001b8579182015b82811115620001b85782518255916020019190600101906200019b565b50620001c6929150620001ca565b5090565b5b80821115620001c65760008155600101620001cb565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200020957600080fd5b81516001600160401b0380821115620002265762000226620001e1565b604051601f8301601f19908116603f01168101908282118183101715620002515762000251620001e1565b816040528381526020925086838588010111156200026e57600080fd5b600091505b8382101562000292578582018301518183018401529082019062000273565b83821115620002a45760008385830101525b9695505050505050565b80516001600160a01b0381168114620002c657600080fd5b919050565b600080600080600060a08688031215620002e457600080fd5b85516001600160401b0380821115620002fc57600080fd5b6200030a89838a01620001f7565b965060208801519150808211156200032157600080fd5b506200033088828901620001f7565b9450506200034160408701620002ae565b92506200035160608701620002ae565b9150608086015190509295509295909350565b600181811c908216806200037957607f821691505b602082108114156200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b61344180620003b16000396000f3fe6080604052600436106101cd5760003560e01c80636c19e783116100f757806397ded63211610095578063c87b56dd11610064578063c87b56dd14610537578063e985e9c514610557578063e9cbd822146105a0578063f2fde38b146105c057600080fd5b806397ded632146104c4578063a22cb465146104e4578063ac5627f314610504578063b88d4fde1461051757600080fd5b8063756af45f116100d1578063756af45f146104535780637ac3c02f146104735780638da5cb5b1461049157806395d89b41146104af57600080fd5b80636c19e783146103fe57806370a082311461041e578063715018a61461043e57600080fd5b80633cd559a41161016f57806351cff8d91161013e57806351cff8d91461039657806353f4a114146103b65780635600f04f146103c95780636352211e146103de57600080fd5b80633cd559a41461030857806340c10f191461032857806342842e0e1461035657806342966c681461037657600080fd5b8063095ea7b3116101ab578063095ea7b314610261578063150b7a021461028357806323b872dd146102c8578063252498a2146102e857600080fd5b806301ffc9a7146101d257806306fdde0314610207578063081812fc14610229575b600080fd5b3480156101de57600080fd5b506101f26101ed3660046126e2565b6105e0565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061021c61067d565b6040516101fe9190612757565b34801561023557600080fd5b5061024961024436600461276a565b61070f565b6040516001600160a01b0390911681526020016101fe565b34801561026d57600080fd5b5061028161027c366004612798565b6107a9565b005b34801561028f57600080fd5b506102af61029e3660046127c4565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101fe565b3480156102d457600080fd5b506102816102e3366004612863565b6108db565b3480156102f457600080fd5b506102816103033660046129c0565b610963565b34801561031457600080fd5b50600d54610249906001600160a01b031681565b34801561033457600080fd5b50610348610343366004612798565b6109d4565b6040519081526020016101fe565b34801561036257600080fd5b50610281610371366004612863565b610aab565b34801561038257600080fd5b5061028161039136600461276a565b610ac6565b3480156103a257600080fd5b506102816103b1366004612a09565b610b4d565b6103486103c4366004612d03565b610c96565b3480156103d557600080fd5b5061021c610ee7565b3480156103ea57600080fd5b506102496103f936600461276a565b610f75565b34801561040a57600080fd5b50610281610419366004612a09565b611000565b34801561042a57600080fd5b50610348610439366004612a09565b61107c565b34801561044a57600080fd5b50610281611116565b34801561045f57600080fd5b5061028161046e366004612a09565b61117c565b34801561047f57600080fd5b506009546001600160a01b0316610249565b34801561049d57600080fd5b506007546001600160a01b0316610249565b3480156104bb57600080fd5b5061021c611381565b3480156104d057600080fd5b506103486104df366004612d03565b611390565b3480156104f057600080fd5b506102816104ff366004612db8565b61152b565b610348610512366004612d03565b6115f0565b34801561052357600080fd5b50610281610532366004612df1565b611820565b34801561054357600080fd5b5061021c61055236600461276a565b6118ae565b34801561056357600080fd5b506101f2610572366004612e5d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156105ac57600080fd5b50600c54610249906001600160a01b031681565b3480156105cc57600080fd5b506102816105db366004612a09565b6118b9565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061064357506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061067757507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461068c90612e8b565b80601f01602080910402602001604051908101604052809291908181526020018280546106b890612e8b565b80156107055780601f106106da57610100808354040283529160200191610705565b820191906000526020600020905b8154815290600101906020018083116106e857829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661078d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006107b482610f75565b9050806001600160a01b0316836001600160a01b0316141561083e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610784565b336001600160a01b038216148061085a575061085a8133610572565b6108cc5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610784565b6108d68383611998565b505050565b6108e6335b82611a06565b6109585760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610784565b6108d6838383611afd565b6007546001600160a01b031633146109bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b80516109d09060089060208401906125fd565b5050565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c401610784565b6108d683838360405180602001604052806000815250611820565b610acf336108e0565b610b415760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f766564000000000000000000000000000000006064820152608401610784565b610b4a81611cca565b50565b6007546001600160a01b03163314610ba75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610bf6576040519150601f19603f3d011682016040523d82523d6000602084013e610bfb565b606091505b509150915081610c4d5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610784565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610c8891815260200190565b60405180910390a250505050565b600d54600e546040516397554e8f60e01b81526000926001600160a01b0316916397554e8f91610cd39190339089908c908c908b9060040161306f565b6020604051808303816000875af1158015610cf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1691906130de565b610d625760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610784565b60008060008088806020019051810190610d7c9190613140565b935093509350935083838383604051602001610d9b94939291906131a1565b604051602081830303815290604052805190602001208614610dff5760405162461bcd60e51b815260206004820152600e60248201527f696e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610784565b336001600160a01b038316148015610e8857506040516331a9108f60e11b8152600481018590523090636352211e90602401602060405180830381865afa158015610e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7291906131ec565b6001600160a01b0316336001600160a01b031614155b610ec45760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b6044820152606401610784565b610ecf308386610aab565b610ed98484611cd3565b509198975050505050505050565b60088054610ef490612e8b565b80601f0160208091040260200160405190810160405280929190818152602001828054610f2090612e8b565b8015610f6d5780601f10610f4257610100808354040283529160200191610f6d565b820191906000526020600020905b815481529060010190602001808311610f5057829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806106775760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610784565b6007546001600160a01b0316331461105a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0382166110fa5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610784565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146111705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b61117a6000611d7c565b565b6007546001600160a01b031633146111d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b600c546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611238573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125c9190613209565b600c546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156112ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ee91906130de565b61133a5760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c65640000000000000000000000006044820152606401610784565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161137591815260200190565b60405180910390a25050565b60606001805461068c90612e8b565b60006113a0600b80546001019055565b60006113ab600b5490565b600d54600e546040516397554e8f60e01b81529293506001600160a01b03909116916397554e8f916113e99133908a908d908d908c9060040161306f565b6020604051808303816000875af1158015611408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142c91906130de565b6114785760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610784565b6000808780602001905181019061148f9190613222565b9150915081816040516020016114a6929190613273565b60405160208183030381529060405280519060200120851461150a5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610784565b6115148284611dce565b61151e8382611cd3565b5090979650505050505050565b6001600160a01b0382163314156115845760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610784565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600d54600e546040516397554e8f60e01b81526000926001600160a01b0316916397554e8f9161162d9190339089908c908c908b9060040161306f565b6020604051808303816000875af115801561164c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167091906130de565b6116bc5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610784565b600080868060200190518101906116d391906132ab565b604080516020810184905290810182905291935091506060016040516020818303038152906040528051906020012084146117505760405162461bcd60e51b815260206004820152600e60248201527f696e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610784565b6040516331a9108f60e11b8152600481018390523090636352211e90602401602060405180830381865afa15801561178c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117b091906131ec565b6001600160a01b0316336001600160a01b0316146118005760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b6044820152606401610784565b61180a30836107a9565b611815333084610aab565b509695505050505050565b61182a3383611a06565b61189c5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610784565b6118a884848484611de8565b50505050565b606061067782611e66565b6007546001600160a01b031633146119135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b6001600160a01b03811661198f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610784565b610b4a81611d7c565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906119cd82610f75565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316611a7f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610784565b6000611a8a83610f75565b9050806001600160a01b0316846001600160a01b03161480611ac55750836001600160a01b0316611aba8461070f565b6001600160a01b0316145b80611af557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611b1082610f75565b6001600160a01b031614611b8c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610784565b6001600160a01b038216611c075760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610784565b611c12600082611998565b6001600160a01b0383166000908152600360205260408120805460019290611c3b9084906132e5565b90915550506001600160a01b0382166000908152600360205260408120805460019290611c699084906132fc565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b4a81611ff1565b6000828152600260205260409020546001600160a01b0316611d5d5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610784565b600082815260066020908152604090912082516108d6928401906125fd565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6109d0828260405180602001604052806000815250612031565b611df3848484611afd565b611dff848484846120af565b6118a85760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610784565b6000818152600260205260409020546060906001600160a01b0316611ef35760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610784565b60008281526006602052604081208054611f0c90612e8b565b80601f0160208091040260200160405190810160405280929190818152602001828054611f3890612e8b565b8015611f855780601f10611f5a57610100808354040283529160200191611f85565b820191906000526020600020905b815481529060010190602001808311611f6857829003601f168201915b505050505090506000611fa360408051602081019091526000815290565b9050805160001415611fb6575092915050565b815115611fe8578082604051602001611fd0929190613314565b60405160208183030381529060405292505050919050565b611af5846121f8565b611ffa816122ee565b6000818152600660205260409020805461201390612e8b565b159050610b4a576000818152600660205260408120610b4a91612681565b61203b8383612389565b61204860008484846120af565b6108d65760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610784565b60006001600160a01b0384163b156121ed57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906120f3903390899088908890600401613343565b6020604051808303816000875af192505050801561212e575060408051601f3d908101601f1916820190925261212b9181019061337f565b60015b6121d3573d80801561215c576040519150601f19603f3d011682016040523d82523d6000602084013e612161565b606091505b5080516121cb5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610784565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611af5565b506001949350505050565b6000818152600260205260409020546060906001600160a01b03166122855760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610784565b600061229c60408051602081019091526000815290565b905060008151116122bc57604051806020016040528060008152506122e7565b806122c6846124cb565b6040516020016122d7929190613314565b6040516020818303038152906040525b9392505050565b60006122f982610f75565b9050612306600083611998565b6001600160a01b038116600090815260036020526040812080546001929061232f9084906132e5565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0382166123df5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610784565b6000818152600260205260409020546001600160a01b0316156124445760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610784565b6001600160a01b038216600090815260036020526040812080546001929061246d9084906132fc565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60608161250b57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115612535578061251f8161339c565b915061252e9050600a836133cd565b915061250f565b60008167ffffffffffffffff811115612550576125506128a4565b6040519080825280601f01601f19166020018201604052801561257a576020820181803683370190505b5090505b8415611af55761258f6001836132e5565b915061259c600a866133e1565b6125a79060306132fc565b60f81b8183815181106125bc576125bc6133f5565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506125f6600a866133cd565b945061257e565b82805461260990612e8b565b90600052602060002090601f01602090048101928261262b5760008555612671565b82601f1061264457805160ff1916838001178555612671565b82800160010185558215612671579182015b82811115612671578251825591602001919060010190612656565b5061267d9291506126b7565b5090565b50805461268d90612e8b565b6000825580601f1061269d575050565b601f016020900490600052602060002090810190610b4a91905b5b8082111561267d57600081556001016126b8565b6001600160e01b031981168114610b4a57600080fd5b6000602082840312156126f457600080fd5b81356122e7816126cc565b60005b8381101561271a578181015183820152602001612702565b838111156118a85750506000910152565b600081518084526127438160208601602086016126ff565b601f01601f19169290920160200192915050565b6020815260006122e7602083018461272b565b60006020828403121561277c57600080fd5b5035919050565b6001600160a01b0381168114610b4a57600080fd5b600080604083850312156127ab57600080fd5b82356127b681612783565b946020939093013593505050565b6000806000806000608086880312156127dc57600080fd5b85356127e781612783565b945060208601356127f781612783565b935060408601359250606086013567ffffffffffffffff8082111561281b57600080fd5b818801915088601f83011261282f57600080fd5b81358181111561283e57600080fd5b89602082850101111561285057600080fd5b9699959850939650602001949392505050565b60008060006060848603121561287857600080fd5b833561288381612783565b9250602084013561289381612783565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156128dd576128dd6128a4565b60405290565b6040516080810167ffffffffffffffff811182821017156128dd576128dd6128a4565b60405160a0810167ffffffffffffffff811182821017156128dd576128dd6128a4565b604051601f8201601f1916810167ffffffffffffffff81118282101715612952576129526128a4565b604052919050565b600067ffffffffffffffff821115612974576129746128a4565b50601f01601f191660200190565b60006129956129908461295a565b612929565b90508281528383830111156129a957600080fd5b828260208301376000602084830101529392505050565b6000602082840312156129d257600080fd5b813567ffffffffffffffff8111156129e957600080fd5b8201601f810184136129fa57600080fd5b611af584823560208401612982565b600060208284031215612a1b57600080fd5b81356122e781612783565b600082601f830112612a3757600080fd5b6122e783833560208501612982565b8015158114610b4a57600080fd5b8035612a5f81612a46565b919050565b803560068110612a5f57600080fd5b600060c08284031215612a8557600080fd5b612a8d6128ba565b90508135612a9a81612a46565b8152612aa860208301612a64565b6020820152612ab960408301612a64565b6040820152612aca60608301612a64565b6060820152608082013560098110612ae157600080fd5b608082015260a082013567ffffffffffffffff811115612b0057600080fd5b612b0c84828501612a26565b60a08301525092915050565b600082601f830112612b2957600080fd5b8135602067ffffffffffffffff80831115612b4657612b466128a4565b8260051b612b55838201612929565b9384528581018301938381019088861115612b6f57600080fd5b84880192505b85831015612c2d57823584811115612b8d5760008081fd5b88016080818b03601f1901811315612ba55760008081fd5b612bad6128e3565b87830135612bba81612a46565b81526040612bc9848201612a64565b8983015260608085013589811115612be15760008081fd5b612bef8f8c83890101612a26565b8484015250928401359288841115612c0957600091508182fd5b612c178e8b86880101612a26565b9083015250845250509184019190840190612b75565b98975050505050505050565b600060a08284031215612c4b57600080fd5b612c53612906565b9050612c5e82612a54565b8152602082013567ffffffffffffffff80821115612c7b57600080fd5b612c8785838601612a26565b60208401526040840135915080821115612ca057600080fd5b612cac85838601612a26565b60408401526060840135915080821115612cc557600080fd5b612cd185838601612a73565b60608401526080840135915080821115612cea57600080fd5b50612cf784828501612b18565b60808301525092915050565b600080600080600060a08688031215612d1b57600080fd5b853567ffffffffffffffff80821115612d3357600080fd5b612d3f89838a01612a26565b96506020880135915080821115612d5557600080fd5b612d6189838a01612a26565b95506040880135915080821115612d7757600080fd5b612d8389838a01612c39565b94506060880135915080821115612d9957600080fd5b50612da688828901612c39565b95989497509295608001359392505050565b60008060408385031215612dcb57600080fd5b8235612dd681612783565b91506020830135612de681612a46565b809150509250929050565b60008060008060808587031215612e0757600080fd5b8435612e1281612783565b93506020850135612e2281612783565b925060408501359150606085013567ffffffffffffffff811115612e4557600080fd5b612e5187828801612a26565b91505092959194509250565b60008060408385031215612e7057600080fd5b8235612e7b81612783565b91506020830135612de681612783565b600181811c90821680612e9f57607f821691505b60208210811415612ec057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60068110612eec57612eec612ec6565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015612f7f5782840389528151608081511515865286820151612f3588880182612edc565b506040808301518282890152612f4d8389018261272b565b9250505060608083015192508682038188015250612f6b818361272b565b9a87019a9550505090840190600101612f0e565b5091979650505050505050565b8051151582526000602082015160a06020850152612fad60a085018261272b565b905060408301518482036040860152612fc6828261272b565b915050606083015184820360608601528051151582526020810151612fee6020840182612edc565b5060408101516130016040840182612edc565b5060608101516130146060840182612edc565b5060808101516009811061302a5761302a612ec6565b8060808401525060a0810151905060c060a083015261304c60c083018261272b565b915050608083015184820360808601526130668282612ef0565b95945050505050565b8681526001600160a01b038616602082015260c06040820152600061309760c0830187612f8c565b82810360608401526130a9818761272b565b905082810360808401526130bd818661272b565b905082810360a08401526130d18185612f8c565b9998505050505050505050565b6000602082840312156130f057600080fd5b81516122e781612a46565b600082601f83011261310c57600080fd5b815161311a6129908261295a565b81815284602083860101111561312f57600080fd5b611af58260208301602087016126ff565b6000806000806080858703121561315657600080fd5b84519350602085015167ffffffffffffffff81111561317457600080fd5b613180878288016130fb565b935050604085015161319181612783565b6060959095015193969295505050565b848152600084516131b98160208501602089016126ff565b80830190506bffffffffffffffffffffffff198560601b1660208201528360348201526054810191505095945050505050565b6000602082840312156131fe57600080fd5b81516122e781612783565b60006020828403121561321b57600080fd5b5051919050565b6000806040838503121561323557600080fd5b825161324081612783565b602084015190925067ffffffffffffffff81111561325d57600080fd5b613269858286016130fb565b9150509250929050565b6bffffffffffffffffffffffff198360601b1681526000825161329d8160148501602087016126ff565b919091016014019392505050565b600080604083850312156132be57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b6000828210156132f7576132f76132cf565b500390565b6000821982111561330f5761330f6132cf565b500190565b600083516133268184602088016126ff565b83519083019061333a8183602088016126ff565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152613375608083018461272b565b9695505050505050565b60006020828403121561339157600080fd5b81516122e7816126cc565b60006000198214156133b0576133b06132cf565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826133dc576133dc6133b7565b500490565b6000826133f0576133f06133b7565b500690565b634e487b7160e01b600052603260045260246000fdfea264697066735822122067ea931173a0efbccb7436132046bb8e21084af7ac803f462fe80d834e257f5a64736f6c634300080b0033";

type XDVNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVNFT__factory extends ContractFactory {
  constructor(...args: XDVNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    ancon: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      ancon,
      chain,
      overrides || {}
    ) as Promise<XDVNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    ancon: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      ancon,
      chain,
      overrides || {}
    );
  }
  attach(address: string): XDVNFT {
    return super.attach(address) as XDVNFT;
  }
  connect(signer: Signer): XDVNFT__factory {
    return super.connect(signer) as XDVNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVNFTInterface {
    return new utils.Interface(_abi) as XDVNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): XDVNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVNFT;
  }
}
