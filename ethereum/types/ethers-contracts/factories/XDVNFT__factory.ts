/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XDVNFT, XDVNFTInterface } from "../XDVNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "IWXDVaddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "WXDV",
    outputs: [
      {
        internalType: "contract IWXDV",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "lockWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "releaseWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527fa0b28d7f9d639d313fdc6d1470d226d0631d4301f548fa410483bc9b487c1d08600e556000600f553480156200003a57600080fd5b506040516200353e3803806200353e8339810160408190526200005d91620002cb565b845185908590620000769060009060208501906200013b565b5080516200008c9060019060208401906200013b565b505050620000a9620000a3620000e560201b60201c565b620000e9565b600c80546001600160a01b039485166001600160a01b031991821617909155600d805493909416921691909117909155600f5550620003a19050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001499062000364565b90600052602060002090601f0160209004810192826200016d5760008555620001b8565b82601f106200018857805160ff1916838001178555620001b8565b82800160010185558215620001b8579182015b82811115620001b85782518255916020019190600101906200019b565b50620001c6929150620001ca565b5090565b5b80821115620001c65760008155600101620001cb565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200020957600080fd5b81516001600160401b0380821115620002265762000226620001e1565b604051601f8301601f19908116603f01168101908282118183101715620002515762000251620001e1565b816040528381526020925086838588010111156200026e57600080fd5b600091505b8382101562000292578582018301518183018401529082019062000273565b83821115620002a45760008385830101525b9695505050505050565b80516001600160a01b0381168114620002c657600080fd5b919050565b600080600080600060a08688031215620002e457600080fd5b85516001600160401b0380821115620002fc57600080fd5b6200030a89838a01620001f7565b965060208801519150808211156200032157600080fd5b506200033088828901620001f7565b9450506200034160408701620002ae565b92506200035160608701620002ae565b9150608086015190509295509295909350565b600181811c908216806200037957607f821691505b602082108114156200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b61318d80620003b16000396000f3fe6080604052600436106101cd5760003560e01c806370a08231116100f7578063a22cb46511610095578063e985e9c511610064578063e985e9c51461052b578063e9cbd82214610574578063f2fde38b14610594578063f33d6634146105b457600080fd5b8063a22cb465146104b8578063ac5627f3146104d8578063b88d4fde146104eb578063c87b56dd1461050b57600080fd5b80637ac3c02f116100d15780637ac3c02f146104475780638da5cb5b1461046557806395d89b411461048357806397ded6321461049857600080fd5b806370a08231146103f2578063715018a614610412578063756af45f1461042757600080fd5b806340c10f191161016f57806353f4a1141161013e57806353f4a1141461038a5780635600f04f1461039d5780636352211e146103b25780636c19e783146103d257600080fd5b806340c10f19146102fc57806342842e0e1461032a57806342966c681461034a57806351cff8d91461036a57600080fd5b8063095ea7b3116101ab578063095ea7b314610261578063150b7a021461028357806323b872dd146102bc578063252498a2146102dc57600080fd5b806301ffc9a7146101d257806306fdde0314610207578063081812fc14610229575b600080fd5b3480156101de57600080fd5b506101f26101ed36600461244e565b6105d4565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061021c610671565b6040516101fe91906124c3565b34801561023557600080fd5b506102496102443660046124d6565b610703565b6040516001600160a01b0390911681526020016101fe565b34801561026d57600080fd5b5061028161027c366004612504565b61079d565b005b34801561028f57600080fd5b506102a361029e366004612530565b6108cf565b6040516001600160e01b031990911681526020016101fe565b3480156102c857600080fd5b506102816102d73660046125cf565b6108e1565b3480156102e857600080fd5b506102816102f736600461272c565b610969565b34801561030857600080fd5b5061031c610317366004612504565b6109da565b6040519081526020016101fe565b34801561033657600080fd5b506102816103453660046125cf565b610ab1565b34801561035657600080fd5b506102816103653660046124d6565b610acc565b34801561037657600080fd5b50610281610385366004612775565b610b53565b61031c610398366004612a6f565b610c9c565b3480156103a957600080fd5b5061021c610d98565b3480156103be57600080fd5b506102496103cd3660046124d6565b610e26565b3480156103de57600080fd5b506102816103ed366004612775565b610eb1565b3480156103fe57600080fd5b5061031c61040d366004612775565b610f2d565b34801561041e57600080fd5b50610281610fc7565b34801561043357600080fd5b50610281610442366004612775565b61102d565b34801561045357600080fd5b506009546001600160a01b0316610249565b34801561047157600080fd5b506007546001600160a01b0316610249565b34801561048f57600080fd5b5061021c611232565b3480156104a457600080fd5b5061031c6104b3366004612a6f565b611241565b3480156104c457600080fd5b506102816104d3366004612b24565b611382565b61031c6104e6366004612a6f565b611447565b3480156104f757600080fd5b50610281610506366004612b5d565b61158c565b34801561051757600080fd5b5061021c6105263660046124d6565b61161a565b34801561053757600080fd5b506101f2610546366004612bc9565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561058057600080fd5b50600c54610249906001600160a01b031681565b3480156105a057600080fd5b506102816105af366004612775565b611625565b3480156105c057600080fd5b50600d54610249906001600160a01b031681565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061063757506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061066b57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461068090612bf7565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac90612bf7565b80156106f95780601f106106ce576101008083540402835291602001916106f9565b820191906000526020600020905b8154815290600101906020018083116106dc57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166107815760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006107a882610e26565b9050806001600160a01b0316836001600160a01b031614156108325760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610778565b336001600160a01b038216148061084e575061084e8133610546565b6108c05760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610778565b6108ca8383611704565b505050565b630a85bd0160e11b5b95945050505050565b6108ec335b82611772565b61095e5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610778565b6108ca838383611869565b6007546001600160a01b031633146109c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610778565b80516109d6906008906020840190612369565b5050565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c401610778565b6108ca8383836040518060200160405280600081525061158c565b610ad5336108e6565b610b475760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f766564000000000000000000000000000000006064820152608401610778565b610b5081611a36565b50565b6007546001600160a01b03163314610bad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610778565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610bfc576040519150601f19603f3d011682016040523d82523d6000602084013e610c01565b606091505b509150915081610c535760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610778565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610c8e91815260200190565b60405180910390a250505050565b600d54600e546040517f2e8d656600000000000000000000000000000000000000000000000000000000815260009283926001600160a01b0390911691632e8d656691610cf8913391908c908c908c908c908c90600401612dd2565b6020604051808303816000875af1158015610d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3b9190612e49565b90508060021415610d8b5760008060008089806020019051810190610d609190612ea7565b9350935093509350610d73308386610ab1565b610d7d8484611a3f565b6001955050505050506108d8565b5060009695505050505050565b60088054610da590612bf7565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd190612bf7565b8015610e1e5780601f10610df357610100808354040283529160200191610e1e565b820191906000526020600020905b815481529060010190602001808311610e0157829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b03168061066b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610778565b6007546001600160a01b03163314610f0b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610778565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610fab5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610778565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146110215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610778565b61102b6000611ae8565b565b6007546001600160a01b031633146110875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610778565b600c546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156110e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110d9190612e49565b600c546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af115801561117b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119f9190612f08565b6111eb5760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c65640000000000000000000000006044820152606401610778565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161122691815260200190565b60405180910390a25050565b60606001805461068090612bf7565b6000611251600b80546001019055565b600061125c600b5490565b600d54600e546040517f3fda3d5a0000000000000000000000000000000000000000000000000000000081529293506001600160a01b0390911691633fda3d5a916112b791339186918d908d908d908d908d90600401612f25565b6020604051808303816000875af11580156112d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fa9190612f08565b6113465760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642050726f6f66000000000000000000000000000000000000006044820152606401610778565b6000808780602001905181019061135d9190612fa6565b9150915061136b8284611b3a565b6113758382611a3f565b5090979650505050505050565b6001600160a01b0382163314156113db5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610778565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600d54600e546040517f7e8b80c30000000000000000000000000000000000000000000000000000000081526000926001600160a01b031691637e8b80c39161149e9133918b908b908b908b908b90600401612dd2565b6020604051808303816000875af11580156114bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e19190612e49565b50600080868060200190518101906114f99190612ff7565b604080516020810184905290810182905291935091506060016040516020818303038152906040528051906020012084146115765760405162461bcd60e51b815260206004820152600e60248201527f696e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610778565b611581333084610ab1565b509695505050505050565b6115963383611772565b6116085760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610778565b61161484848484611b54565b50505050565b606061066b82611bd2565b6007546001600160a01b0316331461167f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610778565b6001600160a01b0381166116fb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610778565b610b5081611ae8565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061173982610e26565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166117eb5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610778565b60006117f683610e26565b9050806001600160a01b0316846001600160a01b031614806118315750836001600160a01b031661182684610703565b6001600160a01b0316145b8061186157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661187c82610e26565b6001600160a01b0316146118f85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610778565b6001600160a01b0382166119735760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610778565b61197e600082611704565b6001600160a01b03831660009081526003602052604081208054600192906119a7908490613031565b90915550506001600160a01b03821660009081526003602052604081208054600192906119d5908490613048565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b5081611d5d565b6000828152600260205260409020546001600160a01b0316611ac95760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610778565b600082815260066020908152604090912082516108ca92840190612369565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6109d6828260405180602001604052806000815250611d9d565b611b5f848484611869565b611b6b84848484611e1b565b6116145760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610778565b6000818152600260205260409020546060906001600160a01b0316611c5f5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610778565b60008281526006602052604081208054611c7890612bf7565b80601f0160208091040260200160405190810160405280929190818152602001828054611ca490612bf7565b8015611cf15780601f10611cc657610100808354040283529160200191611cf1565b820191906000526020600020905b815481529060010190602001808311611cd457829003601f168201915b505050505090506000611d0f60408051602081019091526000815290565b9050805160001415611d22575092915050565b815115611d54578082604051602001611d3c929190613060565b60405160208183030381529060405292505050919050565b61186184611f64565b611d668161205a565b60008181526006602052604090208054611d7f90612bf7565b159050610b50576000818152600660205260408120610b50916123ed565b611da783836120f5565b611db46000848484611e1b565b6108ca5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610778565b60006001600160a01b0384163b15611f5957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e5f90339089908890889060040161308f565b6020604051808303816000875af1925050508015611e9a575060408051601f3d908101601f19168201909252611e97918101906130cb565b60015b611f3f573d808015611ec8576040519150601f19603f3d011682016040523d82523d6000602084013e611ecd565b606091505b508051611f375760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610778565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611861565b506001949350505050565b6000818152600260205260409020546060906001600160a01b0316611ff15760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610778565b600061200860408051602081019091526000815290565b905060008151116120285760405180602001604052806000815250612053565b8061203284612237565b604051602001612043929190613060565b6040516020818303038152906040525b9392505050565b600061206582610e26565b9050612072600083611704565b6001600160a01b038116600090815260036020526040812080546001929061209b908490613031565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b03821661214b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610778565b6000818152600260205260409020546001600160a01b0316156121b05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610778565b6001600160a01b03821660009081526003602052604081208054600192906121d9908490613048565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60608161227757505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156122a1578061228b816130e8565b915061229a9050600a83613119565b915061227b565b60008167ffffffffffffffff8111156122bc576122bc612610565b6040519080825280601f01601f1916602001820160405280156122e6576020820181803683370190505b5090505b8415611861576122fb600183613031565b9150612308600a8661312d565b612313906030613048565b60f81b81838151811061232857612328613141565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612362600a86613119565b94506122ea565b82805461237590612bf7565b90600052602060002090601f01602090048101928261239757600085556123dd565b82601f106123b057805160ff19168380011785556123dd565b828001600101855582156123dd579182015b828111156123dd5782518255916020019190600101906123c2565b506123e9929150612423565b5090565b5080546123f990612bf7565b6000825580601f10612409575050565b601f016020900490600052602060002090810190610b5091905b5b808211156123e95760008155600101612424565b6001600160e01b031981168114610b5057600080fd5b60006020828403121561246057600080fd5b813561205381612438565b60005b8381101561248657818101518382015260200161246e565b838111156116145750506000910152565b600081518084526124af81602086016020860161246b565b601f01601f19169290920160200192915050565b6020815260006120536020830184612497565b6000602082840312156124e857600080fd5b5035919050565b6001600160a01b0381168114610b5057600080fd5b6000806040838503121561251757600080fd5b8235612522816124ef565b946020939093013593505050565b60008060008060006080868803121561254857600080fd5b8535612553816124ef565b94506020860135612563816124ef565b935060408601359250606086013567ffffffffffffffff8082111561258757600080fd5b818801915088601f83011261259b57600080fd5b8135818111156125aa57600080fd5b8960208285010111156125bc57600080fd5b9699959850939650602001949392505050565b6000806000606084860312156125e457600080fd5b83356125ef816124ef565b925060208401356125ff816124ef565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561264957612649612610565b60405290565b6040516080810167ffffffffffffffff8111828210171561264957612649612610565b60405160a0810167ffffffffffffffff8111828210171561264957612649612610565b604051601f8201601f1916810167ffffffffffffffff811182821017156126be576126be612610565b604052919050565b600067ffffffffffffffff8211156126e0576126e0612610565b50601f01601f191660200190565b60006127016126fc846126c6565b612695565b905082815283838301111561271557600080fd5b828260208301376000602084830101529392505050565b60006020828403121561273e57600080fd5b813567ffffffffffffffff81111561275557600080fd5b8201601f8101841361276657600080fd5b611861848235602084016126ee565b60006020828403121561278757600080fd5b8135612053816124ef565b600082601f8301126127a357600080fd5b612053838335602085016126ee565b8015158114610b5057600080fd5b80356127cb816127b2565b919050565b8035600681106127cb57600080fd5b600060c082840312156127f157600080fd5b6127f9612626565b90508135612806816127b2565b8152612814602083016127d0565b6020820152612825604083016127d0565b6040820152612836606083016127d0565b606082015260808201356009811061284d57600080fd5b608082015260a082013567ffffffffffffffff81111561286c57600080fd5b61287884828501612792565b60a08301525092915050565b600082601f83011261289557600080fd5b8135602067ffffffffffffffff808311156128b2576128b2612610565b8260051b6128c1838201612695565b93845285810183019383810190888611156128db57600080fd5b84880192505b85831015612999578235848111156128f95760008081fd5b88016080818b03601f19018113156129115760008081fd5b61291961264f565b87830135612926816127b2565b815260406129358482016127d0565b898301526060808501358981111561294d5760008081fd5b61295b8f8c83890101612792565b848401525092840135928884111561297557600091508182fd5b6129838e8b86880101612792565b90830152508452505091840191908401906128e1565b98975050505050505050565b600060a082840312156129b757600080fd5b6129bf612672565b90506129ca826127c0565b8152602082013567ffffffffffffffff808211156129e757600080fd5b6129f385838601612792565b60208401526040840135915080821115612a0c57600080fd5b612a1885838601612792565b60408401526060840135915080821115612a3157600080fd5b612a3d858386016127df565b60608401526080840135915080821115612a5657600080fd5b50612a6384828501612884565b60808301525092915050565b600080600080600060a08688031215612a8757600080fd5b853567ffffffffffffffff80821115612a9f57600080fd5b612aab89838a01612792565b96506020880135915080821115612ac157600080fd5b612acd89838a01612792565b95506040880135915080821115612ae357600080fd5b612aef89838a016129a5565b94506060880135915080821115612b0557600080fd5b50612b12888289016129a5565b95989497509295608001359392505050565b60008060408385031215612b3757600080fd5b8235612b42816124ef565b91506020830135612b52816127b2565b809150509250929050565b60008060008060808587031215612b7357600080fd5b8435612b7e816124ef565b93506020850135612b8e816124ef565b925060408501359150606085013567ffffffffffffffff811115612bb157600080fd5b612bbd87828801612792565b91505092959194509250565b60008060408385031215612bdc57600080fd5b8235612be7816124ef565b91506020830135612b52816124ef565b600181811c90821680612c0b57607f821691505b60208210811415612c2c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60068110612c5857612c58612c32565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015612ceb5782840389528151608081511515865286820151612ca188880182612c48565b506040808301518282890152612cb983890182612497565b9250505060608083015192508682038188015250612cd78183612497565b9a87019a9550505090840190600101612c7a565b5091979650505050505050565b8051151582526000602082015160a06020850152612d1960a0850182612497565b905060408301518482036040860152612d328282612497565b915050606083015184820360608601528051151582526020810151612d5a6020840182612c48565b506040810151612d6d6040840182612c48565b506060810151612d806060840182612c48565b50608081015160098110612d9657612d96612c32565b8060808401525060a0810151905060c060a0830152612db860c0830182612497565b915050608083015184820360808601526108d88282612c5c565b6001600160a01b038816815286602082015260e060408201526000612dfa60e0830188612497565b8281036060840152612e0c8188612497565b90508281036080840152612e208187612cf8565b905082810360a0840152612e348186612cf8565b9150508260c083015298975050505050505050565b600060208284031215612e5b57600080fd5b5051919050565b600082601f830112612e7357600080fd5b8151612e816126fc826126c6565b818152846020838601011115612e9657600080fd5b61186182602083016020870161246b565b60008060008060808587031215612ebd57600080fd5b84519350602085015167ffffffffffffffff811115612edb57600080fd5b612ee787828801612e62565b9350506040850151612ef8816124ef565b6060959095015193969295505050565b600060208284031215612f1a57600080fd5b8151612053816127b2565b60006101006001600160a01b038b168352896020840152886040840152806060840152612f5481840189612497565b90508281036080840152612f688188612497565b905082810360a0840152612f7c8187612cf8565b905082810360c0840152612f908186612cf8565b9150508260e08301529998505050505050505050565b60008060408385031215612fb957600080fd5b8251612fc4816124ef565b602084015190925067ffffffffffffffff811115612fe157600080fd5b612fed85828601612e62565b9150509250929050565b6000806040838503121561300a57600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b6000828210156130435761304361301b565b500390565b6000821982111561305b5761305b61301b565b500190565b6000835161307281846020880161246b565b83519083019061308681836020880161246b565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526130c16080830184612497565b9695505050505050565b6000602082840312156130dd57600080fd5b815161205381612438565b60006000198214156130fc576130fc61301b565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261312857613128613103565b500490565b60008261313c5761313c613103565b500690565b634e487b7160e01b600052603260045260246000fdfea264697066735822122041d238a8cd52985825beb2357f0ac4f72eba0418166b0d127aa3fe9bb511534864736f6c634300080b0033";

type XDVNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVNFT__factory extends ContractFactory {
  constructor(...args: XDVNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    IWXDVaddress: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      IWXDVaddress,
      chain,
      overrides || {}
    ) as Promise<XDVNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    IWXDVaddress: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      IWXDVaddress,
      chain,
      overrides || {}
    );
  }
  attach(address: string): XDVNFT {
    return super.attach(address) as XDVNFT;
  }
  connect(signer: Signer): XDVNFT__factory {
    return super.connect(signer) as XDVNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVNFTInterface {
    return new utils.Interface(_abi) as XDVNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): XDVNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVNFT;
  }
}
