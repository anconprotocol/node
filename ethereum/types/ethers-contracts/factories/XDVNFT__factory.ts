/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XDVNFT, XDVNFTInterface } from "../XDVNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "anconprotocolAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "authenticate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dagContractOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeForContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "serviceFeeForPaymentAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForPaymentAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferURI",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadataUri",
        type: "string",
      },
      {
        internalType: "address",
        name: "transferTo",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferMetadataOwnership",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060105560006011553480156200001b57600080fd5b5060405162003891380380620038918339810160408190526200003e916200029c565b835184908490620000579060009060208501906200010c565b5080516200006d9060019060208401906200010c565b50506006805460ff19169055506200008533620000ba565b600d80546001600160a01b039384166001600160a01b031991821617909155600e805492909316911617905550620003689050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200011a906200032b565b90600052602060002090601f0160209004810192826200013e576000855562000189565b82601f106200015957805160ff191683800117855562000189565b8280016001018555821562000189579182015b82811115620001895782518255916020019190600101906200016c565b50620001979291506200019b565b5090565b5b808211156200019757600081556001016200019c565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001da57600080fd5b81516001600160401b0380821115620001f757620001f7620001b2565b604051601f8301601f19908116603f01168101908282118183101715620002225762000222620001b2565b816040528381526020925086838588010111156200023f57600080fd5b600091505b8382101562000263578582018301518183018401529082019062000244565b83821115620002755760008385830101525b9695505050505050565b80516001600160a01b03811681146200029757600080fd5b919050565b60008060008060808587031215620002b357600080fd5b84516001600160401b0380821115620002cb57600080fd5b620002d988838901620001c8565b95506020870151915080821115620002f057600080fd5b50620002ff87828801620001c8565b93505062000310604086016200027f565b915062000320606086016200027f565b905092959194509250565b600181811c908216806200034057607f821691505b602082108114156200036257634e487b7160e01b600052602260045260246000fd5b50919050565b61351980620003786000396000f3fe608060405234801561001057600080fd5b506004361061025c5760003560e01c806370a0823111610145578063a22cb465116100bd578063c87b56dd1161008c578063e985e9c511610071578063e985e9c5146104f7578063e9cbd82214610533578063f2fde38b1461054657600080fd5b8063c87b56dd146104db578063e53ae102146104ee57600080fd5b8063a22cb46514610499578063b86be2ca146104ac578063b88d4fde146104bf578063c014b9da146104d257600080fd5b80637ac3c02f1161011457806395d89b41116100f957806395d89b411461046b57806397ded63214610473578063a0d9c7211461048657600080fd5b80637ac3c02f146104495780638da5cb5b1461045a57600080fd5b806370a0823114610408578063715018a61461041b578063756af45f146104235780637927b8981461043657600080fd5b806330ba1adf116101d857806342966c68116101a75780635c975abb1161018c5780635c975abb146103d75780636352211e146103e25780636c19e783146103f557600080fd5b806342966c68146103bc5780635600f04f146103cf57600080fd5b806330ba1adf146103705780633cd559a41461038357806340c10f191461039657806342842e0e146103a957600080fd5b8063150b7a021161022f578063252498a211610214578063252498a2146103295780632c078e8d1461033c5780632d4da9371461034f57600080fd5b8063150b7a02146102de57806323b872dd1461031657600080fd5b806301ffc9a71461026157806306fdde0314610289578063081812fc1461029e578063095ea7b3146102c9575b600080fd5b61027461026f366004612783565b610559565b60405190151581526020015b60405180910390f35b6102916105f6565b60405161028091906127f8565b6102b16102ac36600461280b565b610688565b6040516001600160a01b039091168152602001610280565b6102dc6102d7366004612839565b610722565b005b6102fd6102ec366004612865565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610280565b6102dc610324366004612904565b610854565b6102dc610337366004612a79565b6108dc565b6102dc61034a36600461280b565b61094d565b61036261035d366004612aae565b6109ac565b604051908152602001610280565b61027461037e366004612af7565b610a2a565b600e546102b1906001600160a01b031681565b6103626103a4366004612839565b610a6c565b6102dc6103b7366004612904565b610aea565b6102dc6103ca36600461280b565b610b05565b610291610b8c565b60065460ff16610274565b6102b16103f036600461280b565b610c1a565b6102dc610403366004612b3e565b610ca5565b610362610416366004612b3e565b610d21565b6102dc610dbb565b6102dc610431366004612b3e565b610e21565b600f546102b1906001600160a01b031681565b600a546001600160a01b03166102b1565b6008546001600160a01b03166102b1565b610291611026565b610362610481366004612e0c565b611035565b610362610494366004612839565b6111e3565b6102dc6104a7366004612ec1565b611261565b6102dc6104ba36600461280b565b611326565b6102dc6104cd366004612efa565b611385565b61036260105481565b6102916104e936600461280b565b611413565b61036260115481565b610274610505366004612f66565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600d546102b1906001600160a01b031681565b6102dc610554366004612b3e565b61141e565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806105bc57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806105f057507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461060590612f94565b80601f016020809104026020016040519081016040528092919081815260200182805461063190612f94565b801561067e5780601f106106535761010080835404028352916020019161067e565b820191906000526020600020905b81548152906001019060200180831161066157829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166107065760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061072d82610c1a565b9050806001600160a01b0316836001600160a01b031614156107b75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016106fd565b336001600160a01b03821614806107d357506107d38133610505565b6108455760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016106fd565b61084f83836114fd565b505050565b61085f335b8261156b565b6108d15760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016106fd565b61084f838383611662565b6008546001600160a01b031633146109365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b805161094990600990602084019061269e565b5050565b6008546001600160a01b031633146109a75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b601155565b6040516001600160a01b03831660248201526044810182905260009060099060640160408051601f198184030181529181526020820180516001600160e01b03167f85fa63ef000000000000000000000000000000000000000000000000000000001790525163138db8bf60e31b81526106fd929190600401612fcf565b6020810151604082015160608301516000929190831a33610a58610a4f83601b6130a1565b8890868661183a565b6001600160a01b0316149695505050505050565b6040516001600160a01b03831660248201526044810182905260009060099060640160408051601f198184030181529181526020820180516001600160e01b03167f6de436f8000000000000000000000000000000000000000000000000000000001790525163138db8bf60e31b81526106fd929190600401612fcf565b61084f83838360405180602001604052806000815250611385565b610b0e33610859565b610b805760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f7665640000000000000000000000000000000060648201526084016106fd565b610b8981611862565b50565b60098054610b9990612f94565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc590612f94565b8015610c125780601f10610be757610100808354040283529160200191610c12565b820191906000526020600020905b815481529060010190602001808311610bf557829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806105f05760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016106fd565b6008546001600160a01b03163314610cff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610d9f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016106fd565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b03163314610e155760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b610e1f600061186b565b565b6008546001600160a01b03163314610e7b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b600d546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610edd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0191906130c6565b600d546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9391906130df565b610fdf5760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c656400000000000000000000000060448201526064016106fd565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161101a91815260200190565b60405180910390a25050565b60606001805461060590612f94565b600e546040517fbb893b6f0000000000000000000000000000000000000000000000000000000081526000916001600160a01b03169063bb893b6f9061108790339088908b908b908a9060040161329c565b6020604051808303816000875af11580156110a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ca91906130df565b6111165760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f6600000000000000000000000060448201526064016106fd565b611124600c80546001019055565b6000808680602001905181019061113b91906132f8565b915091508181604051602001611152929190613385565b6040516020818303038152906040528051906020012084146111b65760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207061636b657400000000000000000000000000000000000060448201526064016106fd565b60006111c1600c5490565b90506111cd83826118bd565b6111d781836118d7565b98975050505050505050565b6040516001600160a01b03831660248201526044810182905260009060099060640160408051601f198184030181529181526020820180516001600160e01b03167f678c2428000000000000000000000000000000000000000000000000000000001790525163138db8bf60e31b81526106fd929190600401612fcf565b6001600160a01b0382163314156112ba5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016106fd565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b031633146113805760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b601055565b61138f338361156b565b6114015760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016106fd565b61140d84848484611980565b50505050565b60606105f0826119fe565b6008546001600160a01b031633146114785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fd565b6001600160a01b0381166114f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016106fd565b610b898161186b565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061153282610c1a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166115e45760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016106fd565b60006115ef83610c1a565b9050806001600160a01b0316846001600160a01b0316148061162a5750836001600160a01b031661161f84610688565b6001600160a01b0316145b8061165a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b031661167582610c1a565b6001600160a01b0316146116f15760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016106fd565b6001600160a01b03821661176c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016106fd565b611777838383611b89565b6117826000826114fd565b6001600160a01b03831660009081526003602052604081208054600192906117ab9084906133bd565b90915550506001600160a01b03821660009081526003602052604081208054600192906117d99084906133d4565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600080600061184b87878787611bfe565b9150915061185881611ceb565b5095945050505050565b610b8981611ea6565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610949828260405180602001604052806000815250611ee6565b6000828152600260205260409020546001600160a01b03166119615760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016106fd565b6000828152600760209081526040909120825161084f9284019061269e565b61198b848484611662565b61199784848484611f64565b61140d5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016106fd565b6000818152600260205260409020546060906001600160a01b0316611a8b5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000060648201526084016106fd565b60008281526007602052604081208054611aa490612f94565b80601f0160208091040260200160405190810160405280929190818152602001828054611ad090612f94565b8015611b1d5780601f10611af257610100808354040283529160200191611b1d565b820191906000526020600020905b815481529060010190602001808311611b0057829003601f168201915b505050505090506000611b3b60408051602081019091526000815290565b9050805160001415611b4e575092915050565b815115611b80578082604051602001611b689291906133ec565b60405160208183030381529060405292505050919050565b61165a846120aa565b60065460ff1615611bdc5760405162461bcd60e51b815260206004820152601e60248201527f5844563a20546f6b656e20657865637574696f6e20697320706175736564000060448201526064016106fd565b6001600160a01b038316611bf357611bf3336121a0565b61084f8383836122fe565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611c355750600090506003611ce2565b8460ff16601b14158015611c4d57508460ff16601c14155b15611c5e5750600090506004611ce2565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611cb2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611cdb57600060019250925050611ce2565b9150600090505b94509492505050565b6000816004811115611cff57611cff6130fc565b1415611d085750565b6001816004811115611d1c57611d1c6130fc565b1415611d6a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016106fd565b6002816004811115611d7e57611d7e6130fc565b1415611dcc5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016106fd565b6003816004811115611de057611de06130fc565b1415611e395760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016106fd565b6004816004811115611e4d57611e4d6130fc565b1415610b895760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016106fd565b611eaf81612377565b60008181526007602052604090208054611ec890612f94565b159050610b89576000818152600760205260408120610b8991612722565b611ef0838361241e565b611efd6000848484611f64565b61084f5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016106fd565b60006001600160a01b0384163b156120a257604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611fa890339089908890889060040161341b565b6020604051808303816000875af1925050508015611fe3575060408051601f3d908101601f19168201909252611fe091810190613457565b60015b612088573d808015612011576040519150601f19603f3d011682016040523d82523d6000602084013e612016565b606091505b5080516120805760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016106fd565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061165a565b50600161165a565b6000818152600260205260409020546060906001600160a01b03166121375760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016106fd565b600061214e60408051602081019091526000815290565b9050600081511161216e5760405180602001604052806000815250612199565b806121788461256c565b6040516020016121899291906133ec565b6040516020818303038152906040525b9392505050565b600d546011546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af1158015612215573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061223991906130df565b6122ab5760405162461bcd60e51b815260206004820152602260248201527f5844563a205472616e73666572206661696c656420666f72207265636970696560448201527f6e7400000000000000000000000000000000000000000000000000000000000060648201526084016106fd565b806001600160a01b03167fff781da90c6b849a72bafc99aedde3dff0b039f697f31c21e96d587accee27606011546010546040516122f3929190918252602082015260400190565b60405180910390a250565b60065460ff161561084f5760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201527f68696c652070617573656400000000000000000000000000000000000000000060648201526084016106fd565b600061238282610c1a565b905061239081600084611b89565b61239b6000836114fd565b6001600160a01b03811660009081526003602052604081208054600192906123c49084906133bd565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0382166124745760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016106fd565b6000818152600260205260409020546001600160a01b0316156124d95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016106fd565b6124e560008383611b89565b6001600160a01b038216600090815260036020526040812080546001929061250e9084906133d4565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060816125ac57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156125d657806125c081613474565b91506125cf9050600a836134a5565b91506125b0565b60008167ffffffffffffffff8111156125f1576125f1612945565b6040519080825280601f01601f19166020018201604052801561261b576020820181803683370190505b5090505b841561165a576126306001836133bd565b915061263d600a866134b9565b6126489060306133d4565b60f81b81838151811061265d5761265d6134cd565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612697600a866134a5565b945061261f565b8280546126aa90612f94565b90600052602060002090601f0160209004810192826126cc5760008555612712565b82601f106126e557805160ff1916838001178555612712565b82800160010185558215612712579182015b828111156127125782518255916020019190600101906126f7565b5061271e929150612758565b5090565b50805461272e90612f94565b6000825580601f1061273e575050565b601f016020900490600052602060002090810190610b8991905b5b8082111561271e5760008155600101612759565b6001600160e01b031981168114610b8957600080fd5b60006020828403121561279557600080fd5b81356121998161276d565b60005b838110156127bb5781810151838201526020016127a3565b8381111561140d5750506000910152565b600081518084526127e48160208601602086016127a0565b601f01601f19169290920160200192915050565b60208152600061219960208301846127cc565b60006020828403121561281d57600080fd5b5035919050565b6001600160a01b0381168114610b8957600080fd5b6000806040838503121561284c57600080fd5b823561285781612824565b946020939093013593505050565b60008060008060006080868803121561287d57600080fd5b853561288881612824565b9450602086013561289881612824565b935060408601359250606086013567ffffffffffffffff808211156128bc57600080fd5b818801915088601f8301126128d057600080fd5b8135818111156128df57600080fd5b8960208285010111156128f157600080fd5b9699959850939650602001949392505050565b60008060006060848603121561291957600080fd5b833561292481612824565b9250602084013561293481612824565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561297e5761297e612945565b60405290565b6040516080810167ffffffffffffffff8111828210171561297e5761297e612945565b60405160a0810167ffffffffffffffff8111828210171561297e5761297e612945565b604051601f8201601f1916810167ffffffffffffffff811182821017156129f3576129f3612945565b604052919050565b600067ffffffffffffffff821115612a1557612a15612945565b50601f01601f191660200190565b600082601f830112612a3457600080fd5b8135612a47612a42826129fb565b6129ca565b818152846020838601011115612a5c57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215612a8b57600080fd5b813567ffffffffffffffff811115612aa257600080fd5b61165a84828501612a23565b600080600060608486031215612ac357600080fd5b833567ffffffffffffffff811115612ada57600080fd5b612ae686828701612a23565b935050602084013561293481612824565b60008060408385031215612b0a57600080fd5b82359150602083013567ffffffffffffffff811115612b2857600080fd5b612b3485828601612a23565b9150509250929050565b600060208284031215612b5057600080fd5b813561219981612824565b8015158114610b8957600080fd5b8035612b7481612b5b565b919050565b803560068110612b7457600080fd5b600060c08284031215612b9a57600080fd5b612ba261295b565b90508135612baf81612b5b565b8152612bbd60208301612b79565b6020820152612bce60408301612b79565b6040820152612bdf60608301612b79565b6060820152608082013560098110612bf657600080fd5b608082015260a082013567ffffffffffffffff811115612c1557600080fd5b612c2184828501612a23565b60a08301525092915050565b600082601f830112612c3e57600080fd5b8135602067ffffffffffffffff80831115612c5b57612c5b612945565b8260051b612c6a8382016129ca565b9384528581018301938381019088861115612c8457600080fd5b84880192505b858310156111d757823584811115612ca25760008081fd5b88016080818b03601f1901811315612cba5760008081fd5b612cc2612984565b87830135612ccf81612b5b565b81526040612cde848201612b79565b8983015260608085013589811115612cf65760008081fd5b612d048f8c83890101612a23565b8484015250928401359288841115612d1e57600091508182fd5b612d2c8e8b86880101612a23565b9083015250845250509184019190840190612c8a565b600060a08284031215612d5457600080fd5b612d5c6129a7565b9050612d6782612b69565b8152602082013567ffffffffffffffff80821115612d8457600080fd5b612d9085838601612a23565b60208401526040840135915080821115612da957600080fd5b612db585838601612a23565b60408401526060840135915080821115612dce57600080fd5b612dda85838601612b88565b60608401526080840135915080821115612df357600080fd5b50612e0084828501612c2d565b60808301525092915050565b600080600080600060a08688031215612e2457600080fd5b853567ffffffffffffffff80821115612e3c57600080fd5b612e4889838a01612a23565b96506020880135915080821115612e5e57600080fd5b612e6a89838a01612a23565b95506040880135915080821115612e8057600080fd5b612e8c89838a01612d42565b94506060880135915080821115612ea257600080fd5b50612eaf88828901612d42565b95989497509295608001359392505050565b60008060408385031215612ed457600080fd5b8235612edf81612824565b91506020830135612eef81612b5b565b809150509250929050565b60008060008060808587031215612f1057600080fd5b8435612f1b81612824565b93506020850135612f2b81612824565b925060408501359150606085013567ffffffffffffffff811115612f4e57600080fd5b612f5a87828801612a23565b91505092959194509250565b60008060408385031215612f7957600080fd5b8235612f8481612824565b91506020830135612eef81612824565b600181811c90821680612fa857607f821691505b60208210811415612fc957634e487b7160e01b600052602260045260246000fd5b50919050565b60408152600080845481600182811c915080831680612fef57607f831692505b602080841082141561300f57634e487b7160e01b86526022600452602486fd5b604088018490526060880182801561302e576001811461303f5761306a565b60ff1987168252828201975061306a565b60008c81526020902060005b878110156130645781548482015290860190840161304b565b83019850505b505087860381890152505050505061308281856127cc565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff84168060ff038211156130be576130be61308b565b019392505050565b6000602082840312156130d857600080fd5b5051919050565b6000602082840312156130f157600080fd5b815161219981612b5b565b634e487b7160e01b600052602160045260246000fd5b60068110613122576131226130fc565b9052565b600081518084526020808501808196508360051b8101915082860160005b858110156131b5578284038952815160808151151586528682015161316b88880182613112565b506040808301518282890152613183838901826127cc565b92505050606080830151925086820381880152506131a181836127cc565b9a87019a9550505090840190600101613144565b5091979650505050505050565b8051151582526000602082015160a060208501526131e360a08501826127cc565b9050604083015184820360408601526131fc82826127cc565b9150506060830151848203606086015280511515825260208101516132246020840182613112565b5060408101516132376040840182613112565b50606081015161324a6060840182613112565b50608081015160098110613260576132606130fc565b8060808401525060a0810151905060c060a083015261328260c08301826127cc565b915050608083015184820360808601526130828282613126565b6001600160a01b038616815260a0602082015260006132be60a08301876131c2565b82810360408401526132d081876127cc565b905082810360608401526132e481866127cc565b905082810360808401526111d781856131c2565b6000806040838503121561330b57600080fd5b825161331681612824565b602084015190925067ffffffffffffffff81111561333357600080fd5b8301601f8101851361334457600080fd5b8051613352612a42826129fb565b81815286602083850101111561336757600080fd5b6133788260208301602086016127a0565b8093505050509250929050565b6bffffffffffffffffffffffff198360601b168152600082516133af8160148501602087016127a0565b919091016014019392505050565b6000828210156133cf576133cf61308b565b500390565b600082198211156133e7576133e761308b565b500190565b600083516133fe8184602088016127a0565b8351908301906134128183602088016127a0565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261344d60808301846127cc565b9695505050505050565b60006020828403121561346957600080fd5b81516121998161276d565b60006000198214156134885761348861308b565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826134b4576134b461348f565b500490565b6000826134c8576134c861348f565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212205d558c2c595b7bdcc4a3d278b477cbdf1425ce787b176145a4546116fc9e1ca564736f6c634300080b0033";

type XDVNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVNFT__factory extends ContractFactory {
  constructor(...args: XDVNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      overrides || {}
    ) as Promise<XDVNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      overrides || {}
    );
  }
  attach(address: string): XDVNFT {
    return super.attach(address) as XDVNFT;
  }
  connect(signer: Signer): XDVNFT__factory {
    return super.connect(signer) as XDVNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVNFTInterface {
    return new utils.Interface(_abi) as XDVNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): XDVNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVNFT;
  }
}
