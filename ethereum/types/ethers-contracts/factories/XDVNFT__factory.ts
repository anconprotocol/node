/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XDVNFT, XDVNFTInterface } from "../XDVNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "ancon",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "packetProof",
        type: "tuple",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "packetProof",
        type: "tuple",
      },
    ],
    name: "lockWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "packetProof",
        type: "tuple",
      },
    ],
    name: "releaseWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600e553480156200001657600080fd5b506040516200383d3803806200383d8339810160408190526200003991620002a7565b8451859085906200005290600090602085019062000117565b5080516200006890600190602084019062000117565b505050620000856200007f620000c160201b60201c565b620000c5565b600c80546001600160a01b039485166001600160a01b031991821617909155600d805493909416921691909117909155600e55506200037d9050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001259062000340565b90600052602060002090601f01602090048101928262000149576000855562000194565b82601f106200016457805160ff191683800117855562000194565b8280016001018555821562000194579182015b828111156200019457825182559160200191906001019062000177565b50620001a2929150620001a6565b5090565b5b80821115620001a25760008155600101620001a7565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e557600080fd5b81516001600160401b0380821115620002025762000202620001bd565b604051601f8301601f19908116603f011681019082821181831017156200022d576200022d620001bd565b816040528381526020925086838588010111156200024a57600080fd5b600091505b838210156200026e57858201830151818301840152908201906200024f565b83821115620002805760008385830101525b9695505050505050565b80516001600160a01b0381168114620002a257600080fd5b919050565b600080600080600060a08688031215620002c057600080fd5b85516001600160401b0380821115620002d857600080fd5b620002e689838a01620001d3565b96506020880151915080821115620002fd57600080fd5b506200030c88828901620001d3565b9450506200031d604087016200028a565b92506200032d606087016200028a565b9150608086015190509295509295909350565b600181811c908216806200035557607f821691505b602082108114156200037757634e487b7160e01b600052602260045260246000fd5b50919050565b6134b0806200038d6000396000f3fe6080604052600436106101cd5760003560e01c806370a08231116100f7578063b88d4fde11610095578063dd571f7311610064578063dd571f7314610544578063e985e9c514610557578063e9cbd822146105a0578063f2fde38b146105c057600080fd5b8063b88d4fde146104d1578063c87b56dd146104f1578063cffef8f714610511578063dd14082a1461052457600080fd5b80637ac3c02f116100d15780637ac3c02f146104605780638da5cb5b1461047e57806395d89b411461049c578063a22cb465146104b157600080fd5b806370a082311461040b578063715018a61461042b578063756af45f1461044057600080fd5b80633cd559a41161016f57806351cff8d91161013e57806351cff8d9146103965780635600f04f146103b65780636352211e146103cb5780636c19e783146103eb57600080fd5b80633cd559a41461030857806340c10f191461032857806342842e0e1461035657806342966c681461037657600080fd5b8063095ea7b3116101ab578063095ea7b314610261578063150b7a021461028357806323b872dd146102c8578063252498a2146102e857600080fd5b806301ffc9a7146101d257806306fdde0314610207578063081812fc14610229575b600080fd5b3480156101de57600080fd5b506101f26101ed366004612760565b6105e0565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061021c61067d565b6040516101fe91906127d5565b34801561023557600080fd5b506102496102443660046127e8565b61070f565b6040516001600160a01b0390911681526020016101fe565b34801561026d57600080fd5b5061028161027c366004612816565b6107a9565b005b34801561028f57600080fd5b506102af61029e366004612842565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101fe565b3480156102d457600080fd5b506102816102e33660046128e1565b6108db565b3480156102f457600080fd5b50610281610303366004612a3e565b610963565b34801561031457600080fd5b50600d54610249906001600160a01b031681565b34801561033457600080fd5b50610348610343366004612816565b6109d4565b6040519081526020016101fe565b34801561036257600080fd5b506102816103713660046128e1565b610aab565b34801561038257600080fd5b506102816103913660046127e8565b610ac6565b3480156103a257600080fd5b506102816103b1366004612a87565b610b4d565b3480156103c257600080fd5b5061021c610c96565b3480156103d757600080fd5b506102496103e63660046127e8565b610d24565b3480156103f757600080fd5b50610281610406366004612a87565b610daf565b34801561041757600080fd5b50610348610426366004612a87565b610e2b565b34801561043757600080fd5b50610281610ec5565b34801561044c57600080fd5b5061028161045b366004612a87565b610f2b565b34801561046c57600080fd5b506009546001600160a01b0316610249565b34801561048a57600080fd5b506007546001600160a01b0316610249565b3480156104a857600080fd5b5061021c611130565b3480156104bd57600080fd5b506102816104cc366004612ac2565b61113f565b3480156104dd57600080fd5b506102816104ec366004612b1b565b611204565b3480156104fd57600080fd5b5061021c61050c3660046127e8565b611292565b61034861051f366004612e26565b61129d565b34801561053057600080fd5b5061034861053f366004612e26565b611542565b610348610552366004612e26565b61165c565b34801561056357600080fd5b506101f2610572366004612eac565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156105ac57600080fd5b50600c54610249906001600160a01b031681565b3480156105cc57600080fd5b506102816105db366004612a87565b61193e565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061064357506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061067757507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461068c90612eda565b80601f01602080910402602001604051908101604052809291908181526020018280546106b890612eda565b80156107055780601f106106da57610100808354040283529160200191610705565b820191906000526020600020905b8154815290600101906020018083116106e857829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661078d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006107b482610d24565b9050806001600160a01b0316836001600160a01b0316141561083e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610784565b336001600160a01b038216148061085a575061085a8133610572565b6108cc5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610784565b6108d68383611a1d565b505050565b6108e6335b82611a8b565b6109585760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610784565b6108d6838383611b7e565b6007546001600160a01b031633146109bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b80516109d090600890602084019061267b565b5050565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c401610784565b6108d683838360405180602001604052806000815250611204565b610acf336108e0565b610b415760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f766564000000000000000000000000000000006064820152608401610784565b610b4a81611d4b565b50565b6007546001600160a01b03163314610ba75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610bf6576040519150601f19603f3d011682016040523d82523d6000602084013e610bfb565b606091505b509150915081610c4d5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610784565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610c8891815260200190565b60405180910390a250505050565b60088054610ca390612eda565b80601f0160208091040260200160405190810160405280929190818152602001828054610ccf90612eda565b8015610d1c5780601f10610cf157610100808354040283529160200191610d1c565b820191906000526020600020905b815481529060010190602001808311610cff57829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806106775760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610784565b6007546001600160a01b03163314610e095760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610ea95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610784565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b03163314610f1f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b610f296000611d54565b565b6007546001600160a01b03163314610f855760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b600c546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610fe7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100b9190612f15565b600c546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d9190612f2e565b6110e95760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c65640000000000000000000000006044820152606401610784565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161112491815260200190565b60405180910390a25050565b60606001805461068c90612eda565b6001600160a01b0382163314156111985760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610784565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61120e3383611a8b565b6112805760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610784565b61128c84848484611da6565b50505050565b606061067782611e24565b600d5460208201516040516397554e8f60e01b81526000926001600160a01b0316916397554e8f916112db918991339189918b908a906004016130f4565b6020604051808303816000875af11580156112fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131e9190612f2e565b61136a5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610784565b60008060008680602001905181019061138391906131a8565b925092509250600d60009054906101000a90046001600160a01b03166001600160a01b031663c284bdf36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156113dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114009190612f15565b81146114615760405162461bcd60e51b815260206004820152602a60248201527f6d7573742062652066726f6d20616e636f6e70726f746f636f6c2066726f6d2060448201526939b0b6b29031b430b4b760b11b6064820152608401610784565b6040517f6352211e000000000000000000000000000000000000000000000000000000008152600481018490523090636352211e90602401602060405180830381865afa1580156114b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114da91906131f8565b6001600160a01b0316336001600160a01b03161461152a5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b6044820152606401610784565b6115348383611faf565b50909150505b949350505050565b6000611552600b80546001019055565b600061155d600b5490565b600d5460208501516040516397554e8f60e01b81529293506001600160a01b03909116916397554e8f9161159e918a9133918a91908c908b906004016130f4565b6020604051808303816000875af11580156115bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e19190612f2e565b61162d5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610784565b600080868060200190518101906116449190613215565b915091506116528284612058565b6115348382611faf565b600d5460208201516040516397554e8f60e01b81526000926001600160a01b0316916397554e8f9161169a918991339189918b908a906004016130f4565b6020604051808303816000875af11580156116b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116dd9190612f2e565b6117295760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610784565b6000806000806000888060200190518101906117459190613266565b94509450945094509450600d60009054906101000a90046001600160a01b03166001600160a01b031663c284bdf36040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c69190612f15565b81146118275760405162461bcd60e51b815260206004820152602a60248201527f6d7573742062652066726f6d20616e636f6e70726f746f636f6c2066726f6d2060448201526939b0b6b29031b430b4b760b11b6064820152608401610784565b61183083613302565b60601c61183c86610d24565b6001600160a01b0316146118825760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b6044820152606401610784565b61188b83613302565b60601c33146118cc5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b6044820152606401610784565b6118d582613302565b60601c30146119265760405162461bcd60e51b815260206004820152601360248201527f696e76616c69642064657374696e6174696f6e000000000000000000000000006044820152606401610784565b6119308585611faf565b509298975050505050505050565b6007546001600160a01b031633146119985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610784565b6001600160a01b038116611a145760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610784565b610b4a81611d54565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611a5282610d24565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316611b045760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610784565b6000611b0f83610d24565b9050806001600160a01b0316846001600160a01b03161480611b4a5750836001600160a01b0316611b3f8461070f565b6001600160a01b0316145b8061153a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff1661153a565b826001600160a01b0316611b9182610d24565b6001600160a01b031614611c0d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610784565b6001600160a01b038216611c885760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610784565b611c93600082611a1d565b6001600160a01b0383166000908152600360205260408120805460019290611cbc908490613354565b90915550506001600160a01b0382166000908152600360205260408120805460019290611cea90849061336b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b4a81612072565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611db1848484611b7e565b611dbd848484846120b2565b61128c5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610784565b6000818152600260205260409020546060906001600160a01b0316611eb15760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610784565b60008281526006602052604081208054611eca90612eda565b80601f0160208091040260200160405190810160405280929190818152602001828054611ef690612eda565b8015611f435780601f10611f1857610100808354040283529160200191611f43565b820191906000526020600020905b815481529060010190602001808311611f2657829003601f168201915b505050505090506000611f6160408051602081019091526000815290565b9050805160001415611f74575092915050565b815115611fa6578082604051602001611f8e929190613383565b60405160208183030381529060405292505050919050565b61153a846121f8565b6000828152600260205260409020546001600160a01b03166120395760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610784565b600082815260066020908152604090912082516108d69284019061267b565b6109d08282604051806020016040528060008152506122ee565b61207b8161236c565b6000818152600660205260409020805461209490612eda565b159050610b4a576000818152600660205260408120610b4a916126ff565b60006001600160a01b0384163b156121f057604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906120f69033908990889088906004016133b2565b6020604051808303816000875af1925050508015612131575060408051601f3d908101601f1916820190925261212e918101906133ee565b60015b6121d6573d80801561215f576040519150601f19603f3d011682016040523d82523d6000602084013e612164565b606091505b5080516121ce5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610784565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061153a565b50600161153a565b6000818152600260205260409020546060906001600160a01b03166122855760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610784565b600061229c60408051602081019091526000815290565b905060008151116122bc57604051806020016040528060008152506122e7565b806122c684612407565b6040516020016122d7929190613383565b6040516020818303038152906040525b9392505050565b6122f88383612539565b61230560008484846120b2565b6108d65760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610784565b600061237782610d24565b9050612384600083611a1d565b6001600160a01b03811660009081526003602052604081208054600192906123ad908490613354565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60608161244757505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115612471578061245b8161340b565b915061246a9050600a8361343c565b915061244b565b60008167ffffffffffffffff81111561248c5761248c612922565b6040519080825280601f01601f1916602001820160405280156124b6576020820181803683370190505b5090505b841561153a576124cb600183613354565b91506124d8600a86613450565b6124e390603061336b565b60f81b8183815181106124f8576124f8613464565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612532600a8661343c565b94506124ba565b6001600160a01b03821661258f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610784565b6000818152600260205260409020546001600160a01b0316156125f45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610784565b6001600160a01b038216600090815260036020526040812080546001929061261d90849061336b565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b82805461268790612eda565b90600052602060002090601f0160209004810192826126a957600085556126ef565b82601f106126c257805160ff19168380011785556126ef565b828001600101855582156126ef579182015b828111156126ef5782518255916020019190600101906126d4565b506126fb929150612735565b5090565b50805461270b90612eda565b6000825580601f1061271b575050565b601f016020900490600052602060002090810190610b4a91905b5b808211156126fb5760008155600101612736565b6001600160e01b031981168114610b4a57600080fd5b60006020828403121561277257600080fd5b81356122e78161274a565b60005b83811015612798578181015183820152602001612780565b8381111561128c5750506000910152565b600081518084526127c181602086016020860161277d565b601f01601f19169290920160200192915050565b6020815260006122e760208301846127a9565b6000602082840312156127fa57600080fd5b5035919050565b6001600160a01b0381168114610b4a57600080fd5b6000806040838503121561282957600080fd5b823561283481612801565b946020939093013593505050565b60008060008060006080868803121561285a57600080fd5b853561286581612801565b9450602086013561287581612801565b935060408601359250606086013567ffffffffffffffff8082111561289957600080fd5b818801915088601f8301126128ad57600080fd5b8135818111156128bc57600080fd5b8960208285010111156128ce57600080fd5b9699959850939650602001949392505050565b6000806000606084860312156128f657600080fd5b833561290181612801565b9250602084013561291181612801565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561295b5761295b612922565b60405290565b6040516080810167ffffffffffffffff8111828210171561295b5761295b612922565b60405160a0810167ffffffffffffffff8111828210171561295b5761295b612922565b604051601f8201601f1916810167ffffffffffffffff811182821017156129d0576129d0612922565b604052919050565b600067ffffffffffffffff8211156129f2576129f2612922565b50601f01601f191660200190565b6000612a13612a0e846129d8565b6129a7565b9050828152838383011115612a2757600080fd5b828260208301376000602084830101529392505050565b600060208284031215612a5057600080fd5b813567ffffffffffffffff811115612a6757600080fd5b8201601f81018413612a7857600080fd5b61153a84823560208401612a00565b600060208284031215612a9957600080fd5b81356122e781612801565b8015158114610b4a57600080fd5b8035612abd81612aa4565b919050565b60008060408385031215612ad557600080fd5b8235612ae081612801565b91506020830135612af081612aa4565b809150509250929050565b600082601f830112612b0c57600080fd5b6122e783833560208501612a00565b60008060008060808587031215612b3157600080fd5b8435612b3c81612801565b93506020850135612b4c81612801565b925060408501359150606085013567ffffffffffffffff811115612b6f57600080fd5b612b7b87828801612afb565b91505092959194509250565b803560068110612abd57600080fd5b600060c08284031215612ba857600080fd5b612bb0612938565b90508135612bbd81612aa4565b8152612bcb60208301612b87565b6020820152612bdc60408301612b87565b6040820152612bed60608301612b87565b6060820152608082013560098110612c0457600080fd5b608082015260a082013567ffffffffffffffff811115612c2357600080fd5b612c2f84828501612afb565b60a08301525092915050565b600082601f830112612c4c57600080fd5b8135602067ffffffffffffffff80831115612c6957612c69612922565b8260051b612c788382016129a7565b9384528581018301938381019088861115612c9257600080fd5b84880192505b85831015612d5057823584811115612cb05760008081fd5b88016080818b03601f1901811315612cc85760008081fd5b612cd0612961565b87830135612cdd81612aa4565b81526040612cec848201612b87565b8983015260608085013589811115612d045760008081fd5b612d128f8c83890101612afb565b8484015250928401359288841115612d2c57600091508182fd5b612d3a8e8b86880101612afb565b9083015250845250509184019190840190612c98565b98975050505050505050565b600060a08284031215612d6e57600080fd5b612d76612984565b9050612d8182612ab2565b8152602082013567ffffffffffffffff80821115612d9e57600080fd5b612daa85838601612afb565b60208401526040840135915080821115612dc357600080fd5b612dcf85838601612afb565b60408401526060840135915080821115612de857600080fd5b612df485838601612b96565b60608401526080840135915080821115612e0d57600080fd5b50612e1a84828501612c3b565b60808301525092915050565b60008060008060808587031215612e3c57600080fd5b84359350602085013567ffffffffffffffff80821115612e5b57600080fd5b612e6788838901612afb565b94506040870135915080821115612e7d57600080fd5b612e8988838901612d5c565b93506060870135915080821115612e9f57600080fd5b50612b7b87828801612d5c565b60008060408385031215612ebf57600080fd5b8235612eca81612801565b91506020830135612af081612801565b600181811c90821680612eee57607f821691505b60208210811415612f0f57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215612f2757600080fd5b5051919050565b600060208284031215612f4057600080fd5b81516122e781612aa4565b634e487b7160e01b600052602160045260246000fd5b60068110612f7157612f71612f4b565b9052565b600081518084526020808501808196508360051b8101915082860160005b858110156130045782840389528151608081511515865286820151612fba88880182612f61565b506040808301518282890152612fd2838901826127a9565b9250505060608083015192508682038188015250612ff081836127a9565b9a87019a9550505090840190600101612f93565b5091979650505050505050565b8051151582526000602082015160a0602085015261303260a08501826127a9565b90506040830151848203604086015261304b82826127a9565b9150506060830151848203606086015280511515825260208101516130736020840182612f61565b5060408101516130866040840182612f61565b5060608101516130996060840182612f61565b506080810151600981106130af576130af612f4b565b8060808401525060a0810151905060c060a08301526130d160c08301826127a9565b915050608083015184820360808601526130eb8282612f75565b95945050505050565b8681526001600160a01b038616602082015260c06040820152600061311c60c0830187613011565b828103606084015261312e81876127a9565b9050828103608084015261314281866127a9565b905082810360a08401526131568185613011565b9998505050505050505050565b600082601f83011261317457600080fd5b8151613182612a0e826129d8565b81815284602083860101111561319757600080fd5b61153a82602083016020870161277d565b6000806000606084860312156131bd57600080fd5b83519250602084015167ffffffffffffffff8111156131db57600080fd5b6131e786828701613163565b925050604084015190509250925092565b60006020828403121561320a57600080fd5b81516122e781612801565b6000806040838503121561322857600080fd5b825161323381612801565b602084015190925067ffffffffffffffff81111561325057600080fd5b61325c85828601613163565b9150509250929050565b600080600080600060a0868803121561327e57600080fd5b85519450602086015167ffffffffffffffff8082111561329d57600080fd5b6132a989838a01613163565b955060408801519150808211156132bf57600080fd5b6132cb89838a01613163565b945060608801519150808211156132e157600080fd5b506132ee88828901613163565b925050608086015190509295509295909350565b805160208201516bffffffffffffffffffffffff1980821692919060148310156133365780818460140360031b1b83161693505b505050919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156133665761336661333e565b500390565b6000821982111561337e5761337e61333e565b500190565b6000835161339581846020880161277d565b8351908301906133a981836020880161277d565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526133e460808301846127a9565b9695505050505050565b60006020828403121561340057600080fd5b81516122e78161274a565b600060001982141561341f5761341f61333e565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261344b5761344b613426565b500490565b60008261345f5761345f613426565b500690565b634e487b7160e01b600052603260045260246000fdfea264697066735822122065171b59355ca9ef3499c384e76768f448702354f683145fe3156350bbb1554864736f6c634300080b0033";

type XDVNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVNFT__factory extends ContractFactory {
  constructor(...args: XDVNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    ancon: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      ancon,
      chain,
      overrides || {}
    ) as Promise<XDVNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    ancon: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      ancon,
      chain,
      overrides || {}
    );
  }
  attach(address: string): XDVNFT {
    return super.attach(address) as XDVNFT;
  }
  connect(signer: Signer): XDVNFT__factory {
    return super.connect(signer) as XDVNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVNFTInterface {
    return new utils.Interface(_abi) as XDVNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): XDVNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVNFT;
  }
}
