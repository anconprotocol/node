/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XDVNFT, XDVNFTInterface } from "../XDVNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "anconprotocolAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "TOKEN_AVAILABLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_BURNED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_LOCKED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dagContractOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeForContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "serviceFeeForPaymentAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenLockStorage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForPaymentAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "burnWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "lockWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "releaseWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "islocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527faba593141db1021cb8de7f38506a824487c2f2e5758168a6568eb7d6a8dd3173600c557f35e808e423fc257ba1bb61b1c2c57e48855b39cbee1f101ebe4fcb026f39e2e0600d557f1a7568e05cd9c1f5b58509adc78e175b2c29ad54d925ee42a8b45d9d39b1081b600e55600060135560006014553480156200008757600080fd5b5060405162003b2c38038062003b2c833981016040819052620000aa9162000308565b835184908490620000c390600090602085019062000178565b508051620000d990600190602084019062000178565b50506006805460ff1916905550620000f13362000126565b601080546001600160a01b039384166001600160a01b0319918216179091556011805492909316911617905550620003d49050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001869062000397565b90600052602060002090601f016020900481019282620001aa5760008555620001f5565b82601f10620001c557805160ff1916838001178555620001f5565b82800160010185558215620001f5579182015b82811115620001f5578251825591602001919060010190620001d8565b506200020392915062000207565b5090565b5b8082111562000203576000815560010162000208565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200024657600080fd5b81516001600160401b03808211156200026357620002636200021e565b604051601f8301601f19908116603f011681019082821181831017156200028e576200028e6200021e565b81604052838152602092508683858801011115620002ab57600080fd5b600091505b83821015620002cf5785820183015181830184015290820190620002b0565b83821115620002e15760008385830101525b9695505050505050565b80516001600160a01b03811681146200030357600080fd5b919050565b600080600080608085870312156200031f57600080fd5b84516001600160401b03808211156200033757600080fd5b620003458883890162000234565b955060208701519150808211156200035c57600080fd5b506200036b8782880162000234565b9350506200037c60408601620002eb565b91506200038c60608601620002eb565b905092959194509250565b600181811c90821680620003ac57607f821691505b60208210811415620003ce57634e487b7160e01b600052602260045260246000fd5b50919050565b61374880620003e46000396000f3fe608060405234801561001057600080fd5b50600436106102d35760003560e01c8063715018a611610186578063b88d4fde116100e3578063e750fc8911610097578063ea641b7d11610071578063ea641b7d146105dc578063f2fde38b146105ef578063fd632d511461060257600080fd5b8063e750fc891461056d578063e985e9c51461058d578063e9cbd822146105c957600080fd5b8063c87b56dd116100c8578063c87b56dd1461052c578063cfc315041461053f578063e53ae1021461056457600080fd5b8063b88d4fde14610510578063c014b9da1461052357600080fd5b806395d89b411161013a578063a22cb4651161011f578063a22cb465146104d7578063ac5627f3146104ea578063b86be2ca146104fd57600080fd5b806395d89b41146104bc57806397ded632146104c457600080fd5b80637927b8981161016b5780637927b898146104875780637ac3c02f1461049a5780638da5cb5b146104ab57600080fd5b8063715018a61461046c578063756af45f1461047457600080fd5b806342842e0e11610234578063588f7ae2116101e85780636352211e116101cd5780636352211e146104335780636c19e7831461044657806370a082311461045957600080fd5b8063588f7ae21461041f5780635c975abb1461042857600080fd5b806351cff8d91161021957806351cff8d9146103f157806353f4a114146104045780635600f04f1461041757600080fd5b806342842e0e146103cb57806342966c68146103de57600080fd5b806323b872dd1161028b5780632c078e8d116102705780632c078e8d146103925780633cd559a4146103a557806340c10f19146103b857600080fd5b806323b872dd1461036c578063252498a21461037f57600080fd5b8063081812fc116102bc578063081812fc14610315578063095ea7b3146103405780632380bcd21461035557600080fd5b806301ffc9a7146102d857806306fdde0314610300575b600080fd5b6102eb6102e6366004612b5a565b61060b565b60405190151581526020015b60405180910390f35b6103086106a8565b6040516102f79190612bcf565b610328610323366004612be2565b61073a565b6040516001600160a01b0390911681526020016102f7565b61035361034e366004612c10565b6107d4565b005b61035e600e5481565b6040519081526020016102f7565b61035361037a366004612c3c565b610906565b61035361038d366004612d99565b61098e565b6103536103a0366004612be2565b6109ff565b601154610328906001600160a01b031681565b61035e6103c6366004612c10565b610a5e565b6103536103d9366004612c3c565b610b35565b6103536103ec366004612be2565b610b50565b6103536103ff366004612de2565b610bd7565b61035e6104123660046130dc565b610d20565b610308610e74565b61035e600d5481565b60065460ff166102eb565b610328610441366004612be2565b610f02565b610353610454366004612de2565b610f8d565b61035e610467366004612de2565b611009565b6103536110a3565b610353610482366004612de2565b611109565b601254610328906001600160a01b031681565b600a546001600160a01b0316610328565b6008546001600160a01b0316610328565b61030861130e565b61035e6104d23660046130dc565b61131d565b6103536104e5366004613191565b6114ac565b61035e6104f83660046130dc565b611571565b61035361050b366004612be2565b61171e565b61035361051e3660046131ca565b61177d565b61035e60135481565b61030861053a366004612be2565b61180b565b6102eb61054d366004612be2565b600c54600091825260156020526040909120541490565b61035e60145481565b61035e61057b366004612be2565b60156020526000908152604090205481565b6102eb61059b366004613236565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b601054610328906001600160a01b031681565b61035e6105ea3660046130dc565b611816565b6103536105fd366004612de2565b61197a565b61035e600c5481565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061066e57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806106a257507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600080546106b790613264565b80601f01602080910402602001604051908101604052809291908181526020018280546106e390613264565b80156107305780601f1061070557610100808354040283529160200191610730565b820191906000526020600020905b81548152906001019060200180831161071357829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166107b85760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006107df82610f02565b9050806001600160a01b0316836001600160a01b031614156108695760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016107af565b336001600160a01b03821614806108855750610885813361059b565b6108f75760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016107af565b6109018383611a59565b505050565b610911335b82611ac7565b6109835760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016107af565b610901838383611bbe565b6008546001600160a01b031633146109e85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b80516109fb906009906020840190612a75565b5050565b6008546001600160a01b03163314610a595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b601455565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c4016107af565b6109018383836040518060200160405280600081525061177d565b610b593361090b565b610bcb5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f7665640000000000000000000000000000000060648201526084016107af565b610bd481611d96565b50565b6008546001600160a01b03163314610c315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610c80576040519150601f19603f3d011682016040523d82523d6000602084013e610c85565b606091505b509150915081610cd75760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016107af565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610d1291815260200190565b60405180910390a250505050565b60115460405163bb893b6f60e01b81526000916001600160a01b03169063bb893b6f90610d5990339088908b908b908a90600401613445565b6020604051808303816000875af1158015610d78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9c91906134a1565b610ddf5760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103830b1b5b2ba10383937b7b360611b60448201526064016107af565b60008086806020019051810190610df69190613503565b91509150610e0382610f02565b6001600160a01b0316306001600160a01b031614610e2057600080fd5b610e2982611d9f565b610e34303384610b35565b610e3e8282611e13565b60405182907ffb81f9b30d73d830c3544b34d827c08142579ee75710b490bab0b3995468c56590600090a2509695505050505050565b60098054610e8190613264565b80601f0160208091040260200160405190810160405280929190818152602001828054610ead90613264565b8015610efa5780601f10610ecf57610100808354040283529160200191610efa565b820191906000526020600020905b815481529060010190602001808311610edd57829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806106a25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016107af565b6008546001600160a01b03163314610fe75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0382166110875760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016107af565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b031633146110fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b6111076000611ebc565b565b6008546001600160a01b031633146111635760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b6010546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156111c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e9919061354a565b6010546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015611257573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061127b91906134a1565b6112c75760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c656400000000000000000000000060448201526064016107af565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161130291815260200190565b60405180910390a25050565b6060600180546106b790613264565b60115460405163bb893b6f60e01b81526000916001600160a01b03169063bb893b6f9061135690339088908b908b908a90600401613445565b6020604051808303816000875af1158015611375573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139991906134a1565b6113dc5760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103830b1b5b2ba10383937b7b360611b60448201526064016107af565b600080868060200190518101906113f39190613563565b91509150818160405160200161140a92919061359e565b60405160208183030381529060405280519060200120841461145f5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c1858dad95d60921b60448201526064016107af565b61146d600f80546001019055565b6000611478600f5490565b90506114848382611f0e565b61148e8183611e13565b600e5460008281526015602052604090205598975050505050505050565b6001600160a01b0382163314156115055760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016107af565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b60115460405163bb893b6f60e01b81526000916001600160a01b03169063bb893b6f906115aa90339088908b908b908a90600401613445565b6020604051808303816000875af11580156115c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ed91906134a1565b6116305760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103830b1b5b2ba10383937b7b360611b60448201526064016107af565b600085806020019051810190611646919061354a565b90508060405160200161165b91815260200190565b6040516020818303038152906040528051906020012083146116b05760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c1858dad95d60921b60448201526064016107af565b6116b981610f02565b6001600160a01b0316336001600160a01b0316146116d657600080fd5b6116e030826107d4565b6116e981611f28565b60405181907f032bc66be43dbccb7487781d168eb7bda224628a3b2c3388bdf69b532a3a161190600090a29695505050505050565b6008546001600160a01b031633146117785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b601355565b6117873383611ac7565b6117f95760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016107af565b61180584848484611f9c565b50505050565b60606106a28261201a565b60115460405163bb893b6f60e01b81526000916001600160a01b03169063bb893b6f9061184f90339088908b908b908a90600401613445565b6020604051808303816000875af115801561186e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189291906134a1565b6118d55760405162461bcd60e51b815260206004820152601460248201527334b73b30b634b2103830b1b5b2ba10383937b7b360611b60448201526064016107af565b6000858060200190518101906118eb919061354a565b90508060405160200161190091815260200190565b6040516020818303038152906040528051906020012083146119555760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c1858dad95d60921b60448201526064016107af565b61195e81611d96565b600d546000828152601560205260409020559695505050505050565b6008546001600160a01b031633146119d45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107af565b6001600160a01b038116611a505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107af565b610bd481611ebc565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611a8e82610f02565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316611b405760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016107af565b6000611b4b83610f02565b9050806001600160a01b0316846001600160a01b03161480611b865750836001600160a01b0316611b7b8461073a565b6001600160a01b0316145b80611bb657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316611bd182610f02565b6001600160a01b031614611c4d5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016107af565b6001600160a01b038216611cc85760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016107af565b611cd38383836121a5565b611cde600082611a59565b6001600160a01b0383166000908152600360205260408120805460019290611d079084906135ec565b90915550506001600160a01b0382166000908152600360205260408120805460019290611d35908490613603565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610bd48161227a565b600c5460008281526015602052604090205414611dfe5760405162461bcd60e51b815260206004820152601960248201527f546f6b656e20697320616c726561647920756e6c6f636b65640000000000000060448201526064016107af565b600e5460009182526015602052604090912055565b6000828152600260205260409020546001600160a01b0316611e9d5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016107af565b6000828152600760209081526040909120825161090192840190612a75565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6109fb8282604051806020016040528060008152506122ba565b600e5460008281526015602052604090205414611f875760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20697320616c7265616479206c6f636b656400000000000000000060448201526064016107af565b600c5460009182526015602052604090912055565b611fa7848484611bbe565b611fb384848484612338565b6118055760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016107af565b6000818152600260205260409020546060906001600160a01b03166120a75760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000060648201526084016107af565b600082815260076020526040812080546120c090613264565b80601f01602080910402602001604051908101604052809291908181526020018280546120ec90613264565b80156121395780601f1061210e57610100808354040283529160200191612139565b820191906000526020600020905b81548152906001019060200180831161211c57829003601f168201915b50505050509050600061215760408051602081019091526000815290565b905080516000141561216a575092915050565b81511561219c57808260405160200161218492919061361b565b60405160208183030381529060405292505050919050565b611bb684612481565b60065460ff16156121f85760405162461bcd60e51b815260206004820152601e60248201527f5844563a20546f6b656e20657865637574696f6e20697320706175736564000060448201526064016107af565b600c5460008281526015602052604090205414156122585760405162461bcd60e51b815260206004820152601960248201527f5844563a205468697320746f6b656e206973206c6f636b65640000000000000060448201526064016107af565b6001600160a01b03831661226f5761226f33612577565b6109018383836126d5565b6122838161274e565b6000818152600760205260409020805461229c90613264565b159050610bd4576000818152600760205260408120610bd491612af9565b6122c483836127f5565b6122d16000848484612338565b6109015760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016107af565b60006001600160a01b0384163b1561247657604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061237c90339089908890889060040161364a565b6020604051808303816000875af19250505080156123b7575060408051601f3d908101601f191682019092526123b491810190613686565b60015b61245c573d8080156123e5576040519150601f19603f3d011682016040523d82523d6000602084013e6123ea565b606091505b5080516124545760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016107af565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611bb6565b506001949350505050565b6000818152600260205260409020546060906001600160a01b031661250e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016107af565b600061252560408051602081019091526000815290565b905060008151116125455760405180602001604052806000815250612570565b8061254f84612943565b60405160200161256092919061361b565b6040516020818303038152906040525b9392505050565b6010546014546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af11580156125ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061261091906134a1565b6126825760405162461bcd60e51b815260206004820152602260248201527f5844563a205472616e73666572206661696c656420666f72207265636970696560448201527f6e7400000000000000000000000000000000000000000000000000000000000060648201526084016107af565b806001600160a01b03167fff781da90c6b849a72bafc99aedde3dff0b039f697f31c21e96d587accee27606014546013546040516126ca929190918252602082015260400190565b60405180910390a250565b60065460ff16156109015760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201527f68696c652070617573656400000000000000000000000000000000000000000060648201526084016107af565b600061275982610f02565b9050612767816000846121a5565b612772600083611a59565b6001600160a01b038116600090815260036020526040812080546001929061279b9084906135ec565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b03821661284b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107af565b6000818152600260205260409020546001600160a01b0316156128b05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107af565b6128bc600083836121a5565b6001600160a01b03821660009081526003602052604081208054600192906128e5908490613603565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60608161298357505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156129ad5780612997816136a3565b91506129a69050600a836136d4565b9150612987565b60008167ffffffffffffffff8111156129c8576129c8612c7d565b6040519080825280601f01601f1916602001820160405280156129f2576020820181803683370190505b5090505b8415611bb657612a076001836135ec565b9150612a14600a866136e8565b612a1f906030613603565b60f81b818381518110612a3457612a346136fc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612a6e600a866136d4565b94506129f6565b828054612a8190613264565b90600052602060002090601f016020900481019282612aa35760008555612ae9565b82601f10612abc57805160ff1916838001178555612ae9565b82800160010185558215612ae9579182015b82811115612ae9578251825591602001919060010190612ace565b50612af5929150612b2f565b5090565b508054612b0590613264565b6000825580601f10612b15575050565b601f016020900490600052602060002090810190610bd491905b5b80821115612af55760008155600101612b30565b6001600160e01b031981168114610bd457600080fd5b600060208284031215612b6c57600080fd5b813561257081612b44565b60005b83811015612b92578181015183820152602001612b7a565b838111156118055750506000910152565b60008151808452612bbb816020860160208601612b77565b601f01601f19169290920160200192915050565b6020815260006125706020830184612ba3565b600060208284031215612bf457600080fd5b5035919050565b6001600160a01b0381168114610bd457600080fd5b60008060408385031215612c2357600080fd5b8235612c2e81612bfb565b946020939093013593505050565b600080600060608486031215612c5157600080fd5b8335612c5c81612bfb565b92506020840135612c6c81612bfb565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612cb657612cb6612c7d565b60405290565b6040516080810167ffffffffffffffff81118282101715612cb657612cb6612c7d565b60405160a0810167ffffffffffffffff81118282101715612cb657612cb6612c7d565b604051601f8201601f1916810167ffffffffffffffff81118282101715612d2b57612d2b612c7d565b604052919050565b600067ffffffffffffffff821115612d4d57612d4d612c7d565b50601f01601f191660200190565b6000612d6e612d6984612d33565b612d02565b9050828152838383011115612d8257600080fd5b828260208301376000602084830101529392505050565b600060208284031215612dab57600080fd5b813567ffffffffffffffff811115612dc257600080fd5b8201601f81018413612dd357600080fd5b611bb684823560208401612d5b565b600060208284031215612df457600080fd5b813561257081612bfb565b600082601f830112612e1057600080fd5b61257083833560208501612d5b565b8015158114610bd457600080fd5b8035612e3881612e1f565b919050565b803560068110612e3857600080fd5b600060c08284031215612e5e57600080fd5b612e66612c93565b90508135612e7381612e1f565b8152612e8160208301612e3d565b6020820152612e9260408301612e3d565b6040820152612ea360608301612e3d565b6060820152608082013560098110612eba57600080fd5b608082015260a082013567ffffffffffffffff811115612ed957600080fd5b612ee584828501612dff565b60a08301525092915050565b600082601f830112612f0257600080fd5b8135602067ffffffffffffffff80831115612f1f57612f1f612c7d565b8260051b612f2e838201612d02565b9384528581018301938381019088861115612f4857600080fd5b84880192505b8583101561300657823584811115612f665760008081fd5b88016080818b03601f1901811315612f7e5760008081fd5b612f86612cbc565b87830135612f9381612e1f565b81526040612fa2848201612e3d565b8983015260608085013589811115612fba5760008081fd5b612fc88f8c83890101612dff565b8484015250928401359288841115612fe257600091508182fd5b612ff08e8b86880101612dff565b9083015250845250509184019190840190612f4e565b98975050505050505050565b600060a0828403121561302457600080fd5b61302c612cdf565b905061303782612e2d565b8152602082013567ffffffffffffffff8082111561305457600080fd5b61306085838601612dff565b6020840152604084013591508082111561307957600080fd5b61308585838601612dff565b6040840152606084013591508082111561309e57600080fd5b6130aa85838601612e4c565b606084015260808401359150808211156130c357600080fd5b506130d084828501612ef1565b60808301525092915050565b600080600080600060a086880312156130f457600080fd5b853567ffffffffffffffff8082111561310c57600080fd5b61311889838a01612dff565b9650602088013591508082111561312e57600080fd5b61313a89838a01612dff565b9550604088013591508082111561315057600080fd5b61315c89838a01613012565b9450606088013591508082111561317257600080fd5b5061317f88828901613012565b95989497509295608001359392505050565b600080604083850312156131a457600080fd5b82356131af81612bfb565b915060208301356131bf81612e1f565b809150509250929050565b600080600080608085870312156131e057600080fd5b84356131eb81612bfb565b935060208501356131fb81612bfb565b925060408501359150606085013567ffffffffffffffff81111561321e57600080fd5b61322a87828801612dff565b91505092959194509250565b6000806040838503121561324957600080fd5b823561325481612bfb565b915060208301356131bf81612bfb565b600181811c9082168061327857607f821691505b6020821081141561329957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b600681106132c5576132c561329f565b9052565b6000815180845260208085019450848260051b860182860160005b85811015613355578383038952815160808151151585528682015161330b888701826132b5565b50604080830151828288015261332383880182612ba3565b92505050606080830151925085820381870152506133418183612ba3565b9a87019a94505050908401906001016132e4565b5090979650505050505050565b8051151582526000602082015160a0602085015261338360a0850182612ba3565b90506040830151848203604086015261339c8282612ba3565b9150506060830151848203606086015280511515825260208101516133c460208401826132b5565b5060408101516133d760408401826132b5565b5060608101516133ea60608401826132b5565b506080810151600981106134005761340061329f565b8060808401525060a0810151905060c060a083015261342260c0830182612ba3565b9150506080830151848203608086015261343c82826132c9565b95945050505050565b6001600160a01b038616815260a06020820152600061346760a0830187613362565b82810360408401526134798187612ba3565b9050828103606084015261348d8186612ba3565b905082810360808401526130068185613362565b6000602082840312156134b357600080fd5b815161257081612e1f565b600082601f8301126134cf57600080fd5b81516134dd612d6982612d33565b8181528460208386010111156134f257600080fd5b611bb6826020830160208701612b77565b6000806040838503121561351657600080fd5b82519150602083015167ffffffffffffffff81111561353457600080fd5b613540858286016134be565b9150509250929050565b60006020828403121561355c57600080fd5b5051919050565b6000806040838503121561357657600080fd5b825161358181612bfb565b602084015190925067ffffffffffffffff81111561353457600080fd5b6bffffffffffffffffffffffff198360601b168152600082516135c8816014850160208701612b77565b919091016014019392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156135fe576135fe6135d6565b500390565b60008219821115613616576136166135d6565b500190565b6000835161362d818460208801612b77565b835190830190613641818360208801612b77565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261367c6080830184612ba3565b9695505050505050565b60006020828403121561369857600080fd5b815161257081612b44565b60006000198214156136b7576136b76135d6565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826136e3576136e36136be565b500490565b6000826136f7576136f76136be565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212202b70a562c44313db580e4cc0e0ba4f7b469ea097d1f242983ab351605fff399a64736f6c634300080b0033";

type XDVNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVNFT__factory extends ContractFactory {
  constructor(...args: XDVNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      overrides || {}
    ) as Promise<XDVNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      overrides || {}
    );
  }
  attach(address: string): XDVNFT {
    return super.attach(address) as XDVNFT;
  }
  connect(signer: Signer): XDVNFT__factory {
    return super.connect(signer) as XDVNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVNFTInterface {
    return new utils.Interface(_abi) as XDVNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): XDVNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVNFT;
  }
}
