/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XDVNFT, XDVNFTInterface } from "../XDVNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "IWXDVaddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "WXDV",
    outputs: [
      {
        internalType: "contract IWXDV",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "lockWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "releaseWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527fa0b28d7f9d639d313fdc6d1470d226d0631d4301f548fa410483bc9b487c1d08600e556000600f553480156200003a57600080fd5b506040516200346f3803806200346f8339810160408190526200005d91620002cb565b845185908590620000769060009060208501906200013b565b5080516200008c9060019060208401906200013b565b505050620000a9620000a3620000e560201b60201c565b620000e9565b600c80546001600160a01b039485166001600160a01b031991821617909155600d805493909416921691909117909155600f5550620003a19050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001499062000364565b90600052602060002090601f0160209004810192826200016d5760008555620001b8565b82601f106200018857805160ff1916838001178555620001b8565b82800160010185558215620001b8579182015b82811115620001b85782518255916020019190600101906200019b565b50620001c6929150620001ca565b5090565b5b80821115620001c65760008155600101620001cb565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200020957600080fd5b81516001600160401b0380821115620002265762000226620001e1565b604051601f8301601f19908116603f01168101908282118183101715620002515762000251620001e1565b816040528381526020925086838588010111156200026e57600080fd5b600091505b8382101562000292578582018301518183018401529082019062000273565b83821115620002a45760008385830101525b9695505050505050565b80516001600160a01b0381168114620002c657600080fd5b919050565b600080600080600060a08688031215620002e457600080fd5b85516001600160401b0380821115620002fc57600080fd5b6200030a89838a01620001f7565b965060208801519150808211156200032157600080fd5b506200033088828901620001f7565b9450506200034160408701620002ae565b92506200035160608701620002ae565b9150608086015190509295509295909350565b600181811c908216806200037957607f821691505b602082108114156200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b6130be80620003b16000396000f3fe6080604052600436106101cd5760003560e01c806370a08231116100f7578063a22cb46511610095578063e985e9c511610064578063e985e9c51461052b578063e9cbd82214610574578063f2fde38b14610594578063f33d6634146105b457600080fd5b8063a22cb465146104b8578063ac5627f3146104d8578063b88d4fde146104eb578063c87b56dd1461050b57600080fd5b80637ac3c02f116100d15780637ac3c02f146104475780638da5cb5b1461046557806395d89b411461048357806397ded6321461049857600080fd5b806370a08231146103f2578063715018a614610412578063756af45f1461042757600080fd5b806340c10f191161016f57806353f4a1141161013e57806353f4a1141461038a5780635600f04f1461039d5780636352211e146103b25780636c19e783146103d257600080fd5b806340c10f19146102fc57806342842e0e1461032a57806342966c681461034a57806351cff8d91461036a57600080fd5b8063095ea7b3116101ab578063095ea7b314610261578063150b7a021461028357806323b872dd146102bc578063252498a2146102dc57600080fd5b806301ffc9a7146101d257806306fdde0314610207578063081812fc14610229575b600080fd5b3480156101de57600080fd5b506101f26101ed3660046123ad565b6105d4565b60405190151581526020015b60405180910390f35b34801561021357600080fd5b5061021c610671565b6040516101fe9190612422565b34801561023557600080fd5b50610249610244366004612435565b610703565b6040516001600160a01b0390911681526020016101fe565b34801561026d57600080fd5b5061028161027c366004612463565b61079d565b005b34801561028f57600080fd5b506102a361029e36600461248f565b6108cf565b6040516001600160e01b031990911681526020016101fe565b3480156102c857600080fd5b506102816102d736600461252e565b6108e1565b3480156102e857600080fd5b506102816102f736600461268b565b610969565b34801561030857600080fd5b5061031c610317366004612463565b6109da565b6040519081526020016101fe565b34801561033657600080fd5b5061028161034536600461252e565b610ab1565b34801561035657600080fd5b50610281610365366004612435565b610acc565b34801561037657600080fd5b506102816103853660046126d4565b610b53565b61031c6103983660046129ce565b610c9c565b3480156103a957600080fd5b5061021c610d98565b3480156103be57600080fd5b506102496103cd366004612435565b610e26565b3480156103de57600080fd5b506102816103ed3660046126d4565b610eb1565b3480156103fe57600080fd5b5061031c61040d3660046126d4565b610f2d565b34801561041e57600080fd5b50610281610fc7565b34801561043357600080fd5b506102816104423660046126d4565b61102d565b34801561045357600080fd5b506009546001600160a01b0316610249565b34801561047157600080fd5b506007546001600160a01b0316610249565b34801561048f57600080fd5b5061021c611232565b3480156104a457600080fd5b5061031c6104b33660046129ce565b611241565b3480156104c457600080fd5b506102816104d3366004612a83565b611382565b61031c6104e63660046129ce565b611447565b3480156104f757600080fd5b50610281610506366004612abc565b6114eb565b34801561051757600080fd5b5061021c610526366004612435565b611579565b34801561053757600080fd5b506101f2610546366004612b28565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561058057600080fd5b50600c54610249906001600160a01b031681565b3480156105a057600080fd5b506102816105af3660046126d4565b611584565b3480156105c057600080fd5b50600d54610249906001600160a01b031681565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061063757506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061066b57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461068090612b56565b80601f01602080910402602001604051908101604052809291908181526020018280546106ac90612b56565b80156106f95780601f106106ce576101008083540402835291602001916106f9565b820191906000526020600020905b8154815290600101906020018083116106dc57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166107815760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006107a882610e26565b9050806001600160a01b0316836001600160a01b031614156108325760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610778565b336001600160a01b038216148061084e575061084e8133610546565b6108c05760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610778565b6108ca8383611663565b505050565b630a85bd0160e11b5b95945050505050565b6108ec335b826116d1565b61095e5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610778565b6108ca8383836117c8565b6007546001600160a01b031633146109c35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610778565b80516109d69060089060208401906122c8565b5050565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c401610778565b6108ca838383604051806020016040528060008152506114eb565b610ad5336108e6565b610b475760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f766564000000000000000000000000000000006064820152608401610778565b610b5081611995565b50565b6007546001600160a01b03163314610bad5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610778565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610bfc576040519150601f19603f3d011682016040523d82523d6000602084013e610c01565b606091505b509150915081610c535760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610778565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610c8e91815260200190565b60405180910390a250505050565b600d54600e546040517f2e8d656600000000000000000000000000000000000000000000000000000000815260009283926001600160a01b0390911691632e8d656691610cf8913391908c908c908c908c908c90600401612d31565b6020604051808303816000875af1158015610d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3b9190612da8565b90508060021415610d8b5760008060008089806020019051810190610d609190612e06565b9350935093509350610d73308386610ab1565b610d7d848461199e565b6001955050505050506108d8565b5060009695505050505050565b60088054610da590612b56565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd190612b56565b8015610e1e5780601f10610df357610100808354040283529160200191610e1e565b820191906000526020600020905b815481529060010190602001808311610e0157829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b03168061066b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610778565b6007546001600160a01b03163314610f0b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610778565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610fab5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610778565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b031633146110215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610778565b61102b6000611a47565b565b6007546001600160a01b031633146110875760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610778565b600c546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156110e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110d9190612da8565b600c546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af115801561117b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119f9190612e67565b6111eb5760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c65640000000000000000000000006044820152606401610778565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161122691815260200190565b60405180910390a25050565b60606001805461068090612b56565b6000611251600b80546001019055565b600061125c600b5490565b600d54600e546040517f3fda3d5a0000000000000000000000000000000000000000000000000000000081529293506001600160a01b0390911691633fda3d5a916112b791339186918d908d908d908d908d90600401612e84565b6020604051808303816000875af11580156112d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112fa9190612e67565b6113465760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642050726f6f66000000000000000000000000000000000000006044820152606401610778565b6000808780602001905181019061135d9190612f05565b9150915061136b8284611a99565b611375838261199e565b5090979650505050505050565b6001600160a01b0382163314156113db5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610778565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600d54600e546040517f7e8b80c30000000000000000000000000000000000000000000000000000000081526000926001600160a01b031691637e8b80c39161149e9133918b908b908b908b908b90600401612d31565b6020604051808303816000875af11580156114bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e19190612da8565b9695505050505050565b6114f533836116d1565b6115675760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610778565b61157384848484611ab3565b50505050565b606061066b82611b31565b6007546001600160a01b031633146115de5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610778565b6001600160a01b03811661165a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610778565b610b5081611a47565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061169882610e26565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661174a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610778565b600061175583610e26565b9050806001600160a01b0316846001600160a01b031614806117905750836001600160a01b031661178584610703565b6001600160a01b0316145b806117c057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166117db82610e26565b6001600160a01b0316146118575760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610778565b6001600160a01b0382166118d25760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610778565b6118dd600082611663565b6001600160a01b0383166000908152600360205260408120805460019290611906908490612f6c565b90915550506001600160a01b0382166000908152600360205260408120805460019290611934908490612f83565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b5081611cbc565b6000828152600260205260409020546001600160a01b0316611a285760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610778565b600082815260066020908152604090912082516108ca928401906122c8565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6109d6828260405180602001604052806000815250611cfc565b611abe8484846117c8565b611aca84848484611d7a565b6115735760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610778565b6000818152600260205260409020546060906001600160a01b0316611bbe5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610778565b60008281526006602052604081208054611bd790612b56565b80601f0160208091040260200160405190810160405280929190818152602001828054611c0390612b56565b8015611c505780601f10611c2557610100808354040283529160200191611c50565b820191906000526020600020905b815481529060010190602001808311611c3357829003601f168201915b505050505090506000611c6e60408051602081019091526000815290565b9050805160001415611c81575092915050565b815115611cb3578082604051602001611c9b929190612f9b565b60405160208183030381529060405292505050919050565b6117c084611ec3565b611cc581611fb9565b60008181526006602052604090208054611cde90612b56565b159050610b50576000818152600660205260408120610b509161234c565b611d068383612054565b611d136000848484611d7a565b6108ca5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610778565b60006001600160a01b0384163b15611eb857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611dbe903390899088908890600401612fca565b6020604051808303816000875af1925050508015611df9575060408051601f3d908101601f19168201909252611df691810190612ffc565b60015b611e9e573d808015611e27576040519150601f19603f3d011682016040523d82523d6000602084013e611e2c565b606091505b508051611e965760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610778565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506117c0565b506001949350505050565b6000818152600260205260409020546060906001600160a01b0316611f505760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610778565b6000611f6760408051602081019091526000815290565b90506000815111611f875760405180602001604052806000815250611fb2565b80611f9184612196565b604051602001611fa2929190612f9b565b6040516020818303038152906040525b9392505050565b6000611fc482610e26565b9050611fd1600083611663565b6001600160a01b0381166000908152600360205260408120805460019290611ffa908490612f6c565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0382166120aa5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610778565b6000818152600260205260409020546001600160a01b03161561210f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610778565b6001600160a01b0382166000908152600360205260408120805460019290612138908490612f83565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060816121d657505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561220057806121ea81613019565b91506121f99050600a8361304a565b91506121da565b60008167ffffffffffffffff81111561221b5761221b61256f565b6040519080825280601f01601f191660200182016040528015612245576020820181803683370190505b5090505b84156117c05761225a600183612f6c565b9150612267600a8661305e565b612272906030612f83565b60f81b81838151811061228757612287613072565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506122c1600a8661304a565b9450612249565b8280546122d490612b56565b90600052602060002090601f0160209004810192826122f6576000855561233c565b82601f1061230f57805160ff191683800117855561233c565b8280016001018555821561233c579182015b8281111561233c578251825591602001919060010190612321565b50612348929150612382565b5090565b50805461235890612b56565b6000825580601f10612368575050565b601f016020900490600052602060002090810190610b5091905b5b808211156123485760008155600101612383565b6001600160e01b031981168114610b5057600080fd5b6000602082840312156123bf57600080fd5b8135611fb281612397565b60005b838110156123e55781810151838201526020016123cd565b838111156115735750506000910152565b6000815180845261240e8160208601602086016123ca565b601f01601f19169290920160200192915050565b602081526000611fb260208301846123f6565b60006020828403121561244757600080fd5b5035919050565b6001600160a01b0381168114610b5057600080fd5b6000806040838503121561247657600080fd5b82356124818161244e565b946020939093013593505050565b6000806000806000608086880312156124a757600080fd5b85356124b28161244e565b945060208601356124c28161244e565b935060408601359250606086013567ffffffffffffffff808211156124e657600080fd5b818801915088601f8301126124fa57600080fd5b81358181111561250957600080fd5b89602082850101111561251b57600080fd5b9699959850939650602001949392505050565b60008060006060848603121561254357600080fd5b833561254e8161244e565b9250602084013561255e8161244e565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156125a8576125a861256f565b60405290565b6040516080810167ffffffffffffffff811182821017156125a8576125a861256f565b60405160a0810167ffffffffffffffff811182821017156125a8576125a861256f565b604051601f8201601f1916810167ffffffffffffffff8111828210171561261d5761261d61256f565b604052919050565b600067ffffffffffffffff82111561263f5761263f61256f565b50601f01601f191660200190565b600061266061265b84612625565b6125f4565b905082815283838301111561267457600080fd5b828260208301376000602084830101529392505050565b60006020828403121561269d57600080fd5b813567ffffffffffffffff8111156126b457600080fd5b8201601f810184136126c557600080fd5b6117c08482356020840161264d565b6000602082840312156126e657600080fd5b8135611fb28161244e565b600082601f83011261270257600080fd5b611fb28383356020850161264d565b8015158114610b5057600080fd5b803561272a81612711565b919050565b80356006811061272a57600080fd5b600060c0828403121561275057600080fd5b612758612585565b9050813561276581612711565b81526127736020830161272f565b60208201526127846040830161272f565b60408201526127956060830161272f565b60608201526080820135600981106127ac57600080fd5b608082015260a082013567ffffffffffffffff8111156127cb57600080fd5b6127d7848285016126f1565b60a08301525092915050565b600082601f8301126127f457600080fd5b8135602067ffffffffffffffff808311156128115761281161256f565b8260051b6128208382016125f4565b938452858101830193838101908886111561283a57600080fd5b84880192505b858310156128f8578235848111156128585760008081fd5b88016080818b03601f19018113156128705760008081fd5b6128786125ae565b8783013561288581612711565b8152604061289484820161272f565b89830152606080850135898111156128ac5760008081fd5b6128ba8f8c838901016126f1565b84840152509284013592888411156128d457600091508182fd5b6128e28e8b868801016126f1565b9083015250845250509184019190840190612840565b98975050505050505050565b600060a0828403121561291657600080fd5b61291e6125d1565b90506129298261271f565b8152602082013567ffffffffffffffff8082111561294657600080fd5b612952858386016126f1565b6020840152604084013591508082111561296b57600080fd5b612977858386016126f1565b6040840152606084013591508082111561299057600080fd5b61299c8583860161273e565b606084015260808401359150808211156129b557600080fd5b506129c2848285016127e3565b60808301525092915050565b600080600080600060a086880312156129e657600080fd5b853567ffffffffffffffff808211156129fe57600080fd5b612a0a89838a016126f1565b96506020880135915080821115612a2057600080fd5b612a2c89838a016126f1565b95506040880135915080821115612a4257600080fd5b612a4e89838a01612904565b94506060880135915080821115612a6457600080fd5b50612a7188828901612904565b95989497509295608001359392505050565b60008060408385031215612a9657600080fd5b8235612aa18161244e565b91506020830135612ab181612711565b809150509250929050565b60008060008060808587031215612ad257600080fd5b8435612add8161244e565b93506020850135612aed8161244e565b925060408501359150606085013567ffffffffffffffff811115612b1057600080fd5b612b1c878288016126f1565b91505092959194509250565b60008060408385031215612b3b57600080fd5b8235612b468161244e565b91506020830135612ab18161244e565b600181811c90821680612b6a57607f821691505b60208210811415612b8b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60068110612bb757612bb7612b91565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015612c4a5782840389528151608081511515865286820151612c0088880182612ba7565b506040808301518282890152612c18838901826123f6565b9250505060608083015192508682038188015250612c3681836123f6565b9a87019a9550505090840190600101612bd9565b5091979650505050505050565b8051151582526000602082015160a06020850152612c7860a08501826123f6565b905060408301518482036040860152612c9182826123f6565b915050606083015184820360608601528051151582526020810151612cb96020840182612ba7565b506040810151612ccc6040840182612ba7565b506060810151612cdf6060840182612ba7565b50608081015160098110612cf557612cf5612b91565b8060808401525060a0810151905060c060a0830152612d1760c08301826123f6565b915050608083015184820360808601526108d88282612bbb565b6001600160a01b038816815286602082015260e060408201526000612d5960e08301886123f6565b8281036060840152612d6b81886123f6565b90508281036080840152612d7f8187612c57565b905082810360a0840152612d938186612c57565b9150508260c083015298975050505050505050565b600060208284031215612dba57600080fd5b5051919050565b600082601f830112612dd257600080fd5b8151612de061265b82612625565b818152846020838601011115612df557600080fd5b6117c08260208301602087016123ca565b60008060008060808587031215612e1c57600080fd5b84519350602085015167ffffffffffffffff811115612e3a57600080fd5b612e4687828801612dc1565b9350506040850151612e578161244e565b6060959095015193969295505050565b600060208284031215612e7957600080fd5b8151611fb281612711565b60006101006001600160a01b038b168352896020840152886040840152806060840152612eb3818401896123f6565b90508281036080840152612ec781886123f6565b905082810360a0840152612edb8187612c57565b905082810360c0840152612eef8186612c57565b9150508260e08301529998505050505050505050565b60008060408385031215612f1857600080fd5b8251612f238161244e565b602084015190925067ffffffffffffffff811115612f4057600080fd5b612f4c85828601612dc1565b9150509250929050565b634e487b7160e01b600052601160045260246000fd5b600082821015612f7e57612f7e612f56565b500390565b60008219821115612f9657612f96612f56565b500190565b60008351612fad8184602088016123ca565b835190830190612fc18183602088016123ca565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526114e160808301846123f6565b60006020828403121561300e57600080fd5b8151611fb281612397565b600060001982141561302d5761302d612f56565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261305957613059613034565b500490565b60008261306d5761306d613034565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220bec3bd5cbe4cce4303bace2522a79c89fc454ebf3882ac67d49e1267aca4a5cb64736f6c634300080b0033";

type XDVNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVNFT__factory extends ContractFactory {
  constructor(...args: XDVNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    IWXDVaddress: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      IWXDVaddress,
      chain,
      overrides || {}
    ) as Promise<XDVNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    IWXDVaddress: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      IWXDVaddress,
      chain,
      overrides || {}
    );
  }
  attach(address: string): XDVNFT {
    return super.attach(address) as XDVNFT;
  }
  connect(signer: Signer): XDVNFT__factory {
    return super.connect(signer) as XDVNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVNFTInterface {
    return new utils.Interface(_abi) as XDVNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): XDVNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVNFT;
  }
}
