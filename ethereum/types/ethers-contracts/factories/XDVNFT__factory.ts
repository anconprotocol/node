/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { XDVNFT, XDVNFTInterface } from "../XDVNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "IWXDVaddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "WXDV",
    outputs: [
      {
        internalType: "contract IWXDV",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "lockWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "releaseWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527fa0b28d7f9d639d313fdc6d1470d226d0631d4301f548fa410483bc9b487c1d08600e556000600f553480156200003a57600080fd5b5060405162003274380380620032748339810160408190526200005d91620002cb565b845185908590620000769060009060208501906200013b565b5080516200008c9060019060208401906200013b565b505050620000a9620000a3620000e560201b60201c565b620000e9565b600c80546001600160a01b039485166001600160a01b031991821617909155600d805493909416921691909117909155600f5550620003a19050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001499062000364565b90600052602060002090601f0160209004810192826200016d5760008555620001b8565b82601f106200018857805160ff1916838001178555620001b8565b82800160010185558215620001b8579182015b82811115620001b85782518255916020019190600101906200019b565b50620001c6929150620001ca565b5090565b5b80821115620001c65760008155600101620001cb565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200020957600080fd5b81516001600160401b0380821115620002265762000226620001e1565b604051601f8301601f19908116603f01168101908282118183101715620002515762000251620001e1565b816040528381526020925086838588010111156200026e57600080fd5b600091505b8382101562000292578582018301518183018401529082019062000273565b83821115620002a45760008385830101525b9695505050505050565b80516001600160a01b0381168114620002c657600080fd5b919050565b600080600080600060a08688031215620002e457600080fd5b85516001600160401b0380821115620002fc57600080fd5b6200030a89838a01620001f7565b965060208801519150808211156200032157600080fd5b506200033088828901620001f7565b9450506200034160408701620002ae565b92506200035160608701620002ae565b9150608086015190509295509295909350565b600181811c908216806200037957607f821691505b602082108114156200039b57634e487b7160e01b600052602260045260246000fd5b50919050565b612ec380620003b16000396000f3fe6080604052600436106101c25760003560e01c806370a08231116100f7578063a22cb46511610095578063e985e9c511610064578063e985e9c5146104e7578063e9cbd82214610530578063f2fde38b14610550578063f33d66341461057057600080fd5b8063a22cb46514610474578063ac5627f314610494578063b88d4fde146104a7578063c87b56dd146104c757600080fd5b80637ac3c02f116100d15780637ac3c02f146104035780638da5cb5b1461042157806395d89b411461043f57806397ded6321461045457600080fd5b806370a08231146103ae578063715018a6146103ce578063756af45f146103e357600080fd5b806342842e0e1161016457806353f4a1141161013e57806353f4a114146103465780635600f04f146103595780636352211e1461036e5780636c19e7831461038e57600080fd5b806342842e0e146102e657806342966c681461030657806351cff8d91461032657600080fd5b8063095ea7b3116101a0578063095ea7b31461025657806323b872dd14610278578063252498a21461029857806340c10f19146102b857600080fd5b806301ffc9a7146101c757806306fdde03146101fc578063081812fc1461021e575b600080fd5b3480156101d357600080fd5b506101e76101e23660046122b2565b610590565b60405190151581526020015b60405180910390f35b34801561020857600080fd5b5061021161062d565b6040516101f39190612327565b34801561022a57600080fd5b5061023e61023936600461233a565b6106bf565b6040516001600160a01b0390911681526020016101f3565b34801561026257600080fd5b50610276610271366004612368565b610759565b005b34801561028457600080fd5b50610276610293366004612394565b61088b565b3480156102a457600080fd5b506102766102b33660046124f1565b610913565b3480156102c457600080fd5b506102d86102d3366004612368565b610984565b6040519081526020016101f3565b3480156102f257600080fd5b50610276610301366004612394565b610a5b565b34801561031257600080fd5b5061027661032136600461233a565b610a76565b34801561033257600080fd5b5061027661034136600461253a565b610afd565b6102d8610354366004612834565b610c46565b34801561036557600080fd5b50610211610cea565b34801561037a57600080fd5b5061023e61038936600461233a565b610d78565b34801561039a57600080fd5b506102766103a936600461253a565b610e03565b3480156103ba57600080fd5b506102d86103c936600461253a565b610e7f565b3480156103da57600080fd5b50610276610f19565b3480156103ef57600080fd5b506102766103fe36600461253a565b610f7f565b34801561040f57600080fd5b506009546001600160a01b031661023e565b34801561042d57600080fd5b506007546001600160a01b031661023e565b34801561044b57600080fd5b50610211611184565b34801561046057600080fd5b506102d861046f366004612834565b611193565b34801561048057600080fd5b5061027661048f3660046128e9565b6112d4565b6102d86104a2366004612834565b611399565b3480156104b357600080fd5b506102766104c2366004612922565b6113f0565b3480156104d357600080fd5b506102116104e236600461233a565b61147e565b3480156104f357600080fd5b506101e761050236600461298e565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561053c57600080fd5b50600c5461023e906001600160a01b031681565b34801561055c57600080fd5b5061027661056b36600461253a565b611489565b34801561057c57600080fd5b50600d5461023e906001600160a01b031681565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806105f357506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061062757507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461063c906129bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610668906129bc565b80156106b55780601f1061068a576101008083540402835291602001916106b5565b820191906000526020600020905b81548152906001019060200180831161069857829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661073d5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061076482610d78565b9050806001600160a01b0316836001600160a01b031614156107ee5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610734565b336001600160a01b038216148061080a575061080a8133610502565b61087c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610734565b6108868383611568565b505050565b610896335b826115d6565b6109085760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610734565b6108868383836116cd565b6007546001600160a01b0316331461096d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610734565b80516109809060089060208401906121cd565b5050565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c401610734565b610886838383604051806020016040528060008152506113f0565b610a7f33610890565b610af15760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f766564000000000000000000000000000000006064820152608401610734565b610afa8161189a565b50565b6007546001600160a01b03163314610b575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610734565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610ba6576040519150601f19603f3d011682016040523d82523d6000602084013e610bab565b606091505b509150915081610bfd5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610734565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610c3891815260200190565b60405180910390a250505050565b600d54600e546040517f2e8d65660000000000000000000000000000000000000000000000000000000081526000926001600160a01b031691632e8d656691610c9d9133918b908b908b908b908b90600401612ba0565b6020604051808303816000875af1158015610cbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce09190612c17565b9695505050505050565b60088054610cf7906129bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610d23906129bc565b8015610d705780601f10610d4557610100808354040283529160200191610d70565b820191906000526020600020905b815481529060010190602001808311610d5357829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806106275760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610734565b6007546001600160a01b03163314610e5d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610734565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610efd5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610734565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b03163314610f735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610734565b610f7d60006118a3565b565b6007546001600160a01b03163314610fd95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610734565b600c546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561103b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105f9190612c17565b600c546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156110cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f19190612c30565b61113d5760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c65640000000000000000000000006044820152606401610734565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161117891815260200190565b60405180910390a25050565b60606001805461063c906129bc565b60006111a3600b80546001019055565b60006111ae600b5490565b600d54600e546040517f9ed1156f0000000000000000000000000000000000000000000000000000000081529293506001600160a01b0390911691639ed1156f9161120991339186918d908d908d908d908d90600401612c4d565b6020604051808303816000875af1158015611228573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124c9190612c30565b6112985760405162461bcd60e51b815260206004820152600d60248201527f496e76616c69642050726f6f66000000000000000000000000000000000000006044820152606401610734565b600080878060200190518101906112af9190612cce565b915091506112bd82846118f5565b6112c7838261190f565b5090979650505050505050565b6001600160a01b03821633141561132d5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610734565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600d54600e546040517f7e8b80c30000000000000000000000000000000000000000000000000000000081526000926001600160a01b031691637e8b80c391610c9d9133918b908b908b908b908b90600401612ba0565b6113fa33836115d6565b61146c5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610734565b611478848484846119b8565b50505050565b606061062782611a36565b6007546001600160a01b031633146114e35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610734565b6001600160a01b03811661155f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610734565b610afa816118a3565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061159d82610d78565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661164f5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610734565b600061165a83610d78565b9050806001600160a01b0316846001600160a01b031614806116955750836001600160a01b031661168a846106bf565b6001600160a01b0316145b806116c557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166116e082610d78565b6001600160a01b03161461175c5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610734565b6001600160a01b0382166117d75760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610734565b6117e2600082611568565b6001600160a01b038316600090815260036020526040812080546001929061180b908490612d71565b90915550506001600160a01b0382166000908152600360205260408120805460019290611839908490612d88565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610afa81611bc1565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610980828260405180602001604052806000815250611c01565b6000828152600260205260409020546001600160a01b03166119995760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610734565b60008281526006602090815260409091208251610886928401906121cd565b6119c38484846116cd565b6119cf84848484611c7f565b6114785760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610734565b6000818152600260205260409020546060906001600160a01b0316611ac35760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610734565b60008281526006602052604081208054611adc906129bc565b80601f0160208091040260200160405190810160405280929190818152602001828054611b08906129bc565b8015611b555780601f10611b2a57610100808354040283529160200191611b55565b820191906000526020600020905b815481529060010190602001808311611b3857829003601f168201915b505050505090506000611b7360408051602081019091526000815290565b9050805160001415611b86575092915050565b815115611bb8578082604051602001611ba0929190612da0565b60405160208183030381529060405292505050919050565b6116c584611dc8565b611bca81611ebe565b60008181526006602052604090208054611be3906129bc565b159050610afa576000818152600660205260408120610afa91612251565b611c0b8383611f59565b611c186000848484611c7f565b6108865760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610734565b60006001600160a01b0384163b15611dbd57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611cc3903390899088908890600401612dcf565b6020604051808303816000875af1925050508015611cfe575060408051601f3d908101601f19168201909252611cfb91810190612e01565b60015b611da3573d808015611d2c576040519150601f19603f3d011682016040523d82523d6000602084013e611d31565b606091505b508051611d9b5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610734565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506116c5565b506001949350505050565b6000818152600260205260409020546060906001600160a01b0316611e555760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610734565b6000611e6c60408051602081019091526000815290565b90506000815111611e8c5760405180602001604052806000815250611eb7565b80611e968461209b565b604051602001611ea7929190612da0565b6040516020818303038152906040525b9392505050565b6000611ec982610d78565b9050611ed6600083611568565b6001600160a01b0381166000908152600360205260408120805460019290611eff908490612d71565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b038216611faf5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610734565b6000818152600260205260409020546001600160a01b0316156120145760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610734565b6001600160a01b038216600090815260036020526040812080546001929061203d908490612d88565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060816120db57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561210557806120ef81612e1e565b91506120fe9050600a83612e4f565b91506120df565b60008167ffffffffffffffff811115612120576121206123d5565b6040519080825280601f01601f19166020018201604052801561214a576020820181803683370190505b5090505b84156116c55761215f600183612d71565b915061216c600a86612e63565b612177906030612d88565b60f81b81838151811061218c5761218c612e77565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506121c6600a86612e4f565b945061214e565b8280546121d9906129bc565b90600052602060002090601f0160209004810192826121fb5760008555612241565b82601f1061221457805160ff1916838001178555612241565b82800160010185558215612241579182015b82811115612241578251825591602001919060010190612226565b5061224d929150612287565b5090565b50805461225d906129bc565b6000825580601f1061226d575050565b601f016020900490600052602060002090810190610afa91905b5b8082111561224d5760008155600101612288565b6001600160e01b031981168114610afa57600080fd5b6000602082840312156122c457600080fd5b8135611eb78161229c565b60005b838110156122ea5781810151838201526020016122d2565b838111156114785750506000910152565b600081518084526123138160208601602086016122cf565b601f01601f19169290920160200192915050565b602081526000611eb760208301846122fb565b60006020828403121561234c57600080fd5b5035919050565b6001600160a01b0381168114610afa57600080fd5b6000806040838503121561237b57600080fd5b823561238681612353565b946020939093013593505050565b6000806000606084860312156123a957600080fd5b83356123b481612353565b925060208401356123c481612353565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561240e5761240e6123d5565b60405290565b6040516080810167ffffffffffffffff8111828210171561240e5761240e6123d5565b60405160a0810167ffffffffffffffff8111828210171561240e5761240e6123d5565b604051601f8201601f1916810167ffffffffffffffff81118282101715612483576124836123d5565b604052919050565b600067ffffffffffffffff8211156124a5576124a56123d5565b50601f01601f191660200190565b60006124c66124c18461248b565b61245a565b90508281528383830111156124da57600080fd5b828260208301376000602084830101529392505050565b60006020828403121561250357600080fd5b813567ffffffffffffffff81111561251a57600080fd5b8201601f8101841361252b57600080fd5b6116c5848235602084016124b3565b60006020828403121561254c57600080fd5b8135611eb781612353565b600082601f83011261256857600080fd5b611eb7838335602085016124b3565b8015158114610afa57600080fd5b803561259081612577565b919050565b80356006811061259057600080fd5b600060c082840312156125b657600080fd5b6125be6123eb565b905081356125cb81612577565b81526125d960208301612595565b60208201526125ea60408301612595565b60408201526125fb60608301612595565b606082015260808201356009811061261257600080fd5b608082015260a082013567ffffffffffffffff81111561263157600080fd5b61263d84828501612557565b60a08301525092915050565b600082601f83011261265a57600080fd5b8135602067ffffffffffffffff80831115612677576126776123d5565b8260051b61268683820161245a565b93845285810183019383810190888611156126a057600080fd5b84880192505b8583101561275e578235848111156126be5760008081fd5b88016080818b03601f19018113156126d65760008081fd5b6126de612414565b878301356126eb81612577565b815260406126fa848201612595565b89830152606080850135898111156127125760008081fd5b6127208f8c83890101612557565b848401525092840135928884111561273a57600091508182fd5b6127488e8b86880101612557565b90830152508452505091840191908401906126a6565b98975050505050505050565b600060a0828403121561277c57600080fd5b612784612437565b905061278f82612585565b8152602082013567ffffffffffffffff808211156127ac57600080fd5b6127b885838601612557565b602084015260408401359150808211156127d157600080fd5b6127dd85838601612557565b604084015260608401359150808211156127f657600080fd5b612802858386016125a4565b6060840152608084013591508082111561281b57600080fd5b5061282884828501612649565b60808301525092915050565b600080600080600060a0868803121561284c57600080fd5b853567ffffffffffffffff8082111561286457600080fd5b61287089838a01612557565b9650602088013591508082111561288657600080fd5b61289289838a01612557565b955060408801359150808211156128a857600080fd5b6128b489838a0161276a565b945060608801359150808211156128ca57600080fd5b506128d78882890161276a565b95989497509295608001359392505050565b600080604083850312156128fc57600080fd5b823561290781612353565b9150602083013561291781612577565b809150509250929050565b6000806000806080858703121561293857600080fd5b843561294381612353565b9350602085013561295381612353565b925060408501359150606085013567ffffffffffffffff81111561297657600080fd5b61298287828801612557565b91505092959194509250565b600080604083850312156129a157600080fd5b82356129ac81612353565b9150602083013561291781612353565b600181811c908216806129d057607f821691505b602082108114156129f157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60068110612a1d57612a1d6129f7565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015612ab05782840389528151608081511515865286820151612a6688880182612a0d565b506040808301518282890152612a7e838901826122fb565b9250505060608083015192508682038188015250612a9c81836122fb565b9a87019a9550505090840190600101612a3f565b5091979650505050505050565b8051151582526000602082015160a06020850152612ade60a08501826122fb565b905060408301518482036040860152612af782826122fb565b915050606083015184820360608601528051151582526020810151612b1f6020840182612a0d565b506040810151612b326040840182612a0d565b506060810151612b456060840182612a0d565b50608081015160098110612b5b57612b5b6129f7565b8060808401525060a0810151905060c060a0830152612b7d60c08301826122fb565b91505060808301518482036080860152612b978282612a21565b95945050505050565b6001600160a01b038816815286602082015260e060408201526000612bc860e08301886122fb565b8281036060840152612bda81886122fb565b90508281036080840152612bee8187612abd565b905082810360a0840152612c028186612abd565b9150508260c083015298975050505050505050565b600060208284031215612c2957600080fd5b5051919050565b600060208284031215612c4257600080fd5b8151611eb781612577565b60006101006001600160a01b038b168352896020840152886040840152806060840152612c7c818401896122fb565b90508281036080840152612c9081886122fb565b905082810360a0840152612ca48187612abd565b905082810360c0840152612cb88186612abd565b9150508260e08301529998505050505050505050565b60008060408385031215612ce157600080fd5b8251612cec81612353565b602084015190925067ffffffffffffffff811115612d0957600080fd5b8301601f81018513612d1a57600080fd5b8051612d286124c18261248b565b818152866020838501011115612d3d57600080fd5b612d4e8260208301602086016122cf565b8093505050509250929050565b634e487b7160e01b600052601160045260246000fd5b600082821015612d8357612d83612d5b565b500390565b60008219821115612d9b57612d9b612d5b565b500190565b60008351612db28184602088016122cf565b835190830190612dc68183602088016122cf565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152610ce060808301846122fb565b600060208284031215612e1357600080fd5b8151611eb78161229c565b6000600019821415612e3257612e32612d5b565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082612e5e57612e5e612e39565b500490565b600082612e7257612e72612e39565b500690565b634e487b7160e01b600052603260045260246000fdfea264697066735822122031701c8a2a448fb80b8ed543ece56e424854197c8487fc221051402714d55dc664736f6c634300080b0033";

type XDVNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVNFT__factory extends ContractFactory {
  constructor(...args: XDVNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    IWXDVaddress: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      IWXDVaddress,
      chain,
      overrides || {}
    ) as Promise<XDVNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    IWXDVaddress: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      IWXDVaddress,
      chain,
      overrides || {}
    );
  }
  attach(address: string): XDVNFT {
    return super.attach(address) as XDVNFT;
  }
  connect(signer: Signer): XDVNFT__factory {
    return super.connect(signer) as XDVNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVNFTInterface {
    return new utils.Interface(_abi) as XDVNFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): XDVNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVNFT;
  }
}
