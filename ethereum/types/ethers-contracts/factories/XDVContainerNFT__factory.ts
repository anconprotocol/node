/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  XDVContainerNFT,
  XDVContainerNFTInterface,
} from "../XDVContainerNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "ancon",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToContract",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paidToPaymentAddress",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "packetProof",
        type: "tuple",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006012553480156200001657600080fd5b50604051620034e6380380620034e68339810160408190526200003991620002a7565b8451859085906200005290600090602085019062000117565b5080516200006890600190602084019062000117565b505050620000856200007f620000c160201b60201c565b620000c5565b601080546001600160a01b039485166001600160a01b0319918216179091556011805493909416921691909117909155601255506200037d9050565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001259062000340565b90600052602060002090601f01602090048101928262000149576000855562000194565b82601f106200016457805160ff191683800117855562000194565b8280016001018555821562000194579182015b828111156200019457825182559160200191906001019062000177565b50620001a2929150620001a6565b5090565b5b80821115620001a25760008155600101620001a7565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001e557600080fd5b81516001600160401b0380821115620002025762000202620001bd565b604051601f8301601f19908116603f011681019082821181831017156200022d576200022d620001bd565b816040528381526020925086838588010111156200024a57600080fd5b600091505b838210156200026e57858201830151818301840152908201906200024f565b83821115620002805760008385830101525b9695505050505050565b80516001600160a01b0381168114620002a257600080fd5b919050565b600080600080600060a08688031215620002c057600080fd5b85516001600160401b0380821115620002d857600080fd5b620002e689838a01620001d3565b96506020880151915080821115620002fd57600080fd5b506200030c88828901620001d3565b9450506200031d604087016200028a565b92506200032d606087016200028a565b9150608086015190509295509295909350565b600181811c908216806200035557607f821691505b602082108114156200037757634e487b7160e01b600052602260045260246000fd5b50919050565b613159806200038d6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636352211e1161010f578063a1448194116100a2578063dd14082a11610071578063dd14082a14610439578063e985e9c51461044c578063e9cbd82214610488578063f2fde38b1461049b57600080fd5b8063a1448194146103ed578063a22cb46514610400578063b88d4fde14610413578063c87b56dd1461042657600080fd5b8063756af45f116100de578063756af45f146103b05780637ac3c02f146103c35780638da5cb5b146103d457806395d89b41146103e557600080fd5b80636352211e1461036f5780636c19e7831461038257806370a0823114610395578063715018a6146103a857600080fd5b80632f745c591161018757806342966c681161015657806342966c681461032e5780634f6ccce71461034157806351cff8d9146103545780635600f04f1461036757600080fd5b80632f745c59146102e25780633cd559a4146102f557806340c10f191461030857806342842e0e1461031b57600080fd5b8063150b7a02116101c3578063150b7a021461027257806318160ddd146102aa57806323b872dd146102bc578063252498a2146102cf57600080fd5b806301ffc9a7146101f557806306fdde031461021d578063081812fc14610232578063095ea7b31461025d575b600080fd5b610208610203366004612541565b6104ae565b60405190151581526020015b60405180910390f35b6102256104bf565b60405161021491906125b6565b6102456102403660046125c9565b610551565b6040516001600160a01b039091168152602001610214565b61027061026b3660046125f7565b6105eb565b005b610291610280366004612623565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610214565b6008545b604051908152602001610214565b6102706102ca3660046126c2565b61071d565b6102706102dd36600461281f565b6107a5565b6102ae6102f03660046125f7565b610816565b601154610245906001600160a01b031681565b6102ae6103163660046125f7565b6108be565b6102706103293660046126c2565b610995565b61027061033c3660046125c9565b6109b0565b6102ae61034f3660046125c9565b610a37565b610270610362366004612868565b610adb565b610225610c24565b61024561037d3660046125c9565b610cb2565b610270610390366004612868565b610d3d565b6102ae6103a3366004612868565b610db9565b610270610e53565b6102706103be366004612868565b610eb9565b600d546001600160a01b0316610245565b600b546001600160a01b0316610245565b6102256110be565b6102706103fb3660046125f7565b6110cd565b61027061040e3660046128a3565b611131565b6102706104213660046128fc565b6111f6565b6102256104343660046125c9565b611284565b6102ae610447366004612c07565b61128f565b61020861045a366004612c8d565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b601054610245906001600160a01b031681565b6102706104a9366004612868565b6113d0565b60006104b9826114af565b92915050565b6060600080546104ce90612cbb565b80601f01602080910402602001604051908101604052809291908181526020018280546104fa90612cbb565b80156105475780601f1061051c57610100808354040283529160200191610547565b820191906000526020600020905b81548152906001019060200180831161052a57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166105cf5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105f682610cb2565b9050806001600160a01b0316836001600160a01b031614156106805760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016105c6565b336001600160a01b038216148061069c575061069c813361045a565b61070e5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016105c6565b61071883836114ed565b505050565b610728335b8261155b565b61079a5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016105c6565b61071883838361164e565b600b546001600160a01b031633146107ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105c6565b805161081290600c90602084019061245c565b5050565b600061082183610db9565b82106108955760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e647300000000000000000000000000000000000000000060648201526084016105c6565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c4016105c6565b610718838383604051806020016040528060008152506111f6565b6109b933610722565b610a2b5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f7665640000000000000000000000000000000060648201526084016105c6565b610a3481611826565b50565b6000610a4260085490565b8210610ab65760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e6473000000000000000000000000000000000000000060648201526084016105c6565b60088281548110610ac957610ac9612cf6565b90600052602060002001549050919050565b600b546001600160a01b03163314610b355760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105c6565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610b84576040519150601f19603f3d011682016040523d82523d6000602084013e610b89565b606091505b509150915081610bdb5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016105c6565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610c1691815260200190565b60405180910390a250505050565b600c8054610c3190612cbb565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5d90612cbb565b8015610caa5780601f10610c7f57610100808354040283529160200191610caa565b820191906000526020600020905b815481529060010190602001808311610c8d57829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806104b95760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016105c6565b600b546001600160a01b03163314610d975760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105c6565b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b038216610e375760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016105c6565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b03163314610ead5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105c6565b610eb7600061182f565b565b600b546001600160a01b03163314610f135760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105c6565b6010546040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610f75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f999190612d0c565b6010546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015611007573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102b9190612d25565b6110775760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c656400000000000000000000000060448201526064016105c6565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516110b291815260200190565b60405180910390a25050565b6060600180546104ce90612cbb565b600b546001600160a01b031633146111275760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105c6565b6108128282611881565b6001600160a01b03821633141561118a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016105c6565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b611200338361155b565b6112725760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016105c6565b61127e8484848461189b565b50505050565b60606104b982611919565b600061129f600f80546001019055565b60006112aa600f5490565b60115460208501516040517f97554e8f0000000000000000000000000000000000000000000000000000000081529293506001600160a01b03909116916397554e8f91611304918a9133918a91908c908b90600401612eeb565b6020604051808303816000875af1158015611323573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113479190612d25565b6113935760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f6600000000000000000000000060448201526064016105c6565b600080868060200190518101906113aa9190612f5a565b915091506113b88284611881565b6113c28382611aa4565b50909150505b949350505050565b600b546001600160a01b0316331461142a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105c6565b6001600160a01b0381166114a65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105c6565b610a348161182f565b60006001600160e01b031982167f780e9d630000000000000000000000000000000000000000000000000000000014806104b957506104b982611b4d565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061152282610cb2565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166115d45760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016105c6565b60006115df83610cb2565b9050806001600160a01b0316846001600160a01b0316148061161a5750836001600160a01b031661160f84610551565b6001600160a01b0316145b806113c857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff166113c8565b826001600160a01b031661166182610cb2565b6001600160a01b0316146116dd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016105c6565b6001600160a01b0382166117585760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016105c6565b611763838383611be8565b61176e6000826114ed565b6001600160a01b0383166000908152600360205260408120805460019290611797908490612ffd565b90915550506001600160a01b03821660009081526003602052604081208054600192906117c5908490613014565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610a3481611bf3565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610812828260405180602001604052806000815250611c33565b6118a684848461164e565b6118b284848484611cb1565b61127e5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105c6565b6000818152600260205260409020546060906001600160a01b03166119a65760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000060648201526084016105c6565b6000828152600a6020526040812080546119bf90612cbb565b80601f01602080910402602001604051908101604052809291908181526020018280546119eb90612cbb565b8015611a385780601f10611a0d57610100808354040283529160200191611a38565b820191906000526020600020905b815481529060010190602001808311611a1b57829003601f168201915b505050505090506000611a5660408051602081019091526000815290565b9050805160001415611a69575092915050565b815115611a9b578082604051602001611a8392919061302c565b60405160208183030381529060405292505050919050565b6113c884611df7565b6000828152600260205260409020546001600160a01b0316611b2e5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016105c6565b6000828152600a6020908152604090912082516107189284019061245c565b60006001600160e01b031982167f80ac58cd000000000000000000000000000000000000000000000000000000001480611bb057506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806104b957507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316146104b9565b610718838383611eed565b611bfc81611fa5565b6000818152600a602052604090208054611c1590612cbb565b159050610a34576000818152600a60205260408120610a34916124e0565b611c3d838361204c565b611c4a6000848484611cb1565b6107185760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105c6565b60006001600160a01b0384163b15611def57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611cf590339089908890889060040161305b565b6020604051808303816000875af1925050508015611d30575060408051601f3d908101601f19168201909252611d2d91810190613097565b60015b611dd5573d808015611d5e576040519150601f19603f3d011682016040523d82523d6000602084013e611d63565b606091505b508051611dcd5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016105c6565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506113c8565b5060016113c8565b6000818152600260205260409020546060906001600160a01b0316611e845760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016105c6565b6000611e9b60408051602081019091526000815290565b90506000815111611ebb5760405180602001604052806000815250611ee6565b80611ec58461219a565b604051602001611ed692919061302c565b6040516020818303038152906040525b9392505050565b6001600160a01b038316611f4857611f4381600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611f6b565b816001600160a01b0316836001600160a01b031614611f6b57611f6b83826122cc565b6001600160a01b038216611f825761071881612369565b826001600160a01b0316826001600160a01b031614610718576107188282612418565b6000611fb082610cb2565b9050611fbe81600084611be8565b611fc96000836114ed565b6001600160a01b0381166000908152600360205260408120805460019290611ff2908490612ffd565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0382166120a25760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105c6565b6000818152600260205260409020546001600160a01b0316156121075760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105c6565b61211360008383611be8565b6001600160a01b038216600090815260036020526040812080546001929061213c908490613014565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060816121da57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561220457806121ee816130b4565b91506121fd9050600a836130e5565b91506121de565b60008167ffffffffffffffff81111561221f5761221f612703565b6040519080825280601f01601f191660200182016040528015612249576020820181803683370190505b5090505b84156113c85761225e600183612ffd565b915061226b600a866130f9565b612276906030613014565b60f81b81838151811061228b5761228b612cf6565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506122c5600a866130e5565b945061224d565b600060016122d984610db9565b6122e39190612ffd565b600083815260076020526040902054909150808214612336576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b60085460009061237b90600190612ffd565b600083815260096020526040812054600880549394509092849081106123a3576123a3612cf6565b9060005260206000200154905080600883815481106123c4576123c4612cf6565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806123fc576123fc61310d565b6001900381819060005260206000200160009055905550505050565b600061242383610db9565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b82805461246890612cbb565b90600052602060002090601f01602090048101928261248a57600085556124d0565b82601f106124a357805160ff19168380011785556124d0565b828001600101855582156124d0579182015b828111156124d05782518255916020019190600101906124b5565b506124dc929150612516565b5090565b5080546124ec90612cbb565b6000825580601f106124fc575050565b601f016020900490600052602060002090810190610a3491905b5b808211156124dc5760008155600101612517565b6001600160e01b031981168114610a3457600080fd5b60006020828403121561255357600080fd5b8135611ee68161252b565b60005b83811015612579578181015183820152602001612561565b8381111561127e5750506000910152565b600081518084526125a281602086016020860161255e565b601f01601f19169290920160200192915050565b602081526000611ee6602083018461258a565b6000602082840312156125db57600080fd5b5035919050565b6001600160a01b0381168114610a3457600080fd5b6000806040838503121561260a57600080fd5b8235612615816125e2565b946020939093013593505050565b60008060008060006080868803121561263b57600080fd5b8535612646816125e2565b94506020860135612656816125e2565b935060408601359250606086013567ffffffffffffffff8082111561267a57600080fd5b818801915088601f83011261268e57600080fd5b81358181111561269d57600080fd5b8960208285010111156126af57600080fd5b9699959850939650602001949392505050565b6000806000606084860312156126d757600080fd5b83356126e2816125e2565b925060208401356126f2816125e2565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561273c5761273c612703565b60405290565b6040516080810167ffffffffffffffff8111828210171561273c5761273c612703565b60405160a0810167ffffffffffffffff8111828210171561273c5761273c612703565b604051601f8201601f1916810167ffffffffffffffff811182821017156127b1576127b1612703565b604052919050565b600067ffffffffffffffff8211156127d3576127d3612703565b50601f01601f191660200190565b60006127f46127ef846127b9565b612788565b905082815283838301111561280857600080fd5b828260208301376000602084830101529392505050565b60006020828403121561283157600080fd5b813567ffffffffffffffff81111561284857600080fd5b8201601f8101841361285957600080fd5b6113c8848235602084016127e1565b60006020828403121561287a57600080fd5b8135611ee6816125e2565b8015158114610a3457600080fd5b803561289e81612885565b919050565b600080604083850312156128b657600080fd5b82356128c1816125e2565b915060208301356128d181612885565b809150509250929050565b600082601f8301126128ed57600080fd5b611ee6838335602085016127e1565b6000806000806080858703121561291257600080fd5b843561291d816125e2565b9350602085013561292d816125e2565b925060408501359150606085013567ffffffffffffffff81111561295057600080fd5b61295c878288016128dc565b91505092959194509250565b80356006811061289e57600080fd5b600060c0828403121561298957600080fd5b612991612719565b9050813561299e81612885565b81526129ac60208301612968565b60208201526129bd60408301612968565b60408201526129ce60608301612968565b60608201526080820135600981106129e557600080fd5b608082015260a082013567ffffffffffffffff811115612a0457600080fd5b612a10848285016128dc565b60a08301525092915050565b600082601f830112612a2d57600080fd5b8135602067ffffffffffffffff80831115612a4a57612a4a612703565b8260051b612a59838201612788565b9384528581018301938381019088861115612a7357600080fd5b84880192505b85831015612b3157823584811115612a915760008081fd5b88016080818b03601f1901811315612aa95760008081fd5b612ab1612742565b87830135612abe81612885565b81526040612acd848201612968565b8983015260608085013589811115612ae55760008081fd5b612af38f8c838901016128dc565b8484015250928401359288841115612b0d57600091508182fd5b612b1b8e8b868801016128dc565b9083015250845250509184019190840190612a79565b98975050505050505050565b600060a08284031215612b4f57600080fd5b612b57612765565b9050612b6282612893565b8152602082013567ffffffffffffffff80821115612b7f57600080fd5b612b8b858386016128dc565b60208401526040840135915080821115612ba457600080fd5b612bb0858386016128dc565b60408401526060840135915080821115612bc957600080fd5b612bd585838601612977565b60608401526080840135915080821115612bee57600080fd5b50612bfb84828501612a1c565b60808301525092915050565b60008060008060808587031215612c1d57600080fd5b84359350602085013567ffffffffffffffff80821115612c3c57600080fd5b612c48888389016128dc565b94506040870135915080821115612c5e57600080fd5b612c6a88838901612b3d565b93506060870135915080821115612c8057600080fd5b5061295c87828801612b3d565b60008060408385031215612ca057600080fd5b8235612cab816125e2565b915060208301356128d1816125e2565b600181811c90821680612ccf57607f821691505b60208210811415612cf057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612d1e57600080fd5b5051919050565b600060208284031215612d3757600080fd5b8151611ee681612885565b634e487b7160e01b600052602160045260246000fd5b60068110612d6857612d68612d42565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015612dfb5782840389528151608081511515865286820151612db188880182612d58565b506040808301518282890152612dc98389018261258a565b9250505060608083015192508682038188015250612de7818361258a565b9a87019a9550505090840190600101612d8a565b5091979650505050505050565b8051151582526000602082015160a06020850152612e2960a085018261258a565b905060408301518482036040860152612e42828261258a565b915050606083015184820360608601528051151582526020810151612e6a6020840182612d58565b506040810151612e7d6040840182612d58565b506060810151612e906060840182612d58565b50608081015160098110612ea657612ea6612d42565b8060808401525060a0810151905060c060a0830152612ec860c083018261258a565b91505060808301518482036080860152612ee28282612d6c565b95945050505050565b8681526001600160a01b038616602082015260c060408201526000612f1360c0830187612e08565b8281036060840152612f25818761258a565b90508281036080840152612f39818661258a565b905082810360a0840152612f4d8185612e08565b9998505050505050505050565b60008060408385031215612f6d57600080fd5b8251612f78816125e2565b602084015190925067ffffffffffffffff811115612f9557600080fd5b8301601f81018513612fa657600080fd5b8051612fb46127ef826127b9565b818152866020838501011115612fc957600080fd5b612fda82602083016020860161255e565b8093505050509250929050565b634e487b7160e01b600052601160045260246000fd5b60008282101561300f5761300f612fe7565b500390565b6000821982111561302757613027612fe7565b500190565b6000835161303e81846020880161255e565b83519083019061305281836020880161255e565b01949350505050565b60006001600160a01b0380871683528086166020840152508360408301526080606083015261308d608083018461258a565b9695505050505050565b6000602082840312156130a957600080fd5b8151611ee68161252b565b60006000198214156130c8576130c8612fe7565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826130f4576130f46130cf565b500490565b600082613108576131086130cf565b500690565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b0fa0f546c866529d1c9ee85790a62969c975297a33a560f18dd01bb45c5232b64736f6c634300080c0033";

type XDVContainerNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: XDVContainerNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class XDVContainerNFT__factory extends ContractFactory {
  constructor(...args: XDVContainerNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    ancon: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<XDVContainerNFT> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      ancon,
      chain,
      overrides || {}
    ) as Promise<XDVContainerNFT>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    ancon: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      ancon,
      chain,
      overrides || {}
    );
  }
  attach(address: string): XDVContainerNFT {
    return super.attach(address) as XDVContainerNFT;
  }
  connect(signer: Signer): XDVContainerNFT__factory {
    return super.connect(signer) as XDVContainerNFT__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): XDVContainerNFTInterface {
    return new utils.Interface(_abi) as XDVContainerNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): XDVContainerNFT {
    return new Contract(address, _abi, signerOrProvider) as XDVContainerNFT;
  }
}
