/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  InvoiceAssetRequest,
  InvoiceAssetRequestInterface,
} from "../InvoiceAssetRequest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "ancon",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lendingPool",
        type: "address",
      },
      {
        internalType: "address",
        name: "_dataProvider",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "cufeId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "cafeUri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "diddoc",
        type: "string",
      },
    ],
    name: "RequestAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "cufeId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "RequestMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "requests",
    outputs: [
      {
        internalType: "string",
        name: "cufeId",
        type: "string",
      },
      {
        internalType: "string",
        name: "cafeUri",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "kyxId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "diddoc",
        type: "string",
      },
      {
        internalType: "bool",
        name: "minted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "cufeId",
        type: "string",
      },
    ],
    name: "getRequest",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "cufeId",
            type: "string",
          },
          {
            internalType: "string",
            name: "cafeUri",
            type: "string",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "kyxId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "diddoc",
            type: "string",
          },
          {
            internalType: "bool",
            name: "minted",
            type: "bool",
          },
        ],
        internalType: "struct InvoiceAssetRequest.Request",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "packetProof",
        type: "tuple",
      },
    ],
    name: "createRequestWithProof",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "packetProof",
        type: "tuple",
      },
    ],
    name: "mintMFNFTwithProof",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006006553480156200001657600080fd5b5060405162002217380380620022178339810160408190526200003991620000ec565b62000044336200007f565b600480546001600160a01b039687166001600160a01b0319918216179091556005805495909616941693909317909355506006555062000153565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000e757600080fd5b919050565b600080600080600060a086880312156200010557600080fd5b6200011086620000cf565b94506200012060208701620000cf565b93506200013060408701620000cf565b92506200014060608701620000cf565b9150608086015190509295509295909350565b6120b480620001636000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806385b9241311610097578063ddca3f4311610066578063ddca3f4314610202578063f2fde38b1461020b578063f93b92931461021e578063fc0c546a1461023157600080fd5b806385b92413146101a95780638da5cb5b146101c9578063b8b1c550146101da578063ced72f87146101fa57600080fd5b80635badbe4c116100d35780635badbe4c14610152578063692d51d21461016957806369fe0e2d1461018e578063715018a6146101a157600080fd5b80633aeac4e1146100fa5780633cd559a41461010f57806351cff8d91461013f575b600080fd5b61010d610108366004611464565b610244565b005b600554610122906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61010d61014d36600461149d565b61044b565b61015b60015481565b604051908152602001610136565b61017c6101773660046115dd565b610594565b6040516101369695949392919061168a565b61010d61019c3660046116ee565b61077c565b61010d6107db565b6101bc6101b73660046115dd565b610841565b6040516101369190611707565b6000546001600160a01b0316610122565b6101ed6101e8366004611a72565b610b21565b6040516101369190611b04565b60035461015b565b61015b60035481565b61010d61021936600461149d565b610f28565b6101ed61022c366004611a72565b61100a565b600454610122906001600160a01b031681565b6000546001600160a01b031633146102a35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103279190611b17565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015610393573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b79190611b30565b6104035760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c65640000000000000000000000000000000000604482015260640161029a565b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161043e91815260200190565b60405180910390a2505050565b6000546001600160a01b031633146104a55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029a565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d80600081146104f4576040519150601f19603f3d011682016040523d82523d6000602084013e6104f9565b606091505b50915091508161054b5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e64204574686572000000000000000000000000604482015260640161029a565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58460405161058691815260200190565b60405180910390a250505050565b80516020818301810180516002825292820191909301209152805481906105ba90611b4d565b80601f01602080910402602001604051908101604052809291908181526020018280546105e690611b4d565b80156106335780601f1061060857610100808354040283529160200191610633565b820191906000526020600020905b81548152906001019060200180831161061657829003601f168201915b50505050509080600101805461064890611b4d565b80601f016020809104026020016040519081016040528092919081815260200182805461067490611b4d565b80156106c15780601f10610696576101008083540402835291602001916106c1565b820191906000526020600020905b8154815290600101906020018083116106a457829003601f168201915b505050506002830154600384015460048501805494956001600160a01b0390931694919350906106f090611b4d565b80601f016020809104026020016040519081016040528092919081815260200182805461071c90611b4d565b80156107695780601f1061073e57610100808354040283529160200191610769565b820191906000526020600020905b81548152906001019060200180831161074c57829003601f168201915b5050506005909301549192505060ff1686565b6000546001600160a01b031633146107d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029a565b600355565b6000546001600160a01b031633146108355760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029a565b61083f6000611359565b565b6108856040518060c00160405280606081526020016060815260200160006001600160a01b0316815260200160008152602001606081526020016000151581525090565b60006001600160a01b03166002836040516108a09190611b88565b908152604051908190036020019020600201546001600160a01b0316141561090a5760405162461bcd60e51b815260206004820152601060248201527f6e6f207265717565737420666f756e6400000000000000000000000000000000604482015260640161029a565b60028260405161091a9190611b88565b90815260200160405180910390206040518060c001604052908160008201805461094390611b4d565b80601f016020809104026020016040519081016040528092919081815260200182805461096f90611b4d565b80156109bc5780601f10610991576101008083540402835291602001916109bc565b820191906000526020600020905b81548152906001019060200180831161099f57829003601f168201915b505050505081526020016001820180546109d590611b4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a0190611b4d565b8015610a4e5780601f10610a2357610100808354040283529160200191610a4e565b820191906000526020600020905b815481529060010190602001808311610a3157829003601f168201915b505050918352505060028201546001600160a01b0316602082015260038201546040820152600482018054606090920191610a8890611b4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610ab490611b4d565b8015610b015780601f10610ad657610100808354040283529160200191610b01565b820191906000526020600020905b815481529060010190602001808311610ae457829003601f168201915b50505091835250506005919091015460ff16151560209091015292915050565b600554604051635eccc37160e01b8152600481018690526060917fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470916001600160a01b0390911690635eccc37190602401600060405180830381865afa158015610b8f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bb79190810190611be9565b805190602001201415610c0c5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206d6f6e696b65720000000000000000000000000000000000604482015260640161029a565b60055460208301516040516397554e8f60e01b81526001600160a01b03909216916397554e8f91610c4a91899133918991908b908a90600401611dc7565b6020604051808303816000875af1158015610c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c8d9190611b30565b610cd95760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f66000000000000000000000000604482015260640161029a565b60008060008087806020019051810190610cf39190611e36565b935093509350935083604051602001610d0c9190611b88565b60405160208183030381529060405280519060200120600285604051610d329190611b88565b90815260405160209181900382018120610d4e92909101611ebc565b604051602081830303815290604052805190602001201415610db25760405162461bcd60e51b815260206004820152601660248201527f7265717565737420616c72656164792065786973747300000000000000000000604482015260640161029a565b60018054610dbf91611f58565b6001556040805160c0810182528581526020810185905233818301526060810184905260808101839052600060a08201529051600290610e00908790611b88565b90815260200160405180910390206000820151816000019080519060200190610e2a9291906113b6565b506020828101518051610e4392600185019201906113b6565b50604082015160028201805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039092169190911790556060820151600382015560808201518051610e9c9160048401916020909101906113b6565b5060a091909101516005909101805460ff1916911515919091179055604051610ec6908490611b88565b604051809103902084604051610edc9190611b88565b60405180910390207f6ea7b3ccf6aadb8805bbf9690ffc492656f03a9006876832a7f484788a597f8583604051610f139190611b04565b60405180910390a35091979650505050505050565b6000546001600160a01b03163314610f825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161029a565b6001600160a01b038116610ffe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161029a565b61100781611359565b50565b600554604051635eccc37160e01b8152600481018690526060917fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470916001600160a01b0390911690635eccc37190602401600060405180830381865afa158015611078573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110a09190810190611be9565b8051906020012014156110f55760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206d6f6e696b65720000000000000000000000000000000000604482015260640161029a565b60055460208301516040516397554e8f60e01b81526001600160a01b03909216916397554e8f9161113391899133918991908b908a90600401611dc7565b6020604051808303816000875af1158015611152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111769190611b30565b6111c25760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f66000000000000000000000000604482015260640161029a565b6000806000806000806000808b8060200190518101906111e29190611f89565b97509750975097509750975097509750876040516020016112039190611b88565b604051602081830303815290604052805190602001206002896040516112299190611b88565b9081526040516020918190038201812061124592909101611ebc565b60405160208183030381529060405280519060200120146112a85760405162461bcd60e51b815260206004820152601760248201527f72657175657374206d7573742062652063726561746564000000000000000000604482015260640161029a565b60016002896040516112ba9190611b88565b908152604051908190036020018120600501805492151560ff19909316929092179091556112e9908890611b88565b6040518091039020886040516112ff9190611b88565b604080519182900382206001600160a01b038716835260208301869052917ff52180299f4503f77ad0caa18527c2eda864037cfee45205e70fa3443f1d289c910160405180910390a350959b9a5050505050505050505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546113c290611b4d565b90600052602060002090601f0160209004810192826113e4576000855561142a565b82601f106113fd57805160ff191683800117855561142a565b8280016001018555821561142a579182015b8281111561142a57825182559160200191906001019061140f565b5061143692915061143a565b5090565b5b80821115611436576000815560010161143b565b6001600160a01b038116811461100757600080fd5b6000806040838503121561147757600080fd5b82356114828161144f565b915060208301356114928161144f565b809150509250929050565b6000602082840312156114af57600080fd5b81356114ba8161144f565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156114fa576114fa6114c1565b60405290565b6040516080810167ffffffffffffffff811182821017156114fa576114fa6114c1565b60405160a0810167ffffffffffffffff811182821017156114fa576114fa6114c1565b604051601f8201601f1916810167ffffffffffffffff8111828210171561156f5761156f6114c1565b604052919050565b600067ffffffffffffffff821115611591576115916114c1565b50601f01601f191660200190565b60006115b26115ad84611577565b611546565b90508281528383830111156115c657600080fd5b828260208301376000602084830101529392505050565b6000602082840312156115ef57600080fd5b813567ffffffffffffffff81111561160657600080fd5b8201601f8101841361161757600080fd5b6116268482356020840161159f565b949350505050565b60005b83811015611649578181015183820152602001611631565b83811115611658576000848401525b50505050565b6000815180845261167681602086016020860161162e565b601f01601f19169290920160200192915050565b60c08152600061169d60c083018961165e565b82810360208401526116af818961165e565b90506001600160a01b038716604084015285606084015282810360808401526116d8818661165e565b91505082151560a0830152979650505050505050565b60006020828403121561170057600080fd5b5035919050565b602081526000825160c0602084015261172360e084018261165e565b90506020840151601f1980858403016040860152611741838361165e565b92506001600160a01b0360408701511660608601526060860151608086015260808601519150808584030160a08601525061177c828261165e565b91505060a0840151151560c08401528091505092915050565b600082601f8301126117a657600080fd5b6114ba8383356020850161159f565b801515811461100757600080fd5b80356117ce816117b5565b919050565b8035600681106117ce57600080fd5b600060c082840312156117f457600080fd5b6117fc6114d7565b90508135611809816117b5565b8152611817602083016117d3565b6020820152611828604083016117d3565b6040820152611839606083016117d3565b606082015260808201356009811061185057600080fd5b608082015260a082013567ffffffffffffffff81111561186f57600080fd5b61187b84828501611795565b60a08301525092915050565b600082601f83011261189857600080fd5b8135602067ffffffffffffffff808311156118b5576118b56114c1565b8260051b6118c4838201611546565b93845285810183019383810190888611156118de57600080fd5b84880192505b8583101561199c578235848111156118fc5760008081fd5b88016080818b03601f19018113156119145760008081fd5b61191c611500565b87830135611929816117b5565b815260406119388482016117d3565b89830152606080850135898111156119505760008081fd5b61195e8f8c83890101611795565b848401525092840135928884111561197857600091508182fd5b6119868e8b86880101611795565b90830152508452505091840191908401906118e4565b98975050505050505050565b600060a082840312156119ba57600080fd5b6119c2611523565b90506119cd826117c3565b8152602082013567ffffffffffffffff808211156119ea57600080fd5b6119f685838601611795565b60208401526040840135915080821115611a0f57600080fd5b611a1b85838601611795565b60408401526060840135915080821115611a3457600080fd5b611a40858386016117e2565b60608401526080840135915080821115611a5957600080fd5b50611a6684828501611887565b60808301525092915050565b60008060008060808587031215611a8857600080fd5b84359350602085013567ffffffffffffffff80821115611aa757600080fd5b611ab388838901611795565b94506040870135915080821115611ac957600080fd5b611ad5888389016119a8565b93506060870135915080821115611aeb57600080fd5b50611af8878288016119a8565b91505092959194509250565b6020815260006114ba602083018461165e565b600060208284031215611b2957600080fd5b5051919050565b600060208284031215611b4257600080fd5b81516114ba816117b5565b600181811c90821680611b6157607f821691505b60208210811415611b8257634e487b7160e01b600052602260045260246000fd5b50919050565b60008251611b9a81846020870161162e565b9190910192915050565b600082601f830112611bb557600080fd5b8151611bc36115ad82611577565b818152846020838601011115611bd857600080fd5b61162682602083016020870161162e565b600060208284031215611bfb57600080fd5b815167ffffffffffffffff811115611c1257600080fd5b61162684828501611ba4565b634e487b7160e01b600052602160045260246000fd5b60068110611c4457611c44611c1e565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015611cd75782840389528151608081511515865286820151611c8d88880182611c34565b506040808301518282890152611ca58389018261165e565b9250505060608083015192508682038188015250611cc3818361165e565b9a87019a9550505090840190600101611c66565b5091979650505050505050565b8051151582526000602082015160a06020850152611d0560a085018261165e565b905060408301518482036040860152611d1e828261165e565b915050606083015184820360608601528051151582526020810151611d466020840182611c34565b506040810151611d596040840182611c34565b506060810151611d6c6060840182611c34565b50608081015160098110611d8257611d82611c1e565b8060808401525060a0810151905060c060a0830152611da460c083018261165e565b91505060808301518482036080860152611dbe8282611c48565b95945050505050565b8681526001600160a01b038616602082015260c060408201526000611def60c0830187611ce4565b8281036060840152611e01818761165e565b90508281036080840152611e15818661165e565b905082810360a0840152611e298185611ce4565b9998505050505050505050565b60008060008060808587031215611e4c57600080fd5b845167ffffffffffffffff80821115611e6457600080fd5b611e7088838901611ba4565b95506020870151915080821115611e8657600080fd5b611e9288838901611ba4565b9450604087015193506060870151915080821115611eaf57600080fd5b50611af887828801611ba4565b600080835481600182811c915080831680611ed857607f831692505b6020808410821415611ef857634e487b7160e01b86526022600452602486fd5b818015611f0c5760018114611f1d57611f4a565b60ff19861689528489019650611f4a565b60008a81526020902060005b86811015611f425781548b820152908501908301611f29565b505084890196505b509498975050505050505050565b60008219821115611f7957634e487b7160e01b600052601160045260246000fd5b500190565b80516117ce8161144f565b600080600080600080600080610100898b031215611fa657600080fd5b885167ffffffffffffffff80821115611fbe57600080fd5b611fca8c838d01611ba4565b995060208b0151915080821115611fe057600080fd5b611fec8c838d01611ba4565b985060408b015191508082111561200257600080fd5b61200e8c838d01611ba4565b975060608b015191508082111561202457600080fd5b6120308c838d01611ba4565b965060808b015191508082111561204657600080fd5b506120538b828c01611ba4565b94505061206260a08a01611f7e565b60c08a015160e0909a0151989b979a509598949793969250505056fea2646970667358221220faac4a86d0de6918f4a056a750a4cf999b4cc0ba3f33f4925136f333eb64adc364736f6c634300080c0033";

type InvoiceAssetRequestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InvoiceAssetRequestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InvoiceAssetRequest__factory extends ContractFactory {
  constructor(...args: InvoiceAssetRequestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    tokenERC20: string,
    ancon: string,
    _lendingPool: string,
    _dataProvider: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InvoiceAssetRequest> {
    return super.deploy(
      tokenERC20,
      ancon,
      _lendingPool,
      _dataProvider,
      chain,
      overrides || {}
    ) as Promise<InvoiceAssetRequest>;
  }
  getDeployTransaction(
    tokenERC20: string,
    ancon: string,
    _lendingPool: string,
    _dataProvider: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenERC20,
      ancon,
      _lendingPool,
      _dataProvider,
      chain,
      overrides || {}
    );
  }
  attach(address: string): InvoiceAssetRequest {
    return super.attach(address) as InvoiceAssetRequest;
  }
  connect(signer: Signer): InvoiceAssetRequest__factory {
    return super.connect(signer) as InvoiceAssetRequest__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InvoiceAssetRequestInterface {
    return new utils.Interface(_abi) as InvoiceAssetRequestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InvoiceAssetRequest {
    return new Contract(address, _abi, signerOrProvider) as InvoiceAssetRequest;
  }
}
