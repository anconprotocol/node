/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { KYX, KYXInterface } from "../KYX";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "ancon",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "id",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "diddoc",
        type: "string",
      },
    ],
    name: "IssuerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "BUSINESS",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CUSTOMER",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TRANSACTION",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
    ],
    name: "balanceOfAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "issuers",
    outputs: [
      {
        internalType: "string",
        name: "id",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "diddoc",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "reputation",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "issuersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockNumber",
        type: "uint256",
      },
    ],
    name: "totalSupplyAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
    ],
    name: "getIssuerLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "id",
        type: "string",
      },
    ],
    name: "getIssuer",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "category",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "diddoc",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "reputation",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct KYX.Issuer",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "packetProof",
        type: "tuple",
      },
    ],
    name: "registerIssuerWithProof",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "issuerID",
        type: "string",
      },
      {
        internalType: "string",
        name: "diddocUri",
        type: "string",
      },
    ],
    name: "setIssuerWithProof",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff60a01b1916600960a11b1781557f46e0d1fa2be0423550e96859e7c25c6f3178358b189469f16373069e7f092a0a6003557f132a74b5b10695b757fb3e047a362cfb5b40d43cd8c9749d1fdb764766f92e026004557f715ca657b59093194c1fc8627ec3888136076df0467493d5f6fc3ad4cb0455d2600555600b553480156200009357600080fd5b506040516200286038038062002860833981016040819052620000b69162000167565b620000c133620000fa565b600980546001600160a01b039485166001600160a01b031991821617909155600a805493909416921691909117909155600b55620001a8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200016257600080fd5b919050565b6000806000606084860312156200017d57600080fd5b62000188846200014a565b925062000198602085016200014a565b9150604084015190509250925092565b6126a880620001b86000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c806370a08231116100f9578063adb9b61e11610097578063e245a4a311610071578063e245a4a3146103bf578063e36c8450146103df578063e9cbd822146103e8578063f2fde38b146103fb57600080fd5b8063adb9b61e1461038e578063ced72f87146103ae578063ddca3f43146103b657600080fd5b8063730eeadf116100d3578063730eeadf146103325780638da5cb5b14610357578063981b24d0146103685780639dc29fac1461037b57600080fd5b806370a082311461030e578063715018a6146103215780637234b5021461032957600080fd5b80633aeac4e1116101665780634ee2cd7e116101405780634ee2cd7e146102c257806351cff8d9146102d557806369fe0e2d146102e85780636a326ab1146102fb57600080fd5b80633aeac4e1146102615780633cd559a41461027457806340c10f191461029f57600080fd5b8063214a1dc111610197578063214a1dc1146101f5578063313ce5671461020a57806332e6c9071461024157600080fd5b80631479f99e146101be57806314c10e9c146101e457806318160ddd146101ed575b600080fd5b6101d16101cc366004611b2c565b61040e565b6040519081526020015b60405180910390f35b6101d160055481565b6101d1610481565b610208610203366004611c79565b610491565b005b60005461022f9074010000000000000000000000000000000000000000900460ff1681565b60405160ff90911681526020016101db565b61025461024f366004611ce6565b610616565b6040516101db9190611d85565b61020861026f366004611e13565b610863565b600a54610287906001600160a01b031681565b6040516001600160a01b0390911681526020016101db565b6102b26102ad366004611e4c565b610a65565b60405190151581526020016101db565b6101d16102d0366004611e4c565b610c13565b6102086102e3366004611e78565b610ca9565b6102086102f6366004611b2c565b610df2565b610208610309366004611e78565b610e51565b6101d161031c366004611e78565b610eda565b610208610ee6565b6101d160035481565b610345610340366004611ce6565b610f4c565b6040516101db96959493929190611e9c565b6000546001600160a01b0316610287565b6101d1610376366004611b2c565b6110b9565b6102b2610389366004611e4c565b61110f565b6101d161039c366004611b2c565b60066020526000908152604090205481565b6008546101d1565b6101d160085481565b6103d26103cd3660046121a7565b611214565b6040516101db9190612239565b6101d160045481565b600954610287906001600160a01b031681565b610208610409366004611e78565b611689565b60008181526006602052604081205461046e5760405162461bcd60e51b815260206004820152601060248201527f6e6f206973737565727320666f756e640000000000000000000000000000000060448201526064015b60405180910390fd5b5060009081526006602052604090205490565b600061048c436110b9565b905090565b6000838152600760205260409081902090513391906104b190859061224c565b908152604051908190036020019020600401546001600160a01b0361010090910416146105465760405162461bcd60e51b815260206004820152602160248201527f53656e646572206d75737420626520746865204973737565722063726561746f60448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610465565b60408051600081526020810180835281519020916105669184910161224c565b6040516020818303038152906040528051906020012014156105ca5760405162461bcd60e51b815260206004820152601960248201527f44696420646f63206d757374206e6f7420626520656d707479000000000000006044820152606401610465565b8060076000858152602001908152602001600020836040516105ec919061224c565b90815260200160405180910390206002019080519060200190610610929190611a93565b50505050565b6040805160c081018252606080825260006020830181905292820181905281018290526080810182905260a081019190915260008381526007602052604090819020905161066590849061224c565b9081526040519081900360200190206004015460ff16156106c85760405162461bcd60e51b815260206004820152601060248201527f6e6f206973737565727320666f756e64000000000000000000000000000000006044820152606401610465565b6000838152600760205260409081902090516106e590849061224c565b90815260200160405180910390206040518060c001604052908160008201805461070e90612268565b80601f016020809104026020016040519081016040528092919081815260200182805461073a90612268565b80156107875780601f1061075c57610100808354040283529160200191610787565b820191906000526020600020905b81548152906001019060200180831161076a57829003601f168201915b50505050508152602001600182015481526020016002820180546107aa90612268565b80601f01602080910402602001604051908101604052809291908181526020018280546107d690612268565b80156108235780601f106107f857610100808354040283529160200191610823565b820191906000526020600020905b81548152906001019060200180831161080657829003601f168201915b50505091835250506003820154602082015260049091015460ff81161515604083015261010090046001600160a01b031660609091015290505b92915050565b6000546001600160a01b031633146108bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610465565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561091d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094191906122a3565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af11580156109ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d191906122bc565b610a1d5760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152606401610465565b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051610a5891815260200190565b60405180910390a2505050565b600080546001600160a01b03163314610ac05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610465565b6000610aca610481565b905080610ad784826122ef565b1015610b255760405162461bcd60e51b815260206004820152601560248201527f746f74616c20737570706c79206f766572666c6f7700000000000000000000006044820152606401610465565b6000610b3085610eda565b905080610b3d85826122ef565b1015610b8b5760405162461bcd60e51b815260206004820152600f60248201527f62616c616365206f766572666c6f7700000000000000000000000000000000006044820152606401610465565b610b9f6002610b9a86856122ef565b61176b565b6001600160a01b0385166000908152600160205260409020610bc590610b9a86846122ef565b846001600160a01b03167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688585604051610c0091815260200190565b60405180910390a2506001949350505050565b6001600160a01b0382166000908152600160205260408120541580610c7357506001600160a01b03831660009081526001602052604081208054849290610c5c57610c5c612307565b6000918252602090912001546001600160801b0316115b15610c805750600061085d565b6001600160a01b0383166000908152600160205260409020610ca290836118ad565b905061085d565b6000546001600160a01b03163314610d035760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610465565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610d52576040519150601f19603f3d011682016040523d82523d6000602084013e610d57565b606091505b509150915081610da95760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610465565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610de491815260200190565b60405180910390a250505050565b6000546001600160a01b03163314610e4c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610465565b600855565b6000546001600160a01b03163314610eab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610465565b6009805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600061085d8243610c13565b6000546001600160a01b03163314610f405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610465565b610f4a6000611a36565b565b60076020908152600092835260409092208151808301840180519281529084019290930191909120915280548190610f8390612268565b80601f0160208091040260200160405190810160405280929190818152602001828054610faf90612268565b8015610ffc5780601f10610fd157610100808354040283529160200191610ffc565b820191906000526020600020905b815481529060010190602001808311610fdf57829003601f168201915b50505050509080600101549080600201805461101790612268565b80601f016020809104026020016040519081016040528092919081815260200182805461104390612268565b80156110905780601f1061106557610100808354040283529160200191611090565b820191906000526020600020905b81548152906001019060200180831161107357829003601f168201915b50505050600383015460049093015491929160ff8116915061010090046001600160a01b031686565b60025460009015806110f257508160026000815481106110db576110db612307565b6000918252602090912001546001600160801b0316115b156110ff57506000919050565b61085d6002836118ad565b919050565b600080546001600160a01b0316331461116a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610465565b6000611174610481565b905082600061118286610eda565b905081811015611190578091505b61119f6002610b9a848661231d565b6001600160a01b03861660009081526001602052604090206111c590610b9a848461231d565b856001600160a01b03167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58360405161120091815260200190565b60405180910390a250600195945050505050565b600a546040517f5eccc371000000000000000000000000000000000000000000000000000000008152600481018690526060917fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470916001600160a01b0390911690635eccc37190602401600060405180830381865afa15801561129b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112c39190810190612364565b8051906020012014156113185760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206d6f6e696b657200000000000000000000000000000000006044820152606401610465565b600a5460208301516040517f97554e8f0000000000000000000000000000000000000000000000000000000081526001600160a01b03909216916397554e8f9161136f91899133918991908b908a9060040161255e565b6020604051808303816000875af115801561138e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b291906122bc565b6113fe5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610465565b60008060008680602001905181019061141791906125ed565b925092509250600760008481526020019081526020016000208260405161143e919061224c565b9081526040519081900360200190206004015460ff161515600114801561147d5750600354831480611471575060045483145b8061147d575060055483145b6114ef5760405162461bcd60e51b815260206004820152603560248201527f69737375657220616c72656164792065786973747320616e6420656e61626c6560448201527f64206f7220696e76616c69642063617465676f727900000000000000000000006064820152608401610465565b6000838152600660205260409020546115099060016122ef565b600084815260066020908152604080832093909355825160c08101845285815280820187905280840185905260608101839052600160808201523360a0820152868352600790915290829020915190919061156590859061224c565b9081526020016040518091039020600082015181600001908051906020019061158f929190611a93565b506020828101516001830155604083015180516115b29260028501920190611a93565b506060820151600382015560808201516004909101805460a0909301516001600160a01b0316610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff921515929092167fffffffffffffffffffffff00000000000000000000000000000000000000000090931692909217179055604051839061163f90849061224c565b60405180910390207fb01af51d4dfd3c71daa3892e6436482dd0b46f90b48566b0387cd5ea1c958a34836040516116769190612239565b60405180910390a3509695505050505050565b6000546001600160a01b031633146116e35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610465565b6001600160a01b03811661175f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610465565b61176881611a36565b50565b80816001600160801b0316146117c35760405162461bcd60e51b815260206004820152601360248201527f72657075746174696f6e206f766572666c6f77000000000000000000000000006044820152606401610465565b8154158061180557508154439083906117de9060019061231d565b815481106117ee576117ee612307565b6000918252602090912001546001600160801b0316105b1561185c57815460009061181a9060016122ef565b9050600083828154811061183057611830612307565b600091825260209091206001600160801b03858116600160801b02439190911617910155506118a99050565b815460009061186d9060019061231d565b9050600083828154811061188357611883612307565b600091825260209091200180546001600160801b03808616600160801b02911617905550505b5050565b81546000906118be5750600061085d565b825483906118ce9060019061231d565b815481106118de576118de612307565b6000918252602090912001546001600160801b0316821061193c57825483906119099060019061231d565b8154811061191957611919612307565b600091825260209091200154600160801b90046001600160801b0316905061085d565b8260008154811061194f5761194f612307565b6000918252602090912001546001600160801b03168210156119735750600061085d565b825460009081906119869060019061231d565b90505b818111156119ff576000600261199f84846122ef565b6119aa9060016122ef565b6119b49190612650565b9050848682815481106119c9576119c9612307565b6000918252602090912001546001600160801b0316116119eb578092506119f9565b6119f660018261231d565b91505b50611989565b848281548110611a1157611a11612307565b600091825260209091200154600160801b90046001600160801b031695945050505050565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054611a9f90612268565b90600052602060002090601f016020900481019282611ac15760008555611b07565b82601f10611ada57805160ff1916838001178555611b07565b82800160010185558215611b07579182015b82811115611b07578251825591602001919060010190611aec565b50611b13929150611b17565b5090565b5b80821115611b135760008155600101611b18565b600060208284031215611b3e57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715611b7e57611b7e611b45565b60405290565b6040516080810167ffffffffffffffff81118282101715611b7e57611b7e611b45565b60405160a0810167ffffffffffffffff81118282101715611b7e57611b7e611b45565b604051601f8201601f1916810167ffffffffffffffff81118282101715611bf357611bf3611b45565b604052919050565b600067ffffffffffffffff821115611c1557611c15611b45565b50601f01601f191660200190565b600082601f830112611c3457600080fd5b8135611c47611c4282611bfb565b611bca565b818152846020838601011115611c5c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611c8e57600080fd5b83359250602084013567ffffffffffffffff80821115611cad57600080fd5b611cb987838801611c23565b93506040860135915080821115611ccf57600080fd5b50611cdc86828701611c23565b9150509250925092565b60008060408385031215611cf957600080fd5b82359150602083013567ffffffffffffffff811115611d1757600080fd5b611d2385828601611c23565b9150509250929050565b60005b83811015611d48578181015183820152602001611d30565b838111156106105750506000910152565b60008151808452611d71816020860160208601611d2d565b601f01601f19169290920160200192915050565b602081526000825160c06020840152611da160e0840182611d59565b9050602084015160408401526040840151601f19848303016060850152611dc88282611d59565b915050606084015160808401526080840151151560a08401526001600160a01b0360a08501511660c08401528091505092915050565b6001600160a01b038116811461176857600080fd5b60008060408385031215611e2657600080fd5b8235611e3181611dfe565b91506020830135611e4181611dfe565b809150509250929050565b60008060408385031215611e5f57600080fd5b8235611e6a81611dfe565b946020939093013593505050565b600060208284031215611e8a57600080fd5b8135611e9581611dfe565b9392505050565b60c081526000611eaf60c0830189611d59565b8760208401528281036040840152611ec78188611d59565b6060840196909652505091151560808301526001600160a01b031660a0909101529392505050565b801515811461176857600080fd5b803561110a81611eef565b80356006811061110a57600080fd5b600060c08284031215611f2957600080fd5b611f31611b5b565b90508135611f3e81611eef565b8152611f4c60208301611f08565b6020820152611f5d60408301611f08565b6040820152611f6e60608301611f08565b6060820152608082013560098110611f8557600080fd5b608082015260a082013567ffffffffffffffff811115611fa457600080fd5b611fb084828501611c23565b60a08301525092915050565b600082601f830112611fcd57600080fd5b8135602067ffffffffffffffff80831115611fea57611fea611b45565b8260051b611ff9838201611bca565b938452858101830193838101908886111561201357600080fd5b84880192505b858310156120d1578235848111156120315760008081fd5b88016080818b03601f19018113156120495760008081fd5b612051611b84565b8783013561205e81611eef565b8152604061206d848201611f08565b89830152606080850135898111156120855760008081fd5b6120938f8c83890101611c23565b84840152509284013592888411156120ad57600091508182fd5b6120bb8e8b86880101611c23565b9083015250845250509184019190840190612019565b98975050505050505050565b600060a082840312156120ef57600080fd5b6120f7611ba7565b905061210282611efd565b8152602082013567ffffffffffffffff8082111561211f57600080fd5b61212b85838601611c23565b6020840152604084013591508082111561214457600080fd5b61215085838601611c23565b6040840152606084013591508082111561216957600080fd5b61217585838601611f17565b6060840152608084013591508082111561218e57600080fd5b5061219b84828501611fbc565b60808301525092915050565b600080600080608085870312156121bd57600080fd5b84359350602085013567ffffffffffffffff808211156121dc57600080fd5b6121e888838901611c23565b945060408701359150808211156121fe57600080fd5b61220a888389016120dd565b9350606087013591508082111561222057600080fd5b5061222d878288016120dd565b91505092959194509250565b602081526000611e956020830184611d59565b6000825161225e818460208701611d2d565b9190910192915050565b600181811c9082168061227c57607f821691505b6020821081141561229d57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156122b557600080fd5b5051919050565b6000602082840312156122ce57600080fd5b8151611e9581611eef565b634e487b7160e01b600052601160045260246000fd5b60008219821115612302576123026122d9565b500190565b634e487b7160e01b600052603260045260246000fd5b60008282101561232f5761232f6122d9565b500390565b6000612342611c4284611bfb565b905082815283838301111561235657600080fd5b611e95836020830184611d2d565b60006020828403121561237657600080fd5b815167ffffffffffffffff81111561238d57600080fd5b8201601f8101841361239e57600080fd5b6123ad84825160208401612334565b949350505050565b634e487b7160e01b600052602160045260246000fd5b600681106123db576123db6123b5565b9052565b600081518084526020808501808196508360051b8101915082860160005b8581101561246e5782840389528151608081511515865286820151612424888801826123cb565b50604080830151828289015261243c83890182611d59565b925050506060808301519250868203818801525061245a8183611d59565b9a87019a95505050908401906001016123fd565b5091979650505050505050565b8051151582526000602082015160a0602085015261249c60a0850182611d59565b9050604083015184820360408601526124b58282611d59565b9150506060830151848203606086015280511515825260208101516124dd60208401826123cb565b5060408101516124f060408401826123cb565b50606081015161250360608401826123cb565b50608081015160098110612519576125196123b5565b8060808401525060a0810151905060c060a083015261253b60c0830182611d59565b9150506080830151848203608086015261255582826123df565b95945050505050565b8681526001600160a01b038616602082015260c06040820152600061258660c083018761247b565b82810360608401526125988187611d59565b905082810360808401526125ac8186611d59565b905082810360a08401526125c0818561247b565b9998505050505050505050565b600082601f8301126125de57600080fd5b611e9583835160208501612334565b60008060006060848603121561260257600080fd5b83519250602084015167ffffffffffffffff8082111561262157600080fd5b61262d878388016125cd565b9350604086015191508082111561264357600080fd5b50611cdc868287016125cd565b60008261266d57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220279f0c7cc6ac36f9c8310d014902481317b2d645965e8794992be9b65baa30c564736f6c634300080c0033";

type KYXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KYXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KYX__factory extends ContractFactory {
  constructor(...args: KYXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    tokenERC20: string,
    ancon: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KYX> {
    return super.deploy(
      tokenERC20,
      ancon,
      chain,
      overrides || {}
    ) as Promise<KYX>;
  }
  getDeployTransaction(
    tokenERC20: string,
    ancon: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenERC20,
      ancon,
      chain,
      overrides || {}
    );
  }
  attach(address: string): KYX {
    return super.attach(address) as KYX;
  }
  connect(signer: Signer): KYX__factory {
    return super.connect(signer) as KYX__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KYXInterface {
    return new utils.Interface(_abi) as KYXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): KYX {
    return new Contract(address, _abi, signerOrProvider) as KYX;
  }
}
