/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TCR, TCRInterface } from "../TCR";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_parameters",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "listingHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "challengeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "challenger",
        type: "address",
      },
    ],
    name: "ChallengeCompleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "listingHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "applicant",
        type: "address",
      },
    ],
    name: "OnApplication",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "listingHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "challengeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "ResolvedChallenge",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "challengeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "listingHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "challengeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [],
    name: "applyStageLen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "commitStageLen",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listingNames",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pollNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_listingHash",
        type: "bytes32",
      },
    ],
    name: "isWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "whitelisted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_listingHash",
        type: "bytes32",
      },
    ],
    name: "appWasMade",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllListings",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDetails",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_listingHash",
        type: "bytes32",
      },
    ],
    name: "getListingDetails",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_listingHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    name: "propose",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_listingHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "challenge",
    outputs: [
      {
        internalType: "uint256",
        name: "challengeId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_listingHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_choice",
        type: "bool",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_listingHash",
        type: "bytes32",
      },
    ],
    name: "canBeWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_listingHash",
        type: "bytes32",
      },
    ],
    name: "updateStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "challengeId",
        type: "uint256",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620023a4380380620023a48339810160408190526200003491620002dd565b6001600160a01b0382166200009e5760405162461bcd60e51b815260206004820152602660248201527f546f6b656e20616464726573732073686f756c64206e6f742062652030206164604482015265323932b9b99760d11b606482015260840160405180910390fd5b600580546001600160a01b0319166001600160a01b0384161790558251620000ce90600690602086019062000149565b5080600081518110620000e557620000e5620003d4565b602002602001015160078190555080600181518110620001095762000109620003d4565b6020026020010151600881905550806002815181106200012d576200012d620003d4565b602090810291909101015160095550506000600a555062000427565b8280546200015790620003ea565b90600052602060002090601f0160209004810192826200017b5760008555620001c6565b82601f106200019657805160ff1916838001178555620001c6565b82800160010185558215620001c6579182015b82811115620001c6578251825591602001919060010190620001a9565b50620001d4929150620001d8565b5090565b5b80821115620001d45760008155600101620001d9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620002305762000230620001ef565b604052919050565b80516001600160a01b03811681146200025057600080fd5b919050565b600082601f8301126200026757600080fd5b815160206001600160401b03821115620002855762000285620001ef565b8160051b6200029682820162000205565b9283528481018201928281019087851115620002b157600080fd5b83870192505b84831015620002d257825182529183019190830190620002b7565b979650505050505050565b600080600060608486031215620002f357600080fd5b83516001600160401b03808211156200030b57600080fd5b818601915086601f8301126200032057600080fd5b815181811115620003355762000335620001ef565b60206200034b601f8301601f1916820162000205565b82815289828487010111156200036057600080fd5b60005b838110156200038057858101830151828201840152820162000363565b83811115620003925760008385840101525b509650620003a288820162000238565b955050506040860151915080821115620003bb57600080fd5b50620003ca8682870162000255565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680620003ff57607f821691505b602082108114156200042157634e487b7160e01b600052602260045260246000fd5b50919050565b611f6d80620004376000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638a59eb56116100b2578063ae73ccec11610081578063e2083c1811610066578063e2083c181461028c578063fbbf93a01461029f578063fc0c546a146102b857600080fd5b8063ae73ccec14610264578063d7ab802d1461027957600080fd5b80638a59eb561461021d5780638cf8151f1461023057806397508f3614610252578063a63dd1981461025b57600080fd5b80632c729fd111610109578063691a38ab116100ee578063691a38ab146101dd5780637b356561146101f05780637f0733601461021457600080fd5b80632c729fd1146101b357806341b3d185146101c657600080fd5b806301a5e3fe1461013b57806306fdde03146101765780630962ef791461018b578063212424c3146101a0575b600080fd5b610161610149366004611b96565b60009081526002602052604090206001015460ff1690565b60405190151581526020015b60405180910390f35b61017e6102e3565b60405161016d9190611bfc565b61019e610199366004611b96565b610371565b005b61019e6101ae366004611c16565b6105f5565b61019e6101c1366004611ca4565b610937565b6101cf60075481565b60405190815260200161016d565b6101616101eb366004611b96565b610c55565b6102036101fe366004611b96565b610ce9565b60405161016d959493929190611cdd565b6101cf60085481565b61019e61022b366004611b96565b610e8f565b61016161023e366004611b96565b600090815260026020526040902054151590565b6101cf600a5481565b6101cf60095481565b61026c610ec9565b60405161016d9190611d1e565b61017e610287366004611b96565b611009565b6101cf61029a366004611d80565b611034565b6102a7611472565b60405161016d959493929190611da2565b6005546102cb906001600160a01b031681565b6040516001600160a01b03909116815260200161016d565b600680546102f090611de2565b80601f016020809104026020016040519081016040528092919081815260200182805461031c90611de2565b80156103695780601f1061033e57610100808354040283529160200191610369565b820191906000526020600020905b81548152906001019060200180831161034c57829003601f168201915b505050505081565b600081815260016020819052604090912054600160a01b900460ff161515146103e15760405162461bcd60e51b815260206004820152601a60248201527f4368616c6c656e6765206973206e6f74207265736f6c7665642e00000000000060448201526064015b60405180910390fd5b6000818152602081815260408083203384529091529020600281015460ff161561044d5760405162461bcd60e51b815260206004820152601f60248201527f566f74652072657761726420697320616c726561647920636c61696d65642e0060448201526064016103d8565b6000828152600460208190526040909120015460ff1680156104705750805460ff165b8061049b57506000828152600460208190526040909120015460ff1615801561049b5750805460ff16155b156105e45760018082015460008481526020929092526040822060038101546002909101546104ca9190611e2d565b6104d49190611e4f565b905060008183600101546104e89190611e6e565b60055460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb906044016020604051808303816000875af115801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e9190611e86565b6105aa5760405162461bcd60e51b815260206004820152601e60248201527f566f74696e6720726577617264207472616e73666572206661696c65642e000060448201526064016103d8565b604051818152339085907f37d2f91e40046979553b8bc9bf12a192e2216dc0a5d3a3e91a8d0ccac8f495e09060200160405180910390a350505b600201805460ff1916600117905550565b60008481526002602052604090206001015460ff16156106575760405162461bcd60e51b815260206004820152601f60248201527f4c697374696e6720697320616c72656164792077686974656c69737465642e0060448201526064016103d8565b600084815260026020526040902054156106d95760405162461bcd60e51b815260206004820152602260248201527f4c697374696e6720697320616c726561647920696e206170706c79207374616760448201527f652e00000000000000000000000000000000000000000000000000000000000060648201526084016103d8565b6007548310156107515760405162461bcd60e51b815260206004820152602160248201527f4e6f7420656e6f756768207374616b6520666f72206170706c69636174696f6e60448201527f2e0000000000000000000000000000000000000000000000000000000000000060648201526084016103d8565b60008481526002602052604090206001810180547fffffffffffffffffffffff0000000000000000000000000000000000000000ff16336101000217905561079d600482018484611a4c565b50600380546001810182556000919091526004820180547fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b909201916107e290611de2565b6107ed929190611ad0565b506003546107fd90600190611ea3565b600582015560085461080f9042611e6e565b81556002810184905560055460018201546040516323b872dd60e01b81526001600160a01b0361010090920482166004820152306024820152604481018790529116906323b872dd906064016020604051808303816000875af115801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190611e86565b6108ea5760405162461bcd60e51b815260206004820152601660248201527f546f6b656e207472616e73666572206661696c65642e0000000000000000000060448201526064016103d8565b336001600160a01b0316857f702d3a5dc044954b35e24f64097d993018d55fc0998bbab729690fa4fde4daf786868660405161092893929190611eba565b60405180910390a35050505050565b600083815260026020526040902080541515806109585750600181015460ff165b6109a45760405162461bcd60e51b815260206004820152601760248201527f4c697374696e6720646f6573206e6f742065786973742e00000000000000000060448201526064016103d8565b600081600301541180156109d357506003810154600090815260016020526040902054600160a01b900460ff16155b610a1f5760405162461bcd60e51b815260206004820152601a60248201527f4c697374696e67206973206e6f74206368616c6c656e6765642e00000000000060448201526064016103d8565b600380820154600090815260046020526040902001544210610a835760405162461bcd60e51b815260206004820152601960248201527f436f6d6d697420706572696f6420686173207061737365642e0000000000000060448201526064016103d8565b6005546040516323b872dd60e01b8152336004820152306024820152604481018590526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610ada573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afe9190611e86565b610b4a5760405162461bcd60e51b815260206004820152601660248201527f546f6b656e207472616e73666572206661696c65642e0000000000000000000060448201526064016103d8565b8115610b8157600381015460009081526004602052604081206001018054859290610b76908490611e6e565b90915550610bad9050565b600381015460009081526004602052604081206002018054859290610ba7908490611e6e565b90915550505b604080516060810182528315158152602080820186815260008385018181526003870180548352828552868320338085529552918690209451855490151560ff199182161786559251600186015551600290940180549415159490921693909317905590549151909186917f085a57a01032fcb440deb051d148ff09c6bb1e8864111ac778e0dce74210b87e91610c479190815260200190565b60405180910390a350505050565b60008181526002602052604081206003810154905415158015610c85575060008381526002602052604090205442115b8015610ca3575060008381526002602052604090206001015460ff16155b8015610cd25750801580610cd25750600081815260016020819052604090912054600160a01b900460ff161515145b15610ce05750600192915050565b50600092915050565b6000818152600260208181526040808420815160e08101835281548152600182015460ff81161515948201949094526101009093046001600160a01b031691830191909152918201546060808301919091526003830154608083015260048301805485948594859493859391929160a084019190610d6690611de2565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9290611de2565b8015610ddf5780601f10610db457610100808354040283529160200191610ddf565b820191906000526020600020905b815481529060010190602001808311610dc257829003601f168201915b505050505081526020016005820154815250509050610e0c87600090815260026020526040902054151590565b80610e18575080602001515b610e645760405162461bcd60e51b815260206004820152601760248201527f4c697374696e6720646f6573206e6f742065786973742e00000000000000000060448201526064016103d8565b602081015160408201516060830151608084015160a090940151929a91995097509195509350915050565b610e9881610c55565b15610ebd5760009081526002602052604090206001908101805460ff19169091179055565b610ec681611530565b50565b60035460609060009067ffffffffffffffff811115610eea57610eea611ef0565b604051908082528060200260200182016040528015610f1d57816020015b6060815260200190600190039081610f085790505b50905060005b6003548110156110035760038181548110610f4057610f40611f06565b906000526020600020018054610f5590611de2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f8190611de2565b8015610fce5780601f10610fa357610100808354040283529160200191610fce565b820191906000526020600020905b815481529060010190602001808311610fb157829003601f168201915b5050505050828281518110610fe557610fe5611f06565b60200260200101819052508080610ffb90611f1c565b915050610f23565b50919050565b6003818154811061101957600080fd5b9060005260206000200160009150905080546102f090611de2565b600082815260026020526040812054151580611061575060008381526002602052604090206001015460ff165b6110ad5760405162461bcd60e51b815260206004820152601760248201527f4c697374696e6720646f6573206e6f742065786973742e00000000000000000060448201526064016103d8565b60008381526002602052604090206003015415806110f0575060008381526002602090815260408083206003015483526001909152902054600160a01b900460ff165b61113c5760405162461bcd60e51b815260206004820152601e60248201527f4c697374696e6720697320616c7265616479206368616c6c656e6765642e000060448201526064016103d8565b60008381526002602052604090205442106111995760405162461bcd60e51b815260206004820152601760248201527f4170706c7920737461676520686173207061737365642e00000000000000000060448201526064016103d8565b600083815260026020819052604090912001548210156112215760405162461bcd60e51b815260206004820152602660248201527f4e6f7420656e6f756768207374616b652070617373656420666f72206368616c60448201527f6c656e67652e000000000000000000000000000000000000000000000000000060648201526084016103d8565b600a5461122f906001611e6e565b600a8181556040805160a08082018352338252600060208084018281528486018a81526060808701858152608088018681529a865260018086528987209851895495511515600160a01b0274ffffffffffffffffffffffffffffffffffffffffff199096166001600160a01b039190911617949094178855915192870192909255516002860155965160039094019390935583519182018452935481529081018390529081019190915260095490918201906112eb9042611e6e565b815260006020918201819052600a805482526004808452604080842086518155868601516001820155868201516002808301919091556060880151600380840191909155608090980151918401805460ff191692151592909217909155925489855292909452918390209093019290925560055490516323b872dd60e01b81523392810192909252306024830152604482018490526001600160a01b0316906323b872dd906064016020604051808303816000875af11580156113b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d69190611e86565b6114225760405162461bcd60e51b815260206004820152601660248201527f546f6b656e207472616e73666572206661696c65642e0000000000000000000060448201526064016103d8565b336001600160a01b0316837fca769bb53d03bedd2d589cd32426863651355d8cbd04b19c1ceaeb1a642d89e0600a5460405161146091815260200190565b60405180910390a350600a5492915050565b606060008060008060006006805461148990611de2565b80601f01602080910402602001604051908101604052809291908181526020018280546114b590611de2565b80156115025780601f106114d757610100808354040283529160200191611502565b820191906000526020600020905b8154815290600101906020018083116114e557829003601f168201915b5050600554600754600854600954969d6001600160a01b039093169c50909a50985093965092945050505050565b6000818152600260208181526040808420815160e08101835281548152600182015460ff81161515948201949094526101009093046001600160a01b0316918301919091529182015460608201526003820154608082015260048201805491929160a0840191906115a090611de2565b80601f01602080910402602001604051908101604052809291908181526020018280546115cc90611de2565b80156116195780601f106115ee57610100808354040283529160200191611619565b820191906000526020600020905b8154815290600101906020018083116115fc57829003601f168201915b5050505050815260200160058201548152505090506000816080015111801561165d57506080810151600090815260016020526040902054600160a01b900460ff16155b6116a95760405162461bcd60e51b815260206004820152601a60248201527f4c697374696e67206973206e6f74206368616c6c656e6765642e00000000000060448201526064016103d8565b608081015160006116b982611950565b600083815260016020526040902080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff8116600160a01b179091559091506001600160a01b03168115611776576000838152600460209081526040808320600180820154938190529190932060038101929092556002909201549101546117419190611e6e565b60008481526001602081815260408084206002908101959095558984529390529190208101805460ff1916909117905561191c565b6005546000848152600160208190526040918290200154905163a9059cbb60e01b81526001600160a01b038481166004830152602482019290925291169063a9059cbb906044016020604051808303816000875af11580156117dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118009190611e86565b61184c5760405162461bcd60e51b815260206004820152601e60248201527f4368616c6c656e6765207374616b652072657475726e206661696c65642e000060448201526064016103d8565b6000838152600460208181526040808420600281015460018085529290952060030194909455919052015460608501516118869190611e6e565b6000848152600160208181526040808420600290810195909555898452908490528220828155908101805474ffffffffffffffffffffffffffffffffffffffffff19169055918201819055600382018190556118e56004830182611b4b565b6005820160009055505060038460c001518154811061190657611906611f06565b90600052602060002001600061191c9190611b4b565b604051838152339086907f64f814d0b060302a9583144ea13e442dd0b812e34dba53680547d8586f42dda390602001610928565b6000818152600460205260408120600301546119ae5760405162461bcd60e51b815260206004820152601460248201527f506f6c6c20646f6573206e6f742065786973742e00000000000000000000000060448201526064016103d8565b600082815260046020526040902060038101544211611a0f5760405162461bcd60e51b815260206004820152601860248201527f436f6d6d697420706572696f64206973206163746976652e000000000000000060448201526064016103d8565b8060020154816001015410611a325760048101805460ff19166001179055611a3f565b60048101805460ff191690555b6004015460ff1692915050565b828054611a5890611de2565b90600052602060002090601f016020900481019282611a7a5760008555611ac0565b82601f10611a935782800160ff19823516178555611ac0565b82800160010185558215611ac0579182015b82811115611ac0578235825591602001919060010190611aa5565b50611acc929150611b81565b5090565b828054611adc90611de2565b90600052602060002090601f016020900481019282611afe5760008555611ac0565b82601f10611b0f5780548555611ac0565b82800160010185558215611ac057600052602060002091601f016020900482015b82811115611ac0578254825591600101919060010190611b30565b508054611b5790611de2565b6000825580601f10611b67575050565b601f016020900490600052602060002090810190610ec691905b5b80821115611acc5760008155600101611b82565b600060208284031215611ba857600080fd5b5035919050565b6000815180845260005b81811015611bd557602081850181015186830182015201611bb9565b81811115611be7576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611c0f6020830184611baf565b9392505050565b60008060008060608587031215611c2c57600080fd5b8435935060208501359250604085013567ffffffffffffffff80821115611c5257600080fd5b818701915087601f830112611c6657600080fd5b813581811115611c7557600080fd5b886020828501011115611c8757600080fd5b95989497505060200194505050565b8015158114610ec657600080fd5b600080600060608486031215611cb957600080fd5b83359250602084013591506040840135611cd281611c96565b809150509250925092565b85151581526001600160a01b038516602082015283604082015282606082015260a060808201526000611d1360a0830184611baf565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611d7357603f19888603018452611d61858351611baf565b94509285019290850190600101611d45565b5092979650505050505050565b60008060408385031215611d9357600080fd5b50508035926020909101359150565b60a081526000611db560a0830188611baf565b90506001600160a01b03861660208301528460408301528360608301528260808301529695505050505050565b600181811c90821680611df657607f821691505b6020821081141561100357634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082611e4a57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611e6957611e69611e17565b500290565b60008219821115611e8157611e81611e17565b500190565b600060208284031215611e9857600080fd5b8151611c0f81611c96565b600082821015611eb557611eb5611e17565b500390565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600019821415611f3057611f30611e17565b506001019056fea26469706673582212201bae21ff387dba34b241f379a48edb183ef9b3093971537a8fbeee0d688734d364736f6c634300080c0033";

type TCRConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TCRConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TCR__factory extends ContractFactory {
  constructor(...args: TCRConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _name: string,
    _token: string,
    _parameters: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TCR> {
    return super.deploy(
      _name,
      _token,
      _parameters,
      overrides || {}
    ) as Promise<TCR>;
  }
  getDeployTransaction(
    _name: string,
    _token: string,
    _parameters: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _token,
      _parameters,
      overrides || {}
    );
  }
  attach(address: string): TCR {
    return super.attach(address) as TCR;
  }
  connect(signer: Signer): TCR__factory {
    return super.connect(signer) as TCR__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TCRInterface {
    return new utils.Interface(_abi) as TCRInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TCR {
    return new Contract(address, _abi, signerOrProvider) as TCR;
  }
}
