/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WXDV, WXDVInterface } from "../WXDV";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "anconprotocolAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enrolledStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "NFTaddress",
        type: "address",
      },
    ],
    name: "NFTEnrolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "ENROLL_NFT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "NFTRegistrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_AVAILABLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_BURNED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_LOCKED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dagContractOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeForContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "serviceFeeForPaymentAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenLockStorage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newItemId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "submitMintWithProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTaddress",
        type: "address",
      },
    ],
    name: "enrollNFT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTaddress",
        type: "address",
      },
    ],
    name: "deactivateNFT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "lockWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "releaseWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "islocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527faba593141db1021cb8de7f38506a824487c2f2e5758168a6568eb7d6a8dd3173600c557f35e808e423fc257ba1bb61b1c2c57e48855b39cbee1f101ebe4fcb026f39e2e0600d557f1a7568e05cd9c1f5b58509adc78e175b2c29ad54d925ee42a8b45d9d39b1081b600e557f7a8231155142074ef50e8525dbfd6360a054cf41867e36de3c2aa1546d1cf8e9600f556000601455600060155560006016556000601855348015620000b557600080fd5b50604051620046ec380380620046ec833981016040819052620000d8916200033d565b845185908590620000f1906000906020850190620001ad565b50805162000107906001906020840190620001ad565b50506006805460ff19169055506200011f336200015b565b601180546001600160a01b039485166001600160a01b031991821617909155601280549390941692169190911790915560185550620004139050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001bb90620003d6565b90600052602060002090601f016020900481019282620001df57600085556200022a565b82601f10620001fa57805160ff19168380011785556200022a565b828001600101855582156200022a579182015b828111156200022a5782518255916020019190600101906200020d565b50620002389291506200023c565b5090565b5b808211156200023857600081556001016200023d565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200027b57600080fd5b81516001600160401b038082111562000298576200029862000253565b604051601f8301601f19908116603f01168101908282118183101715620002c357620002c362000253565b81604052838152602092508683858801011115620002e057600080fd5b600091505b83821015620003045785820183015181830184015290820190620002e5565b83821115620003165760008385830101525b9695505050505050565b80516001600160a01b03811681146200033857600080fd5b919050565b600080600080600060a086880312156200035657600080fd5b85516001600160401b03808211156200036e57600080fd5b6200037c89838a0162000269565b965060208801519150808211156200039357600080fd5b50620003a28882890162000269565b945050620003b36040870162000320565b9250620003c36060870162000320565b9150608086015190509295509295909350565b600181811c90821680620003eb57607f821691505b602082108114156200040d57634e487b7160e01b600052602260045260246000fd5b50919050565b6142c980620004236000396000f3fe6080604052600436106102dc5760003560e01c80636c19e78311610184578063a22cb465116100d6578063e53ae1021161008a578063e9cbd82211610064578063e9cbd82214610812578063f2fde38b14610832578063fd632d511461085257600080fd5b8063e53ae1021461079d578063e7b04b86146107b3578063e985e9c5146107c957600080fd5b8063b88d4fde116100bb578063b88d4fde14610747578063c014b9da14610767578063c87b56dd1461077d57600080fd5b8063a22cb46514610707578063b20f84831461072757600080fd5b80637927b898116101385780637e8b80c3116101125780637e8b80c3146106c15780638da5cb5b146106d457806395d89b41146106f257600080fd5b80637927b8981461063a5780637ac3c02f1461065a5780637c9c94b01461067857600080fd5b8063715018a611610169578063715018a6146105ef578063756af45f14610604578063776439dd1461062457600080fd5b80636c19e783146105af57806370a08231146105cf57600080fd5b80633e65f4921161023d5780634fa97e61116101f1578063588f7ae2116101cb578063588f7ae2146105615780635c975abb146105775780636352211e1461058f57600080fd5b80634fa97e611461051957806351cff8d91461052c5780635600f04f1461054c57600080fd5b806340c10f191161022257806340c10f19146104b957806342842e0e146104d957806342966c68146104f957600080fd5b80633e65f4921461046e5780633fda3d5a146104a657600080fd5b80632380bcd211610294578063252498a211610279578063252498a21461041b5780632e8d65661461043b5780633cd559a41461044e57600080fd5b80632380bcd2146103d757806323b872dd146103fb57600080fd5b8063081812fc116102c5578063081812fc14610338578063095ea7b314610370578063150b7a021461039257600080fd5b806301ffc9a7146102e157806306fdde0314610316575b600080fd5b3480156102ed57600080fd5b506103016102fc366004613448565b610868565b60405190151581526020015b60405180910390f35b34801561032257600080fd5b5061032b610905565b60405161030d91906134bd565b34801561034457600080fd5b506103586103533660046134d0565b610997565b6040516001600160a01b03909116815260200161030d565b34801561037c57600080fd5b5061039061038b366004613509565b610a31565b005b34801561039e57600080fd5b506103be6103ad366004613535565b630a85bd0160e11b95945050505050565b6040516001600160e01b0319909116815260200161030d565b3480156103e357600080fd5b506103ed600e5481565b60405190815260200161030d565b34801561040757600080fd5b506103906104163660046135d4565b610b63565b34801561042757600080fd5b50610390610436366004613731565b610beb565b6103ed610449366004613a52565b610c5c565b34801561045a57600080fd5b50601254610358906001600160a01b031681565b34801561047a57600080fd5b506103ed610489366004613509565b601760209081526000928352604080842090915290825290205481565b6103016104b4366004613b23565b61100d565b3480156104c557600080fd5b506103ed6104d4366004613509565b6111a1565b3480156104e557600080fd5b506103906104f43660046135d4565b611278565b34801561050557600080fd5b506103906105143660046134d0565b611293565b610301610527366004613bfe565b61131a565b34801561053857600080fd5b50610390610547366004613bfe565b6113f9565b34801561055857600080fd5b5061032b611542565b34801561056d57600080fd5b506103ed600d5481565b34801561058357600080fd5b5060065460ff16610301565b34801561059b57600080fd5b506103586105aa3660046134d0565b6115d0565b3480156105bb57600080fd5b506103906105ca366004613bfe565b61165b565b3480156105db57600080fd5b506103ed6105ea366004613bfe565b6116d7565b3480156105fb57600080fd5b50610390611771565b34801561061057600080fd5b5061039061061f366004613bfe565b6117d7565b34801561063057600080fd5b506103ed60145481565b34801561064657600080fd5b50601354610358906001600160a01b031681565b34801561066657600080fd5b50600a546001600160a01b0316610358565b34801561068457600080fd5b50610301610693366004613c1b565b600c546001600160a01b03821660009081526017602090815260408083208684529091529020541492915050565b6103ed6106cf366004613a52565b6119c3565b3480156106e057600080fd5b506008546001600160a01b0316610358565b3480156106fe57600080fd5b5061032b611eff565b34801561071357600080fd5b50610390610722366004613c4b565b611f0e565b34801561073357600080fd5b50610301610742366004613bfe565b611fd3565b34801561075357600080fd5b50610390610762366004613c79565b6120f9565b34801561077357600080fd5b506103ed60155481565b34801561078957600080fd5b5061032b6107983660046134d0565b612187565b3480156107a957600080fd5b506103ed60165481565b3480156107bf57600080fd5b506103ed600f5481565b3480156107d557600080fd5b506103016107e4366004613ce5565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561081e57600080fd5b50601154610358906001600160a01b031681565b34801561083e57600080fd5b5061039061084d366004613bfe565b612192565b34801561085e57600080fd5b506103ed600c5481565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806108cb57506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806108ff57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461091490613d13565b80601f016020809104026020016040519081016040528092919081815260200182805461094090613d13565b801561098d5780601f106109625761010080835404028352916020019161098d565b820191906000526020600020905b81548152906001019060200180831161097057829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610a155760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610a3c826115d0565b9050806001600160a01b0316836001600160a01b03161415610ac65760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610a0c565b336001600160a01b0382161480610ae25750610ae281336107e4565b610b545760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610a0c565b610b5e8383612271565b505050565b610b6e335b826122df565b610be05760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610a0c565b610b5e8383836123d6565b6008546001600160a01b03163314610c455760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a0c565b8051610c58906009906020840190613363565b5050565b3360009081526019602052604081205460ff161515600114610cc05760405162461bcd60e51b815260206004820152601660248201527f6e6674206d7573742062652072656769737465726564000000000000000000006044820152606401610a0c565b6012546040516397554e8f60e01b81526001600160a01b03909116906397554e8f90610cfa908a908c9089908c908c908b90600401613ef7565b6020604051808303816000875af1158015610d19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3d9190613f66565b610d895760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610a0c565b60008060008088806020019051810190610da39190613fc8565b935093509350935083838383604051602001610dc29493929190614029565b604051602081830303815290604052805190602001208614610e265760405162461bcd60e51b815260206004820152600e60248201527f696e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610a0c565b816001600160a01b03168c6001600160a01b031614610e875760405162461bcd60e51b815260206004820152600e60248201527f696e76616c69642073656e6465720000000000000000000000000000000000006044820152606401610a0c565b6040516331a9108f60e11b815260048101859052339030908290636352211e90602401602060405180830381865afa158015610ec7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eeb9190614074565b6001600160a01b03161415610fc8576040517f095ea7b3000000000000000000000000000000000000000000000000000000008152336004820152602481018690526001600160a01b0382169063095ea7b390604401600060405180830381600087803b158015610f5b57600080fd5b505af1158015610f6f573d6000803e3d6000fd5b50505050847fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e8e604051610fb291906001600160a01b0391909116815260200190565b60405180910390a2600295505050505050611002565b610fd6601080546001019055565b6000610fe160105490565b9050610fed84826125ae565b610ff786866125c8565b600196505050505050505b979650505050505050565b6012546040516397554e8f60e01b81526000916001600160a01b0316906397554e8f90611048908a908d9089908c908c908b90600401613ef7565b6020604051808303816000875af1158015611067573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108b9190613f66565b6110d75760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610a0c565b600080868060200190518101906110ee9190614091565b9150915081816040516020016111059291906140e2565b6040516020818303038152906040528051906020012084146111695760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610a0c565b5050600e546001600160a01b038a1660009081526017602090815260408083208c845290915290205550600198975050505050505050565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c401610a0c565b610b5e838383604051806020016040528060008152506120f9565b61129c33610b68565b61130e5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f766564000000000000000000000000000000006064820152608401610a0c565b61131781612671565b50565b6001600160a01b03811660009081526019602052604081205460ff16156113835760405162461bcd60e51b815260206004820152601a60248201527f4e465420697320616c726561647920696e2072656769737472790000000000006044820152606401610a0c565b61138f600f543361267a565b6001600160a01b038216600081815260196020908152604091829020805460ff191660019081179091558251908152908101929092527fdb0987ab5727b17d3467eab6f86958c6b3204e475e5fbe5bac8bc796ac44939a91015b60405180910390a1506001919050565b6008546001600160a01b031633146114535760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a0c565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d80600081146114a2576040519150601f19603f3d011682016040523d82523d6000602084013e6114a7565b606091505b5091509150816114f95760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610a0c565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58460405161153491815260200190565b60405180910390a250505050565b6009805461154f90613d13565b80601f016020809104026020016040519081016040528092919081815260200182805461157b90613d13565b80156115c85780601f1061159d576101008083540402835291602001916115c8565b820191906000526020600020905b8154815290600101906020018083116115ab57829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806108ff5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610a0c565b6008546001600160a01b031633146116b55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a0c565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0382166117555760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610a0c565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b031633146117cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a0c565b6117d56000612847565b565b6008546001600160a01b031633146118315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a0c565b6011546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561187a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189e919061411a565b6011546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af115801561190c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119309190613f66565b61197c5760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c65640000000000000000000000006044820152606401610a0c565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516119b791815260200190565b60405180910390a25050565b3360009081526019602052604081205460ff161515600114611a275760405162461bcd60e51b815260206004820152601660248201527f6e6674206d7573742062652072656769737465726564000000000000000000006044820152606401610a0c565b6012546040516397554e8f60e01b81526001600160a01b03909116906397554e8f90611a61908a908c9089908c908c908b90600401613ef7565b6020604051808303816000875af1158015611a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa49190613f66565b611af05760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610a0c565b60008086806020019051810190611b079190614133565b60408051602081018490529081018290529193509150606001604051602081830303815290604052805190602001208414611b845760405162461bcd60e51b815260206004820152600e60248201527f696e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610a0c565b6040516331a9108f60e11b81526004810183905233908190636352211e90602401602060405180830381865afa158015611bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be69190614074565b6001600160a01b03168b6001600160a01b031614611c465760405162461bcd60e51b815260206004820152600d60248201527f696e76616c6964206f776e6572000000000000000000000000000000000000006044820152606401610a0c565b6040516331a9108f60e11b8152600481018490526001600160a01b03808d169190831690636352211e90602401602060405180830381865afa158015611c90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb49190614074565b6001600160a01b03161415611e87576040517f081812fc0000000000000000000000000000000000000000000000000000000081526004810184905230906001600160a01b0383169063081812fc90602401602060405180830381865afa158015611d23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d479190614074565b6001600160a01b031614611dc35760405162461bcd60e51b815260206004820152602c60248201527f57584456206e6565647320746f20626520617070726f76656420666f72206c6f60448201527f636b206f7065726174696f6e00000000000000000000000000000000000000006064820152608401610a0c565b6040517f42842e0e0000000000000000000000000000000000000000000000000000000081526001600160a01b038c81166004830152306024830152604482018590528216906342842e0e90606401600060405180830381600087803b158015611e2c57600080fd5b505af1158015611e40573d6000803e3d6000fd5b50506040516001600160a01b038e1681528592507f9f1ec8c880f76798e7b793325d625e9b60e4082a553c98f42b6cda368dd60008915060200160405180910390a2611ef0565b30611e91846115d0565b6001600160a01b031614611ee75760405162461bcd60e51b815260206004820152601660248201527f4973206e6f742061207772617070656420746f6b656e000000000000000000006044820152606401610a0c565b611ef083612671565b50909998505050505050505050565b60606001805461091490613d13565b6001600160a01b038216331415611f675760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610a0c565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546000906001600160a01b031633146120305760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a0c565b6001600160a01b03821660009081526019602052604090205460ff16151560011461209d5760405162461bcd60e51b815260206004820152601360248201527f6d697373696e67206e66742061646472657373000000000000000000000000006044820152606401610a0c565b6001600160a01b0382166000818152601960209081526040808320805460ff191690558051928352908201929092527fdb0987ab5727b17d3467eab6f86958c6b3204e475e5fbe5bac8bc796ac44939a91016113e9565b919050565b61210333836122df565b6121755760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610a0c565b61218184848484612899565b50505050565b60606108ff82612917565b6008546001600160a01b031633146121ec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a0c565b6001600160a01b0381166122685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610a0c565b61131781612847565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906122a6826115d0565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166123585760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610a0c565b6000612363836115d0565b9050806001600160a01b0316846001600160a01b0316148061239e5750836001600160a01b031661239384610997565b6001600160a01b0316145b806123ce57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166123e9826115d0565b6001600160a01b0316146124655760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610a0c565b6001600160a01b0382166124e05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610a0c565b6124eb838383612aa2565b6124f6600082612271565b6001600160a01b038316600090815260036020526040812080546001929061251f90849061416d565b90915550506001600160a01b038216600090815260036020526040812080546001929061254d908490614184565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610c58828260405180602001604052806000815250612b8c565b6000828152600260205260409020546001600160a01b03166126525760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610a0c565b60008281526007602090815260409091208251610b5e92840190613363565b61131781612c0a565b6011546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156126c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126e7919061411a565b116127345760405162461bcd60e51b815260206004820152601160248201527f6e6f20656e6f7567682062616c616e63650000000000000000000000000000006044820152606401610a0c565b600f54821415610c58576011546014546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af115801561279a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127be9190613f66565b61280a5760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572206661696c656420666f7220726563697069656e740000006044820152606401610a0c565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b36014546040516119b791815260200190565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6128a48484846123d6565b6128b084848484612c4a565b6121815760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610a0c565b6000818152600260205260409020546060906001600160a01b03166129a45760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610a0c565b600082815260076020526040812080546129bd90613d13565b80601f01602080910402602001604051908101604052809291908181526020018280546129e990613d13565b8015612a365780601f10612a0b57610100808354040283529160200191612a36565b820191906000526020600020905b815481529060010190602001808311612a1957829003601f168201915b505050505090506000612a5460408051602081019091526000815290565b9050805160001415612a67575092915050565b815115612a99578082604051602001612a8192919061419c565b60405160208183030381529060405292505050919050565b6123ce84612d93565b60065460ff1615612af55760405162461bcd60e51b815260206004820152601e60248201527f5844563a20546f6b656e20657865637574696f6e2069732070617573656400006044820152606401610a0c565b600c546001600160a01b03841660009081526017602090815260408083208584529091529020541415612b6a5760405162461bcd60e51b815260206004820152601960248201527f5844563a205468697320746f6b656e206973206c6f636b6564000000000000006044820152606401610a0c565b6001600160a01b038316612b8157612b8133612e89565b610b5e838383612fc3565b612b96838361303c565b612ba36000848484612c4a565b610b5e5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610a0c565b612c138161318a565b60008181526007602052604090208054612c2c90613d13565b159050611317576000818152600760205260408120611317916133e7565b60006001600160a01b0384163b15612d8857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612c8e9033908990889088906004016141cb565b6020604051808303816000875af1925050508015612cc9575060408051601f3d908101601f19168201909252612cc691810190614207565b60015b612d6e573d808015612cf7576040519150601f19603f3d011682016040523d82523d6000602084013e612cfc565b606091505b508051612d665760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610a0c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506123ce565b506001949350505050565b6000818152600260205260409020546060906001600160a01b0316612e205760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610a0c565b6000612e3760408051602081019091526000815290565b90506000815111612e575760405180602001604052806000815250612e82565b80612e6184613231565b604051602001612e7292919061419c565b6040516020818303038152906040525b9392505050565b6011546016546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af1158015612ee5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f099190613f66565b612f7b5760405162461bcd60e51b815260206004820152602260248201527f5844563a205472616e73666572206661696c656420666f72207265636970696560448201527f6e740000000000000000000000000000000000000000000000000000000000006064820152608401610a0c565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b3601654604051612fb891815260200190565b60405180910390a250565b60065460ff1615610b5e5760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201527f68696c65207061757365640000000000000000000000000000000000000000006064820152608401610a0c565b6001600160a01b0382166130925760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610a0c565b6000818152600260205260409020546001600160a01b0316156130f75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610a0c565b61310360008383612aa2565b6001600160a01b038216600090815260036020526040812080546001929061312c908490614184565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000613195826115d0565b90506131a381600084612aa2565b6131ae600083612271565b6001600160a01b03811660009081526003602052604081208054600192906131d790849061416d565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60608161327157505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561329b578061328581614224565b91506132949050600a83614255565b9150613275565b60008167ffffffffffffffff8111156132b6576132b6613615565b6040519080825280601f01601f1916602001820160405280156132e0576020820181803683370190505b5090505b84156123ce576132f560018361416d565b9150613302600a86614269565b61330d906030614184565b60f81b8183815181106133225761332261427d565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061335c600a86614255565b94506132e4565b82805461336f90613d13565b90600052602060002090601f01602090048101928261339157600085556133d7565b82601f106133aa57805160ff19168380011785556133d7565b828001600101855582156133d7579182015b828111156133d75782518255916020019190600101906133bc565b506133e392915061341d565b5090565b5080546133f390613d13565b6000825580601f10613403575050565b601f01602090049060005260206000209081019061131791905b5b808211156133e3576000815560010161341e565b6001600160e01b03198116811461131757600080fd5b60006020828403121561345a57600080fd5b8135612e8281613432565b60005b83811015613480578181015183820152602001613468565b838111156121815750506000910152565b600081518084526134a9816020860160208601613465565b601f01601f19169290920160200192915050565b602081526000612e826020830184613491565b6000602082840312156134e257600080fd5b5035919050565b6001600160a01b038116811461131757600080fd5b80356120f4816134e9565b6000806040838503121561351c57600080fd5b8235613527816134e9565b946020939093013593505050565b60008060008060006080868803121561354d57600080fd5b8535613558816134e9565b94506020860135613568816134e9565b935060408601359250606086013567ffffffffffffffff8082111561358c57600080fd5b818801915088601f8301126135a057600080fd5b8135818111156135af57600080fd5b8960208285010111156135c157600080fd5b9699959850939650602001949392505050565b6000806000606084860312156135e957600080fd5b83356135f4816134e9565b92506020840135613604816134e9565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561364e5761364e613615565b60405290565b6040516080810167ffffffffffffffff8111828210171561364e5761364e613615565b60405160a0810167ffffffffffffffff8111828210171561364e5761364e613615565b604051601f8201601f1916810167ffffffffffffffff811182821017156136c3576136c3613615565b604052919050565b600067ffffffffffffffff8211156136e5576136e5613615565b50601f01601f191660200190565b6000613706613701846136cb565b61369a565b905082815283838301111561371a57600080fd5b828260208301376000602084830101529392505050565b60006020828403121561374357600080fd5b813567ffffffffffffffff81111561375a57600080fd5b8201601f8101841361376b57600080fd5b6123ce848235602084016136f3565b600082601f83011261378b57600080fd5b612e82838335602085016136f3565b801515811461131757600080fd5b80356120f48161379a565b8035600681106120f457600080fd5b600060c082840312156137d457600080fd5b6137dc61362b565b905081356137e98161379a565b81526137f7602083016137b3565b6020820152613808604083016137b3565b6040820152613819606083016137b3565b606082015260808201356009811061383057600080fd5b608082015260a082013567ffffffffffffffff81111561384f57600080fd5b61385b8482850161377a565b60a08301525092915050565b600082601f83011261387857600080fd5b8135602067ffffffffffffffff8083111561389557613895613615565b8260051b6138a483820161369a565b93845285810183019383810190888611156138be57600080fd5b84880192505b8583101561397c578235848111156138dc5760008081fd5b88016080818b03601f19018113156138f45760008081fd5b6138fc613654565b878301356139098161379a565b815260406139188482016137b3565b89830152606080850135898111156139305760008081fd5b61393e8f8c8389010161377a565b848401525092840135928884111561395857600091508182fd5b6139668e8b8688010161377a565b90830152508452505091840191908401906138c4565b98975050505050505050565b600060a0828403121561399a57600080fd5b6139a2613677565b90506139ad826137a8565b8152602082013567ffffffffffffffff808211156139ca57600080fd5b6139d68583860161377a565b602084015260408401359150808211156139ef57600080fd5b6139fb8583860161377a565b60408401526060840135915080821115613a1457600080fd5b613a20858386016137c2565b60608401526080840135915080821115613a3957600080fd5b50613a4684828501613867565b60808301525092915050565b600080600080600080600060e0888a031215613a6d57600080fd5b613a76886134fe565b965060208801359550604088013567ffffffffffffffff80821115613a9a57600080fd5b613aa68b838c0161377a565b965060608a0135915080821115613abc57600080fd5b613ac88b838c0161377a565b955060808a0135915080821115613ade57600080fd5b613aea8b838c01613988565b945060a08a0135915080821115613b0057600080fd5b50613b0d8a828b01613988565b92505060c0880135905092959891949750929550565b600080600080600080600080610100898b031215613b4057600080fd5b613b49896134fe565b97506020890135965060408901359550606089013567ffffffffffffffff80821115613b7457600080fd5b613b808c838d0161377a565b965060808b0135915080821115613b9657600080fd5b613ba28c838d0161377a565b955060a08b0135915080821115613bb857600080fd5b613bc48c838d01613988565b945060c08b0135915080821115613bda57600080fd5b50613be78b828c01613988565b92505060e089013590509295985092959890939650565b600060208284031215613c1057600080fd5b8135612e82816134e9565b60008060408385031215613c2e57600080fd5b823591506020830135613c40816134e9565b809150509250929050565b60008060408385031215613c5e57600080fd5b8235613c69816134e9565b91506020830135613c408161379a565b60008060008060808587031215613c8f57600080fd5b8435613c9a816134e9565b93506020850135613caa816134e9565b925060408501359150606085013567ffffffffffffffff811115613ccd57600080fd5b613cd98782880161377a565b91505092959194509250565b60008060408385031215613cf857600080fd5b8235613d03816134e9565b91506020830135613c40816134e9565b600181811c90821680613d2757607f821691505b60208210811415613d4857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60068110613d7457613d74613d4e565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015613e075782840389528151608081511515865286820151613dbd88880182613d64565b506040808301518282890152613dd583890182613491565b9250505060608083015192508682038188015250613df38183613491565b9a87019a9550505090840190600101613d96565b5091979650505050505050565b8051151582526000602082015160a06020850152613e3560a0850182613491565b905060408301518482036040860152613e4e8282613491565b915050606083015184820360608601528051151582526020810151613e766020840182613d64565b506040810151613e896040840182613d64565b506060810151613e9c6060840182613d64565b50608081015160098110613eb257613eb2613d4e565b8060808401525060a0810151905060c060a0830152613ed460c0830182613491565b91505060808301518482036080860152613eee8282613d78565b95945050505050565b8681526001600160a01b038616602082015260c060408201526000613f1f60c0830187613e14565b8281036060840152613f318187613491565b90508281036080840152613f458186613491565b905082810360a0840152613f598185613e14565b9998505050505050505050565b600060208284031215613f7857600080fd5b8151612e828161379a565b600082601f830112613f9457600080fd5b8151613fa2613701826136cb565b818152846020838601011115613fb757600080fd5b6123ce826020830160208701613465565b60008060008060808587031215613fde57600080fd5b84519350602085015167ffffffffffffffff811115613ffc57600080fd5b61400887828801613f83565b9350506040850151614019816134e9565b6060959095015193969295505050565b84815260008451614041816020850160208901613465565b80830190506bffffffffffffffffffffffff198560601b1660208201528360348201526054810191505095945050505050565b60006020828403121561408657600080fd5b8151612e82816134e9565b600080604083850312156140a457600080fd5b82516140af816134e9565b602084015190925067ffffffffffffffff8111156140cc57600080fd5b6140d885828601613f83565b9150509250929050565b6bffffffffffffffffffffffff198360601b1681526000825161410c816014850160208701613465565b919091016014019392505050565b60006020828403121561412c57600080fd5b5051919050565b6000806040838503121561414657600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b60008282101561417f5761417f614157565b500390565b6000821982111561419757614197614157565b500190565b600083516141ae818460208801613465565b8351908301906141c2818360208801613465565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526141fd6080830184613491565b9695505050505050565b60006020828403121561421957600080fd5b8151612e8281613432565b600060001982141561423857614238614157565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826142645761426461423f565b500490565b6000826142785761427861423f565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212201e078d0078a2b2bac48f7923874fdbacf8919cbda1c3e6000c5c699e913f8cfe64736f6c634300080b0033";

type WXDVConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WXDVConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WXDV__factory extends ContractFactory {
  constructor(...args: WXDVConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WXDV> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      chain,
      overrides || {}
    ) as Promise<WXDV>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      chain,
      overrides || {}
    );
  }
  attach(address: string): WXDV {
    return super.attach(address) as WXDV;
  }
  connect(signer: Signer): WXDV__factory {
    return super.connect(signer) as WXDV__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WXDVInterface {
    return new utils.Interface(_abi) as WXDVInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WXDV {
    return new Contract(address, _abi, signerOrProvider) as WXDV;
  }
}
