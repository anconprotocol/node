/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WXDV, WXDVInterface } from "../WXDV";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "anconprotocolAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enrolledStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "NFTaddress",
        type: "address",
      },
    ],
    name: "NFTEnrolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "ENROLL_NFT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "NFTRegistrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_AVAILABLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_BURNED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_LOCKED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dagContractOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeForContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "serviceFeeForPaymentAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenLockStorage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForPaymentAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newItemId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTaddress",
        type: "address",
      },
    ],
    name: "enrollNFT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTaddress",
        type: "address",
      },
    ],
    name: "deactivateNFT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "lockWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "releaseWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "islocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527faba593141db1021cb8de7f38506a824487c2f2e5758168a6568eb7d6a8dd3173600c557f35e808e423fc257ba1bb61b1c2c57e48855b39cbee1f101ebe4fcb026f39e2e0600d557f1a7568e05cd9c1f5b58509adc78e175b2c29ad54d925ee42a8b45d9d39b1081b600e557f7a8231155142074ef50e8525dbfd6360a054cf41867e36de3c2aa1546d1cf8e9600f556000601455600060155560006016556000601855348015620000b557600080fd5b5060405162004af538038062004af5833981016040819052620000d8916200033d565b845185908590620000f1906000906020850190620001ad565b50805162000107906001906020840190620001ad565b50506006805460ff19169055506200011f336200015b565b601180546001600160a01b039485166001600160a01b031991821617909155601280549390941692169190911790915560185550620004139050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001bb90620003d6565b90600052602060002090601f016020900481019282620001df57600085556200022a565b82601f10620001fa57805160ff19168380011785556200022a565b828001600101855582156200022a579182015b828111156200022a5782518255916020019190600101906200020d565b50620002389291506200023c565b5090565b5b808211156200023857600081556001016200023d565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200027b57600080fd5b81516001600160401b038082111562000298576200029862000253565b604051601f8301601f19908116603f01168101908282118183101715620002c357620002c362000253565b81604052838152602092508683858801011115620002e057600080fd5b600091505b83821015620003045785820183015181830184015290820190620002e5565b83821115620003165760008385830101525b9695505050505050565b80516001600160a01b03811681146200033857600080fd5b919050565b600080600080600060a086880312156200035657600080fd5b85516001600160401b03808211156200036e57600080fd5b6200037c89838a0162000269565b965060208801519150808211156200039357600080fd5b50620003a28882890162000269565b945050620003b36040870162000320565b9250620003c36060870162000320565b9150608086015190509295509295909350565b600181811c90821680620003eb57607f821691505b602082108114156200040d57634e487b7160e01b600052602260045260246000fd5b50919050565b6146d280620004236000396000f3fe6080604052600436106102f25760003560e01c806370a082311161018f578063a22cb465116100e1578063e53ae1021161008a578063e9cbd82211610064578063e9cbd82214610868578063f2fde38b14610888578063fd632d51146108a857600080fd5b8063e53ae102146107f3578063e7b04b8614610809578063e985e9c51461081f57600080fd5b8063b88d4fde116100bb578063b88d4fde1461079d578063c014b9da146107bd578063c87b56dd146107d357600080fd5b8063a22cb4651461073d578063b20f84831461075d578063b86be2ca1461077d57600080fd5b80637ac3c02f116101435780638da5cb5b1161011d5780638da5cb5b146106f757806395d89b41146107155780639ed1156f1461072a57600080fd5b80637ac3c02f1461067d5780637c9c94b01461069b5780637e8b80c3146106e457600080fd5b8063756af45f11610174578063756af45f14610627578063776439dd146106475780637927b8981461065d57600080fd5b806370a08231146105f2578063715018a61461061257600080fd5b80633e65f4921161024857806351cff8d9116101fc5780635c975abb116101d65780635c975abb1461059a5780636352211e146105b25780636c19e783146105d257600080fd5b806351cff8d91461054f5780635600f04f1461056f578063588f7ae21461058457600080fd5b806342842e0e1161022d57806342842e0e146104fc57806342966c681461051c5780634fa97e611461053c57600080fd5b80633e65f492146104a457806340c10f19146104dc57600080fd5b80632380bcd2116102aa5780632c078e8d116102845780632c078e8d146104515780632e8d6566146104715780633cd559a41461048457600080fd5b80632380bcd2146103ed57806323b872dd14610411578063252498a21461043157600080fd5b8063081812fc116102db578063081812fc1461034e578063095ea7b314610386578063150b7a02146103a857600080fd5b806301ffc9a7146102f757806306fdde031461032c575b600080fd5b34801561030357600080fd5b50610317610312366004613851565b6108be565b60405190151581526020015b60405180910390f35b34801561033857600080fd5b5061034161095b565b60405161032391906138c6565b34801561035a57600080fd5b5061036e6103693660046138d9565b6109ed565b6040516001600160a01b039091168152602001610323565b34801561039257600080fd5b506103a66103a1366004613912565b610a87565b005b3480156103b457600080fd5b506103d46103c336600461393e565b630a85bd0160e11b95945050505050565b6040516001600160e01b03199091168152602001610323565b3480156103f957600080fd5b50610403600e5481565b604051908152602001610323565b34801561041d57600080fd5b506103a661042c3660046139dd565b610bb9565b34801561043d57600080fd5b506103a661044c366004613b3a565b610c41565b34801561045d57600080fd5b506103a661046c3660046138d9565b610cb2565b61040361047f366004613e5b565b610d11565b34801561049057600080fd5b5060125461036e906001600160a01b031681565b3480156104b057600080fd5b506104036104bf366004613912565b601760209081526000928352604080842090915290825290205481565b3480156104e857600080fd5b506104036104f7366004613912565b6111ab565b34801561050857600080fd5b506103a66105173660046139dd565b611282565b34801561052857600080fd5b506103a66105373660046138d9565b61129d565b61031761054a366004613f2c565b611324565b34801561055b57600080fd5b506103a661056a366004613f2c565b611403565b34801561057b57600080fd5b5061034161154c565b34801561059057600080fd5b50610403600d5481565b3480156105a657600080fd5b5060065460ff16610317565b3480156105be57600080fd5b5061036e6105cd3660046138d9565b6115da565b3480156105de57600080fd5b506103a66105ed366004613f2c565b611665565b3480156105fe57600080fd5b5061040361060d366004613f2c565b6116e1565b34801561061e57600080fd5b506103a661177b565b34801561063357600080fd5b506103a6610642366004613f2c565b6117e1565b34801561065357600080fd5b5061040360145481565b34801561066957600080fd5b5060135461036e906001600160a01b031681565b34801561068957600080fd5b50600a546001600160a01b031661036e565b3480156106a757600080fd5b506103176106b6366004613f49565b600c546001600160a01b03821660009081526017602090815260408083208684529091529020541492915050565b6104036106f2366004613e5b565b6119cd565b34801561070357600080fd5b506008546001600160a01b031661036e565b34801561072157600080fd5b50610341611ff3565b610317610738366004613f79565b612002565b34801561074957600080fd5b506103a6610758366004614054565b61218d565b34801561076957600080fd5b50610317610778366004613f2c565b612252565b34801561078957600080fd5b506103a66107983660046138d9565b612378565b3480156107a957600080fd5b506103a66107b8366004614082565b6123d7565b3480156107c957600080fd5b5061040360155481565b3480156107df57600080fd5b506103416107ee3660046138d9565b612465565b3480156107ff57600080fd5b5061040360165481565b34801561081557600080fd5b50610403600f5481565b34801561082b57600080fd5b5061031761083a3660046140ee565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561087457600080fd5b5060115461036e906001600160a01b031681565b34801561089457600080fd5b506103a66108a3366004613f2c565b612470565b3480156108b457600080fd5b50610403600c5481565b60006001600160e01b031982167f80ac58cd00000000000000000000000000000000000000000000000000000000148061092157506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061095557507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461096a9061411c565b80601f01602080910402602001604051908101604052809291908181526020018280546109969061411c565b80156109e35780601f106109b8576101008083540402835291602001916109e3565b820191906000526020600020905b8154815290600101906020018083116109c657829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610a6b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610a92826115da565b9050806001600160a01b0316836001600160a01b03161415610b1c5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610a62565b336001600160a01b0382161480610b385750610b38813361083a565b610baa5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610a62565b610bb4838361254f565b505050565b610bc4335b826125bd565b610c365760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610a62565b610bb48383836126b4565b6008546001600160a01b03163314610c9b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a62565b8051610cae90600990602084019061376c565b5050565b6008546001600160a01b03163314610d0c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a62565b601655565b3360009081526019602052604081205460ff161515600114610d755760405162461bcd60e51b815260206004820152601660248201527f6e6674206d7573742062652072656769737465726564000000000000000000006044820152606401610a62565b6012546040516397554e8f60e01b81526001600160a01b03909116906397554e8f90610daf908a908c9089908c908c908b90600401614300565b6020604051808303816000875af1158015610dce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df2919061436f565b610e3e5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610a62565b60008060008088806020019051810190610e5891906143d1565b935093509350935083838383604051602001610e779493929190614432565b604051602081830303815290604052805190602001208614610edb5760405162461bcd60e51b815260206004820152600e60248201527f696e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610a62565b816001600160a01b03168c6001600160a01b031614610f3c5760405162461bcd60e51b815260206004820152600e60248201527f696e76616c69642073656e6465720000000000000000000000000000000000006044820152606401610a62565b600c543360008181526017602090815260408083208984529091529020549091148015610fdd57506040516331a9108f60e11b8152600481018690526001600160a01b03808f169190831690636352211e90602401602060405180830381865afa158015610fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd2919061447d565b6001600160a01b0316145b1561108e57610fec338661288c565b604051632142170760e11b81523060048201526001600160a01b038481166024830152604482018790528216906342842e0e90606401600060405180830381600087803b15801561103c57600080fd5b505af1158015611050573d6000803e3d6000fd5b50506040513381528792507fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e915060200160405180910390a261119a565b6040516331a9108f60e11b8152600481018690526001600160a01b03808f169190831690636352211e90602401602060405180830381865afa1580156110d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fc919061447d565b6001600160a01b031614801561112e5750600c5433600090815260176020908152604080832089845290915290205414155b156111695760405162461bcd60e51b815260206004820152600b60248201526a155b9cdd5c1c1bdc9d195960aa1b6044820152606401610a62565b611177601080546001019055565b600061118260105490565b905061118e848261291a565b6111988686612934565b505b50929b9a5050505050505050505050565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c401610a62565b610bb4838383604051806020016040528060008152506123d7565b6112a633610bbe565b6113185760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f766564000000000000000000000000000000006064820152608401610a62565b611321816129dd565b50565b6001600160a01b03811660009081526019602052604081205460ff161561138d5760405162461bcd60e51b815260206004820152601a60248201527f4e465420697320616c726561647920696e2072656769737472790000000000006044820152606401610a62565b611399600f54336129e6565b6001600160a01b038216600081815260196020908152604091829020805460ff191660019081179091558251908152908101929092527fdb0987ab5727b17d3467eab6f86958c6b3204e475e5fbe5bac8bc796ac44939a91015b60405180910390a1506001919050565b6008546001600160a01b0316331461145d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a62565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d80600081146114ac576040519150601f19603f3d011682016040523d82523d6000602084013e6114b1565b606091505b5091509150816115035760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610a62565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58460405161153e91815260200190565b60405180910390a250505050565b600980546115599061411c565b80601f01602080910402602001604051908101604052809291908181526020018280546115859061411c565b80156115d25780601f106115a7576101008083540402835291602001916115d2565b820191906000526020600020905b8154815290600101906020018083116115b557829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806109555760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610a62565b6008546001600160a01b031633146116bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a62565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b03821661175f5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610a62565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b031633146117d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a62565b6117df6000612bb3565b565b6008546001600160a01b0316331461183b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a62565b6011546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611884573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118a8919061449a565b6011546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015611916573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061193a919061436f565b6119865760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c65640000000000000000000000006044820152606401610a62565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040516119c191815260200190565b60405180910390a25050565b3360009081526019602052604081205460ff161515600114611a315760405162461bcd60e51b815260206004820152601660248201527f6e6674206d7573742062652072656769737465726564000000000000000000006044820152606401610a62565b6012546040516397554e8f60e01b81526001600160a01b03909116906397554e8f90611a6b908a908c9089908c908c908b90600401614300565b6020604051808303816000875af1158015611a8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aae919061436f565b611afa5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610a62565b60008086806020019051810190611b1191906144b3565b60408051602081018490529081018290529193509150606001604051602081830303815290604052805190602001208414611b8e5760405162461bcd60e51b815260206004820152600e60248201527f696e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610a62565b6040516331a9108f60e11b81526004810183905233908190636352211e90602401602060405180830381865afa158015611bcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bf0919061447d565b6001600160a01b03168b6001600160a01b031614611c505760405162461bcd60e51b815260206004820152600d60248201527f696e76616c6964206f776e6572000000000000000000000000000000000000006044820152606401610a62565b600c54336000908152601760209081526040808320878452909152902054148015611cef57506040516331a9108f60e11b8152600481018490526001600160a01b03808d169190831690636352211e90602401602060405180830381865afa158015611cc0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce4919061447d565b6001600160a01b0316145b15611d2a5760405162461bcd60e51b815260206004820152600b60248201526a155b9cdd5c1c1bdc9d195960aa1b6044820152606401610a62565b6040516331a9108f60e11b8152600481018490526001600160a01b03808d169190831690636352211e90602401602060405180830381865afa158015611d74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d98919061447d565b6001600160a01b0316148015611dca5750600c5433600090815260176020908152604080832087845290915290205414155b15611f7b576040517f081812fc0000000000000000000000000000000000000000000000000000000081526004810184905230906001600160a01b0383169063081812fc90602401602060405180830381865afa158015611e2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e53919061447d565b6001600160a01b031614611ecf5760405162461bcd60e51b815260206004820152602c60248201527f57584456206e6565647320746f20626520617070726f76656420666f72206c6f60448201527f636b206f7065726174696f6e00000000000000000000000000000000000000006064820152608401610a62565b604051632142170760e11b81526001600160a01b038c81166004830152306024830152604482018590528216906342842e0e90606401600060405180830381600087803b158015611f1f57600080fd5b505af1158015611f33573d6000803e3d6000fd5b50505050611f413384612c05565b60405133815283907f9f1ec8c880f76798e7b793325d625e9b60e4082a553c98f42b6cda368dd600089060200160405180910390a2611fe4565b30611f85846115da565b6001600160a01b031614611fdb5760405162461bcd60e51b815260206004820152601660248201527f4973206e6f742061207772617070656420746f6b656e000000000000000000006044820152606401610a62565b611fe4836129dd565b50909998505050505050505050565b60606001805461096a9061411c565b6012546040516397554e8f60e01b81526000916001600160a01b0316906397554e8f9061203d908a908d9089908c908c908b90600401614300565b6020604051808303816000875af115801561205c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612080919061436f565b6120cc5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610a62565b600080868060200190518101906120e391906144d7565b9150915081816040516020016120fa929190614528565b60405160208183030381529060405280519060200120841461215e5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610a62565b5050600e543360009081526017602090815260408083208c845290915290205550600198975050505050505050565b6001600160a01b0382163314156121e65760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610a62565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546000906001600160a01b031633146122af5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a62565b6001600160a01b03821660009081526019602052604090205460ff16151560011461231c5760405162461bcd60e51b815260206004820152601360248201527f6d697373696e67206e66742061646472657373000000000000000000000000006044820152606401610a62565b6001600160a01b0382166000818152601960209081526040808320805460ff191690558051928352908201929092527fdb0987ab5727b17d3467eab6f86958c6b3204e475e5fbe5bac8bc796ac44939a91016113f3565b919050565b6008546001600160a01b031633146123d25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a62565b601555565b6123e133836125bd565b6124535760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610a62565b61245f84848484612ca2565b50505050565b606061095582612d20565b6008546001600160a01b031633146124ca5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a62565b6001600160a01b0381166125465760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610a62565b61132181612bb3565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190612584826115da565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166126365760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610a62565b6000612641836115da565b9050806001600160a01b0316846001600160a01b0316148061267c5750836001600160a01b0316612671846109ed565b6001600160a01b0316145b806126ac57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166126c7826115da565b6001600160a01b0316146127435760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610a62565b6001600160a01b0382166127be5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610a62565b6127c9838383612eab565b6127d460008261254f565b6001600160a01b03831660009081526003602052604081208054600192906127fd908490614576565b90915550506001600160a01b038216600090815260036020526040812080546001929061282b90849061458d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600c54336000908152601760209081526040808320858452909152902054146128f75760405162461bcd60e51b815260206004820152601960248201527f546f6b656e20697320616c726561647920756e6c6f636b6564000000000000006044820152606401610a62565b600e54336000908152601760209081526040808320948352939052919091205550565b610cae828260405180602001604052806000815250612f95565b6000828152600260205260409020546001600160a01b03166129be5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610a62565b60008281526007602090815260409091208251610bb49284019061376c565b61132181613013565b6011546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015612a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a53919061449a565b11612aa05760405162461bcd60e51b815260206004820152601160248201527f6e6f20656e6f7567682062616c616e63650000000000000000000000000000006044820152606401610a62565b600f54821415610cae576011546014546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af1158015612b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b2a919061436f565b612b765760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572206661696c656420666f7220726563697069656e740000006044820152606401610a62565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b36014546040516119c191815260200190565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600e546001600160a01b038316600090815260176020908152604080832085845290915290205414612c795760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20697320616c7265616479206c6f636b65640000000000000000006044820152606401610a62565b600c546001600160a01b0390921660009081526017602090815260408083209383529290522055565b612cad8484846126b4565b612cb984848484613053565b61245f5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610a62565b6000818152600260205260409020546060906001600160a01b0316612dad5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610a62565b60008281526007602052604081208054612dc69061411c565b80601f0160208091040260200160405190810160405280929190818152602001828054612df29061411c565b8015612e3f5780601f10612e1457610100808354040283529160200191612e3f565b820191906000526020600020905b815481529060010190602001808311612e2257829003601f168201915b505050505090506000612e5d60408051602081019091526000815290565b9050805160001415612e70575092915050565b815115612ea2578082604051602001612e8a9291906145a5565b60405160208183030381529060405292505050919050565b6126ac8461319c565b60065460ff1615612efe5760405162461bcd60e51b815260206004820152601e60248201527f5844563a20546f6b656e20657865637574696f6e2069732070617573656400006044820152606401610a62565b600c546001600160a01b03841660009081526017602090815260408083208584529091529020541415612f735760405162461bcd60e51b815260206004820152601960248201527f5844563a205468697320746f6b656e206973206c6f636b6564000000000000006044820152606401610a62565b6001600160a01b038316612f8a57612f8a33613292565b610bb48383836133cc565b612f9f8383613445565b612fac6000848484613053565b610bb45760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610a62565b61301c81613593565b600081815260076020526040902080546130359061411c565b159050611321576000818152600760205260408120611321916137f0565b60006001600160a01b0384163b1561319157604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906130979033908990889088906004016145d4565b6020604051808303816000875af19250505080156130d2575060408051601f3d908101601f191682019092526130cf91810190614610565b60015b613177573d808015613100576040519150601f19603f3d011682016040523d82523d6000602084013e613105565b606091505b50805161316f5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610a62565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506126ac565b506001949350505050565b6000818152600260205260409020546060906001600160a01b03166132295760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610a62565b600061324060408051602081019091526000815290565b90506000815111613260576040518060200160405280600081525061328b565b8061326a8461363a565b60405160200161327b9291906145a5565b6040516020818303038152906040525b9392505050565b6011546016546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af11580156132ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613312919061436f565b6133845760405162461bcd60e51b815260206004820152602260248201527f5844563a205472616e73666572206661696c656420666f72207265636970696560448201527f6e740000000000000000000000000000000000000000000000000000000000006064820152608401610a62565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b36016546040516133c191815260200190565b60405180910390a250565b60065460ff1615610bb45760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201527f68696c65207061757365640000000000000000000000000000000000000000006064820152608401610a62565b6001600160a01b03821661349b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610a62565b6000818152600260205260409020546001600160a01b0316156135005760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610a62565b61350c60008383612eab565b6001600160a01b038216600090815260036020526040812080546001929061353590849061458d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600061359e826115da565b90506135ac81600084612eab565b6135b760008361254f565b6001600160a01b03811660009081526003602052604081208054600192906135e0908490614576565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60608161367a57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156136a4578061368e8161462d565b915061369d9050600a8361465e565b915061367e565b60008167ffffffffffffffff8111156136bf576136bf613a1e565b6040519080825280601f01601f1916602001820160405280156136e9576020820181803683370190505b5090505b84156126ac576136fe600183614576565b915061370b600a86614672565b61371690603061458d565b60f81b81838151811061372b5761372b614686565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613765600a8661465e565b94506136ed565b8280546137789061411c565b90600052602060002090601f01602090048101928261379a57600085556137e0565b82601f106137b357805160ff19168380011785556137e0565b828001600101855582156137e0579182015b828111156137e05782518255916020019190600101906137c5565b506137ec929150613826565b5090565b5080546137fc9061411c565b6000825580601f1061380c575050565b601f01602090049060005260206000209081019061132191905b5b808211156137ec5760008155600101613827565b6001600160e01b03198116811461132157600080fd5b60006020828403121561386357600080fd5b813561328b8161383b565b60005b83811015613889578181015183820152602001613871565b8381111561245f5750506000910152565b600081518084526138b281602086016020860161386e565b601f01601f19169290920160200192915050565b60208152600061328b602083018461389a565b6000602082840312156138eb57600080fd5b5035919050565b6001600160a01b038116811461132157600080fd5b8035612373816138f2565b6000806040838503121561392557600080fd5b8235613930816138f2565b946020939093013593505050565b60008060008060006080868803121561395657600080fd5b8535613961816138f2565b94506020860135613971816138f2565b935060408601359250606086013567ffffffffffffffff8082111561399557600080fd5b818801915088601f8301126139a957600080fd5b8135818111156139b857600080fd5b8960208285010111156139ca57600080fd5b9699959850939650602001949392505050565b6000806000606084860312156139f257600080fd5b83356139fd816138f2565b92506020840135613a0d816138f2565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715613a5757613a57613a1e565b60405290565b6040516080810167ffffffffffffffff81118282101715613a5757613a57613a1e565b60405160a0810167ffffffffffffffff81118282101715613a5757613a57613a1e565b604051601f8201601f1916810167ffffffffffffffff81118282101715613acc57613acc613a1e565b604052919050565b600067ffffffffffffffff821115613aee57613aee613a1e565b50601f01601f191660200190565b6000613b0f613b0a84613ad4565b613aa3565b9050828152838383011115613b2357600080fd5b828260208301376000602084830101529392505050565b600060208284031215613b4c57600080fd5b813567ffffffffffffffff811115613b6357600080fd5b8201601f81018413613b7457600080fd5b6126ac84823560208401613afc565b600082601f830112613b9457600080fd5b61328b83833560208501613afc565b801515811461132157600080fd5b803561237381613ba3565b80356006811061237357600080fd5b600060c08284031215613bdd57600080fd5b613be5613a34565b90508135613bf281613ba3565b8152613c0060208301613bbc565b6020820152613c1160408301613bbc565b6040820152613c2260608301613bbc565b6060820152608082013560098110613c3957600080fd5b608082015260a082013567ffffffffffffffff811115613c5857600080fd5b613c6484828501613b83565b60a08301525092915050565b600082601f830112613c8157600080fd5b8135602067ffffffffffffffff80831115613c9e57613c9e613a1e565b8260051b613cad838201613aa3565b9384528581018301938381019088861115613cc757600080fd5b84880192505b85831015613d8557823584811115613ce55760008081fd5b88016080818b03601f1901811315613cfd5760008081fd5b613d05613a5d565b87830135613d1281613ba3565b81526040613d21848201613bbc565b8983015260608085013589811115613d395760008081fd5b613d478f8c83890101613b83565b8484015250928401359288841115613d6157600091508182fd5b613d6f8e8b86880101613b83565b9083015250845250509184019190840190613ccd565b98975050505050505050565b600060a08284031215613da357600080fd5b613dab613a80565b9050613db682613bb1565b8152602082013567ffffffffffffffff80821115613dd357600080fd5b613ddf85838601613b83565b60208401526040840135915080821115613df857600080fd5b613e0485838601613b83565b60408401526060840135915080821115613e1d57600080fd5b613e2985838601613bcb565b60608401526080840135915080821115613e4257600080fd5b50613e4f84828501613c70565b60808301525092915050565b600080600080600080600060e0888a031215613e7657600080fd5b613e7f88613907565b965060208801359550604088013567ffffffffffffffff80821115613ea357600080fd5b613eaf8b838c01613b83565b965060608a0135915080821115613ec557600080fd5b613ed18b838c01613b83565b955060808a0135915080821115613ee757600080fd5b613ef38b838c01613d91565b945060a08a0135915080821115613f0957600080fd5b50613f168a828b01613d91565b92505060c0880135905092959891949750929550565b600060208284031215613f3e57600080fd5b813561328b816138f2565b60008060408385031215613f5c57600080fd5b823591506020830135613f6e816138f2565b809150509250929050565b600080600080600080600080610100898b031215613f9657600080fd5b613f9f89613907565b97506020890135965060408901359550606089013567ffffffffffffffff80821115613fca57600080fd5b613fd68c838d01613b83565b965060808b0135915080821115613fec57600080fd5b613ff88c838d01613b83565b955060a08b013591508082111561400e57600080fd5b61401a8c838d01613d91565b945060c08b013591508082111561403057600080fd5b5061403d8b828c01613d91565b92505060e089013590509295985092959890939650565b6000806040838503121561406757600080fd5b8235614072816138f2565b91506020830135613f6e81613ba3565b6000806000806080858703121561409857600080fd5b84356140a3816138f2565b935060208501356140b3816138f2565b925060408501359150606085013567ffffffffffffffff8111156140d657600080fd5b6140e287828801613b83565b91505092959194509250565b6000806040838503121561410157600080fd5b823561410c816138f2565b91506020830135613f6e816138f2565b600181811c9082168061413057607f821691505b6020821081141561415157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b6006811061417d5761417d614157565b9052565b600081518084526020808501808196508360051b8101915082860160005b8581101561421057828403895281516080815115158652868201516141c68888018261416d565b5060408083015182828901526141de8389018261389a565b92505050606080830151925086820381880152506141fc818361389a565b9a87019a955050509084019060010161419f565b5091979650505050505050565b8051151582526000602082015160a0602085015261423e60a085018261389a565b905060408301518482036040860152614257828261389a565b91505060608301518482036060860152805115158252602081015161427f602084018261416d565b506040810151614292604084018261416d565b5060608101516142a5606084018261416d565b506080810151600981106142bb576142bb614157565b8060808401525060a0810151905060c060a08301526142dd60c083018261389a565b915050608083015184820360808601526142f78282614181565b95945050505050565b8681526001600160a01b038616602082015260c06040820152600061432860c083018761421d565b828103606084015261433a818761389a565b9050828103608084015261434e818661389a565b905082810360a0840152614362818561421d565b9998505050505050505050565b60006020828403121561438157600080fd5b815161328b81613ba3565b600082601f83011261439d57600080fd5b81516143ab613b0a82613ad4565b8181528460208386010111156143c057600080fd5b6126ac82602083016020870161386e565b600080600080608085870312156143e757600080fd5b84519350602085015167ffffffffffffffff81111561440557600080fd5b6144118782880161438c565b9350506040850151614422816138f2565b6060959095015193969295505050565b8481526000845161444a81602085016020890161386e565b80830190506bffffffffffffffffffffffff198560601b1660208201528360348201526054810191505095945050505050565b60006020828403121561448f57600080fd5b815161328b816138f2565b6000602082840312156144ac57600080fd5b5051919050565b600080604083850312156144c657600080fd5b505080516020909101519092909150565b600080604083850312156144ea57600080fd5b82516144f5816138f2565b602084015190925067ffffffffffffffff81111561451257600080fd5b61451e8582860161438c565b9150509250929050565b6bffffffffffffffffffffffff198360601b1681526000825161455281601485016020870161386e565b919091016014019392505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561458857614588614560565b500390565b600082198211156145a0576145a0614560565b500190565b600083516145b781846020880161386e565b8351908301906145cb81836020880161386e565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152614606608083018461389a565b9695505050505050565b60006020828403121561462257600080fd5b815161328b8161383b565b600060001982141561464157614641614560565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261466d5761466d614648565b500490565b60008261468157614681614648565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212207f9eaf9279bde4ea01cb4a3aced54bbea06d7ba9f7da213190ff56c7f02b291964736f6c634300080b0033";

type WXDVConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WXDVConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WXDV__factory extends ContractFactory {
  constructor(...args: WXDVConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WXDV> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      chain,
      overrides || {}
    ) as Promise<WXDV>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      chain,
      overrides || {}
    );
  }
  attach(address: string): WXDV {
    return super.attach(address) as WXDV;
  }
  connect(signer: Signer): WXDV__factory {
    return super.connect(signer) as WXDV__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WXDVInterface {
    return new utils.Interface(_abi) as WXDVInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WXDV {
    return new Contract(address, _abi, signerOrProvider) as WXDV;
  }
}
