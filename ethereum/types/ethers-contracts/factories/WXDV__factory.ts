/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WXDV, WXDVInterface } from "../WXDV";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "anconprotocolAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enrolledStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "NFTaddress",
        type: "address",
      },
    ],
    name: "NFTEnrolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "ENROLL_NFT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "NFTRegistrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_AVAILABLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_BURNED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_LOCKED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dagContractOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeForContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "serviceFeeForPaymentAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenLockStorage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForPaymentAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newItemId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTaddress",
        type: "address",
      },
    ],
    name: "enrollNFT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "lockWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "releaseWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "islocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527faba593141db1021cb8de7f38506a824487c2f2e5758168a6568eb7d6a8dd3173600c557f35e808e423fc257ba1bb61b1c2c57e48855b39cbee1f101ebe4fcb026f39e2e0600d557f1a7568e05cd9c1f5b58509adc78e175b2c29ad54d925ee42a8b45d9d39b1081b600e557f7a8231155142074ef50e8525dbfd6360a054cf41867e36de3c2aa1546d1cf8e9600f556000601455600060155560006016556000601855348015620000b557600080fd5b506040516200461538038062004615833981016040819052620000d8916200033d565b845185908590620000f1906000906020850190620001ad565b50805162000107906001906020840190620001ad565b50506006805460ff19169055506200011f336200015b565b601180546001600160a01b039485166001600160a01b031991821617909155601280549390941692169190911790915560185550620004139050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001bb90620003d6565b90600052602060002090601f016020900481019282620001df57600085556200022a565b82601f10620001fa57805160ff19168380011785556200022a565b828001600101855582156200022a579182015b828111156200022a5782518255916020019190600101906200020d565b50620002389291506200023c565b5090565b5b808211156200023857600081556001016200023d565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200027b57600080fd5b81516001600160401b038082111562000298576200029862000253565b604051601f8301601f19908116603f01168101908282118183101715620002c357620002c362000253565b81604052838152602092508683858801011115620002e057600080fd5b600091505b83821015620003045785820183015181830184015290820190620002e5565b83821115620003165760008385830101525b9695505050505050565b80516001600160a01b03811681146200033857600080fd5b919050565b600080600080600060a086880312156200035657600080fd5b85516001600160401b03808211156200036e57600080fd5b6200037c89838a0162000269565b965060208801519150808211156200039357600080fd5b50620003a28882890162000269565b945050620003b36040870162000320565b9250620003c36060870162000320565b9150608086015190509295509295909350565b600181811c90821680620003eb57607f821691505b602082108114156200040d57634e487b7160e01b600052602260045260246000fd5b50919050565b6141f280620004236000396000f3fe6080604052600436106102dc5760003560e01c806370a0823111610184578063a22cb465116100d6578063e53ae1021161008a578063e9cbd82211610064578063e9cbd822146107ed578063f2fde38b1461080d578063fd632d511461082d57600080fd5b8063e53ae10214610778578063e7b04b861461078e578063e985e9c5146107a457600080fd5b8063b88d4fde116100bb578063b88d4fde14610722578063c014b9da14610742578063c87b56dd1461075857600080fd5b8063a22cb465146106e2578063b86be2ca1461070257600080fd5b80637ac3c02f116101385780638da5cb5b116101125780638da5cb5b1461069c57806395d89b41146106ba5780639ed1156f146106cf57600080fd5b80637ac3c02f146106225780637c9c94b0146106405780637e8b80c31461068957600080fd5b8063756af45f11610169578063756af45f146105cc578063776439dd146105ec5780637927b8981461060257600080fd5b806370a0823114610597578063715018a6146105b757600080fd5b80633e65f4921161023d57806351cff8d9116101f15780635c975abb116101cb5780635c975abb1461053f5780636352211e146105575780636c19e7831461057757600080fd5b806351cff8d9146104f45780635600f04f14610514578063588f7ae21461052957600080fd5b806342842e0e1161022257806342842e0e146104a157806342966c68146104c15780634fa97e61146104e157600080fd5b80633e65f4921461044957806340c10f191461048157600080fd5b806323b872dd116102945780632c078e8d116102795780632c078e8d146103f65780632e8d6566146104165780633cd559a41461042957600080fd5b806323b872dd146103b6578063252498a2146103d657600080fd5b8063081812fc116102c5578063081812fc14610338578063095ea7b3146103705780632380bcd21461039257600080fd5b806301ffc9a7146102e157806306fdde0314610316575b600080fd5b3480156102ed57600080fd5b506103016102fc36600461340b565b610843565b60405190151581526020015b60405180910390f35b34801561032257600080fd5b5061032b6108e0565b60405161030d9190613480565b34801561034457600080fd5b50610358610353366004613493565b610972565b6040516001600160a01b03909116815260200161030d565b34801561037c57600080fd5b5061039061038b3660046134d1565b610a0c565b005b34801561039e57600080fd5b506103a8600e5481565b60405190815260200161030d565b3480156103c257600080fd5b506103906103d13660046134fd565b610b3e565b3480156103e257600080fd5b506103906103f136600461365a565b610bc6565b34801561040257600080fd5b50610390610411366004613493565b610c37565b6103a861042436600461397b565b610c96565b34801561043557600080fd5b50601254610358906001600160a01b031681565b34801561045557600080fd5b506103a86104643660046134d1565b601760209081526000928352604080842090915290825290205481565b34801561048d57600080fd5b506103a861049c3660046134d1565b611070565b3480156104ad57600080fd5b506103906104bc3660046134fd565b611147565b3480156104cd57600080fd5b506103906104dc366004613493565b611162565b6103016104ef366004613a4c565b6111e9565b34801561050057600080fd5b5061039061050f366004613a4c565b6112c7565b34801561052057600080fd5b5061032b611410565b34801561053557600080fd5b506103a8600d5481565b34801561054b57600080fd5b5060065460ff16610301565b34801561056357600080fd5b50610358610572366004613493565b61149e565b34801561058357600080fd5b50610390610592366004613a4c565b611529565b3480156105a357600080fd5b506103a86105b2366004613a4c565b6115a5565b3480156105c357600080fd5b5061039061163f565b3480156105d857600080fd5b506103906105e7366004613a4c565b6116a5565b3480156105f857600080fd5b506103a860145481565b34801561060e57600080fd5b50601354610358906001600160a01b031681565b34801561062e57600080fd5b50600a546001600160a01b0316610358565b34801561064c57600080fd5b5061030161065b366004613a69565b600c546001600160a01b03821660009081526017602090815260408083208684529091529020541492915050565b6103a861069736600461397b565b611891565b3480156106a857600080fd5b506008546001600160a01b0316610358565b3480156106c657600080fd5b5061032b611cd3565b6103016106dd366004613a99565b611ce2565b3480156106ee57600080fd5b506103906106fd366004613b74565b611e6d565b34801561070e57600080fd5b5061039061071d366004613493565b611f32565b34801561072e57600080fd5b5061039061073d366004613ba2565b611f91565b34801561074e57600080fd5b506103a860155481565b34801561076457600080fd5b5061032b610773366004613493565b61201f565b34801561078457600080fd5b506103a860165481565b34801561079a57600080fd5b506103a8600f5481565b3480156107b057600080fd5b506103016107bf366004613c0e565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b3480156107f957600080fd5b50601154610358906001600160a01b031681565b34801561081957600080fd5b50610390610828366004613a4c565b61202a565b34801561083957600080fd5b506103a8600c5481565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806108a657506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806108da57507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b6060600080546108ef90613c3c565b80601f016020809104026020016040519081016040528092919081815260200182805461091b90613c3c565b80156109685780601f1061093d57610100808354040283529160200191610968565b820191906000526020600020905b81548152906001019060200180831161094b57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166109f05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610a178261149e565b9050806001600160a01b0316836001600160a01b03161415610aa15760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084016109e7565b336001600160a01b0382161480610abd5750610abd81336107bf565b610b2f5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016109e7565b610b398383612109565b505050565b610b49335b82612177565b610bbb5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016109e7565b610b3983838361226e565b6008546001600160a01b03163314610c205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109e7565b8051610c33906009906020840190613326565b5050565b6008546001600160a01b03163314610c915760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109e7565b601655565b6012546040516397554e8f60e01b81526000916001600160a01b0316906397554e8f90610cd1908a908c9089908c908c908b90600401613e20565b6020604051808303816000875af1158015610cf0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d149190613e8f565b610d605760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f6600000000000000000000000060448201526064016109e7565b60008060008088806020019051810190610d7a9190613ef1565b935093509350935083838383604051602001610d999493929190613f52565b604051602081830303815290604052805190602001208614610dfd5760405162461bcd60e51b815260206004820152600e60248201527f696e76616c6964207061636b657400000000000000000000000000000000000060448201526064016109e7565b816001600160a01b03168c6001600160a01b031614610e5e5760405162461bcd60e51b815260206004820152600e60248201527f696e76616c69642073656e64657200000000000000000000000000000000000060448201526064016109e7565b600c543360008181526017602090815260408083208984529091529020549091148015610eff57506040516331a9108f60e11b8152600481018690526001600160a01b03808f169190831690636352211e90602401602060405180830381865afa158015610ed0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ef49190613f9d565b6001600160a01b0316145b15610f5357610f0e3386612446565b610f19308487611147565b60405133815285907fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e9060200160405180910390a261105f565b6040516331a9108f60e11b8152600481018690526001600160a01b03808f169190831690636352211e90602401602060405180830381865afa158015610f9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc19190613f9d565b6001600160a01b0316148015610ff35750600c5433600090815260176020908152604080832089845290915290205414155b1561102e5760405162461bcd60e51b815260206004820152600b60248201526a155b9cdd5c1c1bdc9d195960aa1b60448201526064016109e7565b61103c601080546001019055565b600061104760105490565b905061105384826124d4565b61105d86866124ee565b505b50929b9a5050505050505050505050565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c4016109e7565b610b3983838360405180602001604052806000815250611f91565b61116b33610b43565b6111dd5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f7665640000000000000000000000000000000060648201526084016109e7565b6111e681612597565b50565b6001600160a01b03811660009081526019602052604081205460ff16156112525760405162461bcd60e51b815260206004820152601a60248201527f4e465420697320616c726561647920696e20726567697374727900000000000060448201526064016109e7565b61125e600f54336125a0565b6001600160a01b038216600081815260196020908152604091829020805460ff191660019081179091558251908152908101929092527fdb0987ab5727b17d3467eab6f86958c6b3204e475e5fbe5bac8bc796ac44939a910160405180910390a1506001919050565b6008546001600160a01b031633146113215760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109e7565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114611370576040519150601f19603f3d011682016040523d82523d6000602084013e611375565b606091505b5091509150816113c75760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016109e7565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58460405161140291815260200190565b60405180910390a250505050565b6009805461141d90613c3c565b80601f016020809104026020016040519081016040528092919081815260200182805461144990613c3c565b80156114965780601f1061146b57610100808354040283529160200191611496565b820191906000526020600020905b81548152906001019060200180831161147957829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806108da5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e000000000000000000000000000000000000000000000060648201526084016109e7565b6008546001600160a01b031633146115835760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109e7565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0382166116235760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f20616464726573730000000000000000000000000000000000000000000060648201526084016109e7565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b031633146116995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109e7565b6116a3600061276d565b565b6008546001600160a01b031633146116ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109e7565b6011546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015611748573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176c9190613fba565b6011546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156117da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117fe9190613e8f565b61184a5760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c656400000000000000000000000060448201526064016109e7565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161188591815260200190565b60405180910390a25050565b6012546040516397554e8f60e01b81526000916001600160a01b0316906397554e8f906118cc908a908c9089908c908c908b90600401613e20565b6020604051808303816000875af11580156118eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190f9190613e8f565b61195b5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f6600000000000000000000000060448201526064016109e7565b600080868060200190518101906119729190613fd3565b604080516020810184905290810182905291935091506060016040516020818303038152906040528051906020012084146119ef5760405162461bcd60e51b815260206004820152600e60248201527f696e76616c6964207061636b657400000000000000000000000000000000000060448201526064016109e7565b6119f88261149e565b6001600160a01b03168a6001600160a01b031614611a1557600080fd5b600c543360008181526017602090815260408083208784529091529020549091148015611ab657506040516331a9108f60e11b8152600481018490526001600160a01b03808d169190831690636352211e90602401602060405180830381865afa158015611a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aab9190613f9d565b6001600160a01b0316145b15611af15760405162461bcd60e51b815260206004820152600b60248201526a155b9cdd5c1c1bdc9d195960aa1b60448201526064016109e7565b6040516331a9108f60e11b8152600481018490526001600160a01b03808d169190831690636352211e90602401602060405180830381865afa158015611b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b5f9190613f9d565b6001600160a01b0316148015611b915750600c5433600090815260176020908152604080832087845290915290205414155b15611c5b576040517f42842e0e0000000000000000000000000000000000000000000000000000000081526001600160a01b038c81166004830152306024830152604482018590528216906342842e0e90606401600060405180830381600087803b158015611bff57600080fd5b505af1158015611c13573d6000803e3d6000fd5b50505050611c2133846127bf565b60405133815283907f9f1ec8c880f76798e7b793325d625e9b60e4082a553c98f42b6cda368dd600089060200160405180910390a2611cc4565b30611c658461149e565b6001600160a01b031614611cbb5760405162461bcd60e51b815260206004820152601660248201527f4973206e6f742061207772617070656420746f6b656e0000000000000000000060448201526064016109e7565b611cc483612597565b50909998505050505050505050565b6060600180546108ef90613c3c565b6012546040516397554e8f60e01b81526000916001600160a01b0316906397554e8f90611d1d908a908d9089908c908c908b90600401613e20565b6020604051808303816000875af1158015611d3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d609190613e8f565b611dac5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f6600000000000000000000000060448201526064016109e7565b60008086806020019051810190611dc39190613ff7565b915091508181604051602001611dda929190614048565b604051602081830303815290604052805190602001208414611e3e5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207061636b657400000000000000000000000000000000000060448201526064016109e7565b5050600e543360009081526017602090815260408083208c845290915290205550600198975050505050505050565b6001600160a01b038216331415611ec65760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016109e7565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546001600160a01b03163314611f8c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109e7565b601555565b611f9b3383612177565b61200d5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f76656400000000000000000000000000000060648201526084016109e7565b6120198484848461285c565b50505050565b60606108da826128da565b6008546001600160a01b031633146120845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016109e7565b6001600160a01b0381166121005760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016109e7565b6111e68161276d565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061213e8261149e565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166121f05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016109e7565b60006121fb8361149e565b9050806001600160a01b0316846001600160a01b031614806122365750836001600160a01b031661222b84610972565b6001600160a01b0316145b8061226657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166122818261149e565b6001600160a01b0316146122fd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e000000000000000000000000000000000000000000000060648201526084016109e7565b6001600160a01b0382166123785760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016109e7565b612383838383612a65565b61238e600082612109565b6001600160a01b03831660009081526003602052604081208054600192906123b7908490614096565b90915550506001600160a01b03821660009081526003602052604081208054600192906123e59084906140ad565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600c54336000908152601760209081526040808320858452909152902054146124b15760405162461bcd60e51b815260206004820152601960248201527f546f6b656e20697320616c726561647920756e6c6f636b65640000000000000060448201526064016109e7565b600e54336000908152601760209081526040808320948352939052919091205550565b610c33828260405180602001604052806000815250612b4f565b6000828152600260205260409020546001600160a01b03166125785760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e00000000000000000000000000000000000060648201526084016109e7565b60008281526007602090815260409091208251610b3992840190613326565b6111e681612bcd565b6011546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156125e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061260d9190613fba565b1161265a5760405162461bcd60e51b815260206004820152601160248201527f6e6f20656e6f7567682062616c616e636500000000000000000000000000000060448201526064016109e7565b600f54821415610c33576011546014546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af11580156126c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126e49190613e8f565b6127305760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572206661696c656420666f7220726563697069656e7400000060448201526064016109e7565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b360145460405161188591815260200190565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600e546001600160a01b0383166000908152601760209081526040808320858452909152902054146128335760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20697320616c7265616479206c6f636b656400000000000000000060448201526064016109e7565b600c546001600160a01b0390921660009081526017602090815260408083209383529290522055565b61286784848461226e565b61287384848484612c0d565b6120195760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016109e7565b6000818152600260205260409020546060906001600160a01b03166129675760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e00000000000000000000000000000060648201526084016109e7565b6000828152600760205260408120805461298090613c3c565b80601f01602080910402602001604051908101604052809291908181526020018280546129ac90613c3c565b80156129f95780601f106129ce576101008083540402835291602001916129f9565b820191906000526020600020905b8154815290600101906020018083116129dc57829003601f168201915b505050505090506000612a1760408051602081019091526000815290565b9050805160001415612a2a575092915050565b815115612a5c578082604051602001612a449291906140c5565b60405160208183030381529060405292505050919050565b61226684612d56565b60065460ff1615612ab85760405162461bcd60e51b815260206004820152601e60248201527f5844563a20546f6b656e20657865637574696f6e20697320706175736564000060448201526064016109e7565b600c546001600160a01b03841660009081526017602090815260408083208584529091529020541415612b2d5760405162461bcd60e51b815260206004820152601960248201527f5844563a205468697320746f6b656e206973206c6f636b65640000000000000060448201526064016109e7565b6001600160a01b038316612b4457612b4433612e4c565b610b39838383612f86565b612b598383612fff565b612b666000848484612c0d565b610b395760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016109e7565b612bd68161314d565b60008181526007602052604090208054612bef90613c3c565b1590506111e65760008181526007602052604081206111e6916133aa565b60006001600160a01b0384163b15612d4b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612c519033908990889088906004016140f4565b6020604051808303816000875af1925050508015612c8c575060408051601f3d908101601f19168201909252612c8991810190614130565b60015b612d31573d808015612cba576040519150601f19603f3d011682016040523d82523d6000602084013e612cbf565b606091505b508051612d295760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016109e7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612266565b506001949350505050565b6000818152600260205260409020546060906001600160a01b0316612de35760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e000000000000000000000000000000000060648201526084016109e7565b6000612dfa60408051602081019091526000815290565b90506000815111612e1a5760405180602001604052806000815250612e45565b80612e24846131f4565b604051602001612e359291906140c5565b6040516020818303038152906040525b9392505050565b6011546016546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af1158015612ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ecc9190613e8f565b612f3e5760405162461bcd60e51b815260206004820152602260248201527f5844563a205472616e73666572206661696c656420666f72207265636970696560448201527f6e7400000000000000000000000000000000000000000000000000000000000060648201526084016109e7565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b3601654604051612f7b91815260200190565b60405180910390a250565b60065460ff1615610b395760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201527f68696c652070617573656400000000000000000000000000000000000000000060648201526084016109e7565b6001600160a01b0382166130555760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016109e7565b6000818152600260205260409020546001600160a01b0316156130ba5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016109e7565b6130c660008383612a65565b6001600160a01b03821660009081526003602052604081208054600192906130ef9084906140ad565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006131588261149e565b905061316681600084612a65565b613171600083612109565b6001600160a01b038116600090815260036020526040812080546001929061319a908490614096565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60608161323457505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b811561325e57806132488161414d565b91506132579050600a8361417e565b9150613238565b60008167ffffffffffffffff8111156132795761327961353e565b6040519080825280601f01601f1916602001820160405280156132a3576020820181803683370190505b5090505b8415612266576132b8600183614096565b91506132c5600a86614192565b6132d09060306140ad565b60f81b8183815181106132e5576132e56141a6565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535061331f600a8661417e565b94506132a7565b82805461333290613c3c565b90600052602060002090601f016020900481019282613354576000855561339a565b82601f1061336d57805160ff191683800117855561339a565b8280016001018555821561339a579182015b8281111561339a57825182559160200191906001019061337f565b506133a69291506133e0565b5090565b5080546133b690613c3c565b6000825580601f106133c6575050565b601f0160209004906000526020600020908101906111e691905b5b808211156133a657600081556001016133e1565b6001600160e01b0319811681146111e657600080fd5b60006020828403121561341d57600080fd5b8135612e45816133f5565b60005b8381101561344357818101518382015260200161342b565b838111156120195750506000910152565b6000815180845261346c816020860160208601613428565b601f01601f19169290920160200192915050565b602081526000612e456020830184613454565b6000602082840312156134a557600080fd5b5035919050565b6001600160a01b03811681146111e657600080fd5b80356134cc816134ac565b919050565b600080604083850312156134e457600080fd5b82356134ef816134ac565b946020939093013593505050565b60008060006060848603121561351257600080fd5b833561351d816134ac565b9250602084013561352d816134ac565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156135775761357761353e565b60405290565b6040516080810167ffffffffffffffff811182821017156135775761357761353e565b60405160a0810167ffffffffffffffff811182821017156135775761357761353e565b604051601f8201601f1916810167ffffffffffffffff811182821017156135ec576135ec61353e565b604052919050565b600067ffffffffffffffff82111561360e5761360e61353e565b50601f01601f191660200190565b600061362f61362a846135f4565b6135c3565b905082815283838301111561364357600080fd5b828260208301376000602084830101529392505050565b60006020828403121561366c57600080fd5b813567ffffffffffffffff81111561368357600080fd5b8201601f8101841361369457600080fd5b6122668482356020840161361c565b600082601f8301126136b457600080fd5b612e458383356020850161361c565b80151581146111e657600080fd5b80356134cc816136c3565b8035600681106134cc57600080fd5b600060c082840312156136fd57600080fd5b613705613554565b90508135613712816136c3565b8152613720602083016136dc565b6020820152613731604083016136dc565b6040820152613742606083016136dc565b606082015260808201356009811061375957600080fd5b608082015260a082013567ffffffffffffffff81111561377857600080fd5b613784848285016136a3565b60a08301525092915050565b600082601f8301126137a157600080fd5b8135602067ffffffffffffffff808311156137be576137be61353e565b8260051b6137cd8382016135c3565b93845285810183019383810190888611156137e757600080fd5b84880192505b858310156138a5578235848111156138055760008081fd5b88016080818b03601f190181131561381d5760008081fd5b61382561357d565b87830135613832816136c3565b815260406138418482016136dc565b89830152606080850135898111156138595760008081fd5b6138678f8c838901016136a3565b848401525092840135928884111561388157600091508182fd5b61388f8e8b868801016136a3565b90830152508452505091840191908401906137ed565b98975050505050505050565b600060a082840312156138c357600080fd5b6138cb6135a0565b90506138d6826136d1565b8152602082013567ffffffffffffffff808211156138f357600080fd5b6138ff858386016136a3565b6020840152604084013591508082111561391857600080fd5b613924858386016136a3565b6040840152606084013591508082111561393d57600080fd5b613949858386016136eb565b6060840152608084013591508082111561396257600080fd5b5061396f84828501613790565b60808301525092915050565b600080600080600080600060e0888a03121561399657600080fd5b61399f886134c1565b965060208801359550604088013567ffffffffffffffff808211156139c357600080fd5b6139cf8b838c016136a3565b965060608a01359150808211156139e557600080fd5b6139f18b838c016136a3565b955060808a0135915080821115613a0757600080fd5b613a138b838c016138b1565b945060a08a0135915080821115613a2957600080fd5b50613a368a828b016138b1565b92505060c0880135905092959891949750929550565b600060208284031215613a5e57600080fd5b8135612e45816134ac565b60008060408385031215613a7c57600080fd5b823591506020830135613a8e816134ac565b809150509250929050565b600080600080600080600080610100898b031215613ab657600080fd5b613abf896134c1565b97506020890135965060408901359550606089013567ffffffffffffffff80821115613aea57600080fd5b613af68c838d016136a3565b965060808b0135915080821115613b0c57600080fd5b613b188c838d016136a3565b955060a08b0135915080821115613b2e57600080fd5b613b3a8c838d016138b1565b945060c08b0135915080821115613b5057600080fd5b50613b5d8b828c016138b1565b92505060e089013590509295985092959890939650565b60008060408385031215613b8757600080fd5b8235613b92816134ac565b91506020830135613a8e816136c3565b60008060008060808587031215613bb857600080fd5b8435613bc3816134ac565b93506020850135613bd3816134ac565b925060408501359150606085013567ffffffffffffffff811115613bf657600080fd5b613c02878288016136a3565b91505092959194509250565b60008060408385031215613c2157600080fd5b8235613c2c816134ac565b91506020830135613a8e816134ac565b600181811c90821680613c5057607f821691505b60208210811415613c7157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60068110613c9d57613c9d613c77565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015613d305782840389528151608081511515865286820151613ce688880182613c8d565b506040808301518282890152613cfe83890182613454565b9250505060608083015192508682038188015250613d1c8183613454565b9a87019a9550505090840190600101613cbf565b5091979650505050505050565b8051151582526000602082015160a06020850152613d5e60a0850182613454565b905060408301518482036040860152613d778282613454565b915050606083015184820360608601528051151582526020810151613d9f6020840182613c8d565b506040810151613db26040840182613c8d565b506060810151613dc56060840182613c8d565b50608081015160098110613ddb57613ddb613c77565b8060808401525060a0810151905060c060a0830152613dfd60c0830182613454565b91505060808301518482036080860152613e178282613ca1565b95945050505050565b8681526001600160a01b038616602082015260c060408201526000613e4860c0830187613d3d565b8281036060840152613e5a8187613454565b90508281036080840152613e6e8186613454565b905082810360a0840152613e828185613d3d565b9998505050505050505050565b600060208284031215613ea157600080fd5b8151612e45816136c3565b600082601f830112613ebd57600080fd5b8151613ecb61362a826135f4565b818152846020838601011115613ee057600080fd5b612266826020830160208701613428565b60008060008060808587031215613f0757600080fd5b84519350602085015167ffffffffffffffff811115613f2557600080fd5b613f3187828801613eac565b9350506040850151613f42816134ac565b6060959095015193969295505050565b84815260008451613f6a816020850160208901613428565b80830190506bffffffffffffffffffffffff198560601b1660208201528360348201526054810191505095945050505050565b600060208284031215613faf57600080fd5b8151612e45816134ac565b600060208284031215613fcc57600080fd5b5051919050565b60008060408385031215613fe657600080fd5b505080516020909101519092909150565b6000806040838503121561400a57600080fd5b8251614015816134ac565b602084015190925067ffffffffffffffff81111561403257600080fd5b61403e85828601613eac565b9150509250929050565b6bffffffffffffffffffffffff198360601b16815260008251614072816014850160208701613428565b919091016014019392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156140a8576140a8614080565b500390565b600082198211156140c0576140c0614080565b500190565b600083516140d7818460208801613428565b8351908301906140eb818360208801613428565b01949350505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526141266080830184613454565b9695505050505050565b60006020828403121561414257600080fd5b8151612e45816133f5565b600060001982141561416157614161614080565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261418d5761418d614168565b500490565b6000826141a1576141a1614168565b500690565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220943c423a7acf57f65b1ca23af4df3699f693bd821f868339892a2fd48576668c64736f6c634300080b0033";

type WXDVConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WXDVConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WXDV__factory extends ContractFactory {
  constructor(...args: WXDVConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WXDV> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      chain,
      overrides || {}
    ) as Promise<WXDV>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      chain,
      overrides || {}
    );
  }
  attach(address: string): WXDV {
    return super.attach(address) as WXDV;
  }
  connect(signer: Signer): WXDV__factory {
    return super.connect(signer) as WXDV__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WXDVInterface {
    return new utils.Interface(_abi) as WXDVInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WXDV {
    return new Contract(address, _abi, signerOrProvider) as WXDV;
  }
}
