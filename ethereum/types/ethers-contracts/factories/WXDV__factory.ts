/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { WXDV, WXDVInterface } from "../WXDV";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "anconprotocolAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "prefix",
        type: "bytes",
      },
    ],
    name: "OffchainLookup",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "UsageInformation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Locked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enrolledStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "address",
        name: "NFTaddress",
        type: "address",
      },
    ],
    name: "NFTEnrolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "signatureHash",
        type: "bytes32",
      },
    ],
    name: "ProofAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Released",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "ENROLL_NFT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "NFTRegistrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_AVAILABLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_BURNED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "TOKEN_LOCKED",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dagContractOperator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "serviceFeeForContract",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "serviceFeeForPaymentAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer_",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "url_",
        type: "string",
      },
    ],
    name: "setUrl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenLockStorage",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "url",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForPaymentAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setServiceFeeForContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "newItemId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "mintWithProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTaddress",
        type: "address",
      },
    ],
    name: "enrollNFT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "NFTaddress",
        type: "address",
      },
    ],
    name: "deactivateNFT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "lockWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "releaseWithProof",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "islocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527faba593141db1021cb8de7f38506a824487c2f2e5758168a6568eb7d6a8dd3173600c557f35e808e423fc257ba1bb61b1c2c57e48855b39cbee1f101ebe4fcb026f39e2e0600d557f1a7568e05cd9c1f5b58509adc78e175b2c29ad54d925ee42a8b45d9d39b1081b600e557f7a8231155142074ef50e8525dbfd6360a054cf41867e36de3c2aa1546d1cf8e9600f556000601455600060155560006016556000601855348015620000b557600080fd5b506040516200482838038062004828833981016040819052620000d8916200033d565b845185908590620000f1906000906020850190620001ad565b50805162000107906001906020840190620001ad565b50506006805460ff19169055506200011f336200015b565b601180546001600160a01b039485166001600160a01b031991821617909155601280549390941692169190911790915560185550620004139050565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001bb90620003d6565b90600052602060002090601f016020900481019282620001df57600085556200022a565b82601f10620001fa57805160ff19168380011785556200022a565b828001600101855582156200022a579182015b828111156200022a5782518255916020019190600101906200020d565b50620002389291506200023c565b5090565b5b808211156200023857600081556001016200023d565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200027b57600080fd5b81516001600160401b038082111562000298576200029862000253565b604051601f8301601f19908116603f01168101908282118183101715620002c357620002c362000253565b81604052838152602092508683858801011115620002e057600080fd5b600091505b83821015620003045785820183015181830184015290820190620002e5565b83821115620003165760008385830101525b9695505050505050565b80516001600160a01b03811681146200033857600080fd5b919050565b600080600080600060a086880312156200035657600080fd5b85516001600160401b03808211156200036e57600080fd5b6200037c89838a0162000269565b965060208801519150808211156200039357600080fd5b50620003a28882890162000269565b945050620003b36040870162000320565b9250620003c36060870162000320565b9150608086015190509295509295909350565b600181811c90821680620003eb57607f821691505b602082108114156200040d57634e487b7160e01b600052602260045260246000fd5b50919050565b61440580620004236000396000f3fe6080604052600436106102e75760003560e01c8063715018a611610184578063b20f8483116100d6578063e53ae1021161008a578063e9cbd82211610064578063e9cbd82214610818578063f2fde38b14610838578063fd632d511461085857600080fd5b8063e53ae102146107a3578063e7b04b86146107b9578063e985e9c5146107cf57600080fd5b8063b88d4fde116100bb578063b88d4fde1461074d578063c014b9da1461076d578063c87b56dd1461078357600080fd5b8063b20f84831461070d578063b86be2ca1461072d57600080fd5b80637c9c94b01161013857806395d89b411161011257806395d89b41146106c55780639ed1156f146106da578063a22cb465146106ed57600080fd5b80637c9c94b01461064b5780637e8b80c3146106945780638da5cb5b146106a757600080fd5b8063776439dd11610169578063776439dd146105f75780637927b8981461060d5780637ac3c02f1461062d57600080fd5b8063715018a6146105c2578063756af45f146105d757600080fd5b806340c10f191161023d5780635600f04f116101f15780636352211e116101cb5780636352211e146105625780636c19e7831461058257806370a08231146105a257600080fd5b80635600f04f1461051f578063588f7ae2146105345780635c975abb1461054a57600080fd5b806342966c681161022257806342966c68146104cc5780634fa97e61146104ec57806351cff8d9146104ff57600080fd5b806340c10f191461048c57806342842e0e146104ac57600080fd5b806323b872dd1161029f5780632e8d6566116102795780632e8d6566146104215780633cd559a4146104345780633e65f4921461045457600080fd5b806323b872dd146103c1578063252498a2146103e15780632c078e8d1461040157600080fd5b8063081812fc116102d0578063081812fc14610343578063095ea7b31461037b5780632380bcd21461039d57600080fd5b806301ffc9a7146102ec57806306fdde0314610321575b600080fd5b3480156102f857600080fd5b5061030c610307366004613623565b61086e565b60405190151581526020015b60405180910390f35b34801561032d57600080fd5b5061033661090b565b6040516103189190613698565b34801561034f57600080fd5b5061036361035e3660046136ab565b61099d565b6040516001600160a01b039091168152602001610318565b34801561038757600080fd5b5061039b6103963660046136e4565b610a37565b005b3480156103a957600080fd5b506103b3600e5481565b604051908152602001610318565b3480156103cd57600080fd5b5061039b6103dc366004613710565b610b69565b3480156103ed57600080fd5b5061039b6103fc36600461386d565b610bf1565b34801561040d57600080fd5b5061039b61041c3660046136ab565b610c62565b6103b361042f366004613b8e565b610cc1565b34801561044057600080fd5b50601254610363906001600160a01b031681565b34801561046057600080fd5b506103b361046f3660046136e4565b601760209081526000928352604080842090915290825290205481565b34801561049857600080fd5b506103b36104a73660046136e4565b6110fe565b3480156104b857600080fd5b5061039b6104c7366004613710565b6111d5565b3480156104d857600080fd5b5061039b6104e73660046136ab565b6111f0565b61030c6104fa366004613c5f565b611277565b34801561050b57600080fd5b5061039b61051a366004613c5f565b611356565b34801561052b57600080fd5b5061033661149f565b34801561054057600080fd5b506103b3600d5481565b34801561055657600080fd5b5060065460ff1661030c565b34801561056e57600080fd5b5061036361057d3660046136ab565b61152d565b34801561058e57600080fd5b5061039b61059d366004613c5f565b6115b8565b3480156105ae57600080fd5b506103b36105bd366004613c5f565b611634565b3480156105ce57600080fd5b5061039b6116ce565b3480156105e357600080fd5b5061039b6105f2366004613c5f565b611734565b34801561060357600080fd5b506103b360145481565b34801561061957600080fd5b50601354610363906001600160a01b031681565b34801561063957600080fd5b50600a546001600160a01b0316610363565b34801561065757600080fd5b5061030c610666366004613c7c565b600c546001600160a01b03821660009081526017602090815260408083208684529091529020541492915050565b6103b36106a2366004613b8e565b611920565b3480156106b357600080fd5b506008546001600160a01b0316610363565b3480156106d157600080fd5b50610336611dc5565b61030c6106e8366004613cac565b611dd4565b3480156106f957600080fd5b5061039b610708366004613d87565b611f5f565b34801561071957600080fd5b5061030c610728366004613c5f565b612024565b34801561073957600080fd5b5061039b6107483660046136ab565b61214a565b34801561075957600080fd5b5061039b610768366004613db5565b6121a9565b34801561077957600080fd5b506103b360155481565b34801561078f57600080fd5b5061033661079e3660046136ab565b612237565b3480156107af57600080fd5b506103b360165481565b3480156107c557600080fd5b506103b3600f5481565b3480156107db57600080fd5b5061030c6107ea366004613e21565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b34801561082457600080fd5b50601154610363906001600160a01b031681565b34801561084457600080fd5b5061039b610853366004613c5f565b612242565b34801561086457600080fd5b506103b3600c5481565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806108d157506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061090557507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606000805461091a90613e4f565b80601f016020809104026020016040519081016040528092919081815260200182805461094690613e4f565b80156109935780601f1061096857610100808354040283529160200191610993565b820191906000526020600020905b81548152906001019060200180831161097657829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b0316610a1b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610a428261152d565b9050806001600160a01b0316836001600160a01b03161415610acc5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610a12565b336001600160a01b0382161480610ae85750610ae881336107ea565b610b5a5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610a12565b610b648383612321565b505050565b610b74335b8261238f565b610be65760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610a12565b610b64838383612486565b6008546001600160a01b03163314610c4b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a12565b8051610c5e90600990602084019061353e565b5050565b6008546001600160a01b03163314610cbc5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a12565b601655565b3360009081526019602052604081205460ff161515600114610d255760405162461bcd60e51b815260206004820152601660248201527f6e6674206d7573742062652072656769737465726564000000000000000000006044820152606401610a12565b6012546040516397554e8f60e01b81526001600160a01b03909116906397554e8f90610d5f908a908c9089908c908c908b90600401614033565b6020604051808303816000875af1158015610d7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da291906140a2565b610dee5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610a12565b60008060008088806020019051810190610e089190614104565b935093509350935083838383604051602001610e279493929190614165565b604051602081830303815290604052805190602001208614610e8b5760405162461bcd60e51b815260206004820152600e60248201527f696e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610a12565b816001600160a01b03168c6001600160a01b031614610eec5760405162461bcd60e51b815260206004820152600e60248201527f696e76616c69642073656e6465720000000000000000000000000000000000006044820152606401610a12565b600c543360008181526017602090815260408083208984529091529020549091148015610f8d57506040516331a9108f60e11b8152600481018690526001600160a01b03808f169190831690636352211e90602401602060405180830381865afa158015610f5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8291906141b0565b6001600160a01b0316145b15610fe157610f9c338661265e565b610fa73084876111d5565b60405133815285907fb21fb52d5749b80f3182f8c6992236b5e5576681880914484d7f4c9b062e619e9060200160405180910390a26110ed565b6040516331a9108f60e11b8152600481018690526001600160a01b03808f169190831690636352211e90602401602060405180830381865afa15801561102b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104f91906141b0565b6001600160a01b03161480156110815750600c5433600090815260176020908152604080832089845290915290205414155b156110bc5760405162461bcd60e51b815260206004820152600b60248201526a155b9cdd5c1c1bdc9d195960aa1b6044820152606401610a12565b6110ca601080546001019055565b60006110d560105490565b90506110e184826126ec565b6110eb8686612706565b505b50929b9a5050505050505050505050565b6040517f242b792200000000000000000000000000000000000000000000000000000000815260206004820152606360248201527f526571756972657320616e636f6e70726f746f636f6c2070726f6f6620746f2060448201527f65786563757465206d696e74696e672e205365652068747470733a2f2f67697460648201527f6875622e636f6d2f616e636f6e70726f746f636f6c20666f72206d6f7265206960848201527f6e666f000000000000000000000000000000000000000000000000000000000060a482015260009060c401610a12565b610b64838383604051806020016040528060008152506121a9565b6111f933610b6e565b61126b5760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f766564000000000000000000000000000000006064820152608401610a12565b611274816127af565b50565b6001600160a01b03811660009081526019602052604081205460ff16156112e05760405162461bcd60e51b815260206004820152601a60248201527f4e465420697320616c726561647920696e2072656769737472790000000000006044820152606401610a12565b6112ec600f54336127b8565b6001600160a01b038216600081815260196020908152604091829020805460ff191660019081179091558251908152908101929092527fdb0987ab5727b17d3467eab6f86958c6b3204e475e5fbe5bac8bc796ac44939a91015b60405180910390a1506001919050565b6008546001600160a01b031633146113b05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a12565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d80600081146113ff576040519150601f19603f3d011682016040523d82523d6000602084013e611404565b606091505b5091509150816114565760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610a12565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58460405161149191815260200190565b60405180910390a250505050565b600980546114ac90613e4f565b80601f01602080910402602001604051908101604052809291908181526020018280546114d890613e4f565b80156115255780601f106114fa57610100808354040283529160200191611525565b820191906000526020600020905b81548152906001019060200180831161150857829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806109055760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610a12565b6008546001600160a01b031633146116125760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a12565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0382166116b25760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610a12565b506001600160a01b031660009081526003602052604090205490565b6008546001600160a01b031633146117285760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a12565b6117326000612985565b565b6008546001600160a01b0316331461178e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a12565b6011546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156117d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117fb91906141cd565b6011546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015611869573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188d91906140a2565b6118d95760405162461bcd60e51b815260206004820152601460248201527f5844563a205472616e73666572206661696c65640000000000000000000000006044820152606401610a12565b816001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161191491815260200190565b60405180910390a25050565b3360009081526019602052604081205460ff1615156001146119845760405162461bcd60e51b815260206004820152601660248201527f6e6674206d7573742062652072656769737465726564000000000000000000006044820152606401610a12565b6012546040516397554e8f60e01b81526001600160a01b03909116906397554e8f906119be908a908c9089908c908c908b90600401614033565b6020604051808303816000875af11580156119dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0191906140a2565b611a4d5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610a12565b60008086806020019051810190611a6491906141e6565b60408051602081018490529081018290529193509150606001604051602081830303815290604052805190602001208414611ae15760405162461bcd60e51b815260206004820152600e60248201527f696e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610a12565b611aea8261152d565b6001600160a01b03168a6001600160a01b031614611b0757600080fd5b600c543360008181526017602090815260408083208784529091529020549091148015611ba857506040516331a9108f60e11b8152600481018490526001600160a01b03808d169190831690636352211e90602401602060405180830381865afa158015611b79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9d91906141b0565b6001600160a01b0316145b15611be35760405162461bcd60e51b815260206004820152600b60248201526a155b9cdd5c1c1bdc9d195960aa1b6044820152606401610a12565b6040516331a9108f60e11b8152600481018490526001600160a01b03808d169190831690636352211e90602401602060405180830381865afa158015611c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5191906141b0565b6001600160a01b0316148015611c835750600c5433600090815260176020908152604080832087845290915290205414155b15611d4d576040517f42842e0e0000000000000000000000000000000000000000000000000000000081526001600160a01b038c81166004830152306024830152604482018590528216906342842e0e90606401600060405180830381600087803b158015611cf157600080fd5b505af1158015611d05573d6000803e3d6000fd5b50505050611d1333846129d7565b60405133815283907f9f1ec8c880f76798e7b793325d625e9b60e4082a553c98f42b6cda368dd600089060200160405180910390a2611db6565b30611d578461152d565b6001600160a01b031614611dad5760405162461bcd60e51b815260206004820152601660248201527f4973206e6f742061207772617070656420746f6b656e000000000000000000006044820152606401610a12565b611db6836127af565b50909998505050505050505050565b60606001805461091a90613e4f565b6012546040516397554e8f60e01b81526000916001600160a01b0316906397554e8f90611e0f908a908d9089908c908c908b90600401614033565b6020604051808303816000875af1158015611e2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e5291906140a2565b611e9e5760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f660000000000000000000000006044820152606401610a12565b60008086806020019051810190611eb5919061420a565b915091508181604051602001611ecc92919061425b565b604051602081830303815290604052805190602001208414611f305760405162461bcd60e51b815260206004820152600e60248201527f496e76616c6964207061636b65740000000000000000000000000000000000006044820152606401610a12565b5050600e543360009081526017602090815260408083208c845290915290205550600198975050505050505050565b6001600160a01b038216331415611fb85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610a12565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6008546000906001600160a01b031633146120815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a12565b6001600160a01b03821660009081526019602052604090205460ff1615156001146120ee5760405162461bcd60e51b815260206004820152601360248201527f6d697373696e67206e66742061646472657373000000000000000000000000006044820152606401610a12565b6001600160a01b0382166000818152601960209081526040808320805460ff191690558051928352908201929092527fdb0987ab5727b17d3467eab6f86958c6b3204e475e5fbe5bac8bc796ac44939a9101611346565b919050565b6008546001600160a01b031633146121a45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a12565b601555565b6121b3338361238f565b6122255760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610a12565b61223184848484612a74565b50505050565b606061090582612af2565b6008546001600160a01b0316331461229c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610a12565b6001600160a01b0381166123185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610a12565b61127481612985565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906123568261152d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166124085760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610a12565b60006124138361152d565b9050806001600160a01b0316846001600160a01b0316148061244e5750836001600160a01b03166124438461099d565b6001600160a01b0316145b8061247e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166124998261152d565b6001600160a01b0316146125155760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610a12565b6001600160a01b0382166125905760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610a12565b61259b838383612c7d565b6125a6600082612321565b6001600160a01b03831660009081526003602052604081208054600192906125cf9084906142a9565b90915550506001600160a01b03821660009081526003602052604081208054600192906125fd9084906142c0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600c54336000908152601760209081526040808320858452909152902054146126c95760405162461bcd60e51b815260206004820152601960248201527f546f6b656e20697320616c726561647920756e6c6f636b6564000000000000006044820152606401610a12565b600e54336000908152601760209081526040808320948352939052919091205550565b610c5e828260405180602001604052806000815250612d67565b6000828152600260205260409020546001600160a01b03166127905760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610a12565b60008281526007602090815260409091208251610b649284019061353e565b61127481612de5565b6011546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015612801573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061282591906141cd565b116128725760405162461bcd60e51b815260206004820152601160248201527f6e6f20656e6f7567682062616c616e63650000000000000000000000000000006044820152606401610a12565b600f54821415610c5e576011546014546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af11580156128d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128fc91906140a2565b6129485760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572206661696c656420666f7220726563697069656e740000006044820152606401610a12565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b360145460405161191491815260200190565b600880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600e546001600160a01b038316600090815260176020908152604080832085845290915290205414612a4b5760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20697320616c7265616479206c6f636b65640000000000000000006044820152606401610a12565b600c546001600160a01b0390921660009081526017602090815260408083209383529290522055565b612a7f848484612486565b612a8b84848484612e25565b6122315760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610a12565b6000818152600260205260409020546060906001600160a01b0316612b7f5760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610a12565b60008281526007602052604081208054612b9890613e4f565b80601f0160208091040260200160405190810160405280929190818152602001828054612bc490613e4f565b8015612c115780601f10612be657610100808354040283529160200191612c11565b820191906000526020600020905b815481529060010190602001808311612bf457829003601f168201915b505050505090506000612c2f60408051602081019091526000815290565b9050805160001415612c42575092915050565b815115612c74578082604051602001612c5c9291906142d8565b60405160208183030381529060405292505050919050565b61247e84612f6e565b60065460ff1615612cd05760405162461bcd60e51b815260206004820152601e60248201527f5844563a20546f6b656e20657865637574696f6e2069732070617573656400006044820152606401610a12565b600c546001600160a01b03841660009081526017602090815260408083208584529091529020541415612d455760405162461bcd60e51b815260206004820152601960248201527f5844563a205468697320746f6b656e206973206c6f636b6564000000000000006044820152606401610a12565b6001600160a01b038316612d5c57612d5c33613064565b610b6483838361319e565b612d718383613217565b612d7e6000848484612e25565b610b645760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610a12565b612dee81613365565b60008181526007602052604090208054612e0790613e4f565b159050611274576000818152600760205260408120611274916135c2565b60006001600160a01b0384163b15612f6357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612e69903390899088908890600401614307565b6020604051808303816000875af1925050508015612ea4575060408051601f3d908101601f19168201909252612ea191810190614343565b60015b612f49573d808015612ed2576040519150601f19603f3d011682016040523d82523d6000602084013e612ed7565b606091505b508051612f415760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610a12565b805181602001fd5b6001600160e01b031916630a85bd0160e11b14905061247e565b506001949350505050565b6000818152600260205260409020546060906001600160a01b0316612ffb5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610a12565b600061301260408051602081019091526000815290565b90506000815111613032576040518060200160405280600081525061305d565b8061303c8461340c565b60405160200161304d9291906142d8565b6040516020818303038152906040525b9392505050565b6011546016546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af11580156130c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130e491906140a2565b6131565760405162461bcd60e51b815260206004820152602260248201527f5844563a205472616e73666572206661696c656420666f72207265636970696560448201527f6e740000000000000000000000000000000000000000000000000000000000006064820152608401610a12565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b360165460405161319391815260200190565b60405180910390a250565b60065460ff1615610b645760405162461bcd60e51b815260206004820152602b60248201527f4552433732315061757361626c653a20746f6b656e207472616e73666572207760448201527f68696c65207061757365640000000000000000000000000000000000000000006064820152608401610a12565b6001600160a01b03821661326d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610a12565b6000818152600260205260409020546001600160a01b0316156132d25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610a12565b6132de60008383612c7d565b6001600160a01b03821660009081526003602052604081208054600192906133079084906142c0565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006133708261152d565b905061337e81600084612c7d565b613389600083612321565b6001600160a01b03811660009081526003602052604081208054600192906133b29084906142a9565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60608161344c57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115613476578061346081614360565b915061346f9050600a83614391565b9150613450565b60008167ffffffffffffffff81111561349157613491613751565b6040519080825280601f01601f1916602001820160405280156134bb576020820181803683370190505b5090505b841561247e576134d06001836142a9565b91506134dd600a866143a5565b6134e89060306142c0565b60f81b8183815181106134fd576134fd6143b9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350613537600a86614391565b94506134bf565b82805461354a90613e4f565b90600052602060002090601f01602090048101928261356c57600085556135b2565b82601f1061358557805160ff19168380011785556135b2565b828001600101855582156135b2579182015b828111156135b2578251825591602001919060010190613597565b506135be9291506135f8565b5090565b5080546135ce90613e4f565b6000825580601f106135de575050565b601f01602090049060005260206000209081019061127491905b5b808211156135be57600081556001016135f9565b6001600160e01b03198116811461127457600080fd5b60006020828403121561363557600080fd5b813561305d8161360d565b60005b8381101561365b578181015183820152602001613643565b838111156122315750506000910152565b60008151808452613684816020860160208601613640565b601f01601f19169290920160200192915050565b60208152600061305d602083018461366c565b6000602082840312156136bd57600080fd5b5035919050565b6001600160a01b038116811461127457600080fd5b8035612145816136c4565b600080604083850312156136f757600080fd5b8235613702816136c4565b946020939093013593505050565b60008060006060848603121561372557600080fd5b8335613730816136c4565b92506020840135613740816136c4565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561378a5761378a613751565b60405290565b6040516080810167ffffffffffffffff8111828210171561378a5761378a613751565b60405160a0810167ffffffffffffffff8111828210171561378a5761378a613751565b604051601f8201601f1916810167ffffffffffffffff811182821017156137ff576137ff613751565b604052919050565b600067ffffffffffffffff82111561382157613821613751565b50601f01601f191660200190565b600061384261383d84613807565b6137d6565b905082815283838301111561385657600080fd5b828260208301376000602084830101529392505050565b60006020828403121561387f57600080fd5b813567ffffffffffffffff81111561389657600080fd5b8201601f810184136138a757600080fd5b61247e8482356020840161382f565b600082601f8301126138c757600080fd5b61305d8383356020850161382f565b801515811461127457600080fd5b8035612145816138d6565b80356006811061214557600080fd5b600060c0828403121561391057600080fd5b613918613767565b90508135613925816138d6565b8152613933602083016138ef565b6020820152613944604083016138ef565b6040820152613955606083016138ef565b606082015260808201356009811061396c57600080fd5b608082015260a082013567ffffffffffffffff81111561398b57600080fd5b613997848285016138b6565b60a08301525092915050565b600082601f8301126139b457600080fd5b8135602067ffffffffffffffff808311156139d1576139d1613751565b8260051b6139e08382016137d6565b93845285810183019383810190888611156139fa57600080fd5b84880192505b85831015613ab857823584811115613a185760008081fd5b88016080818b03601f1901811315613a305760008081fd5b613a38613790565b87830135613a45816138d6565b81526040613a548482016138ef565b8983015260608085013589811115613a6c5760008081fd5b613a7a8f8c838901016138b6565b8484015250928401359288841115613a9457600091508182fd5b613aa28e8b868801016138b6565b9083015250845250509184019190840190613a00565b98975050505050505050565b600060a08284031215613ad657600080fd5b613ade6137b3565b9050613ae9826138e4565b8152602082013567ffffffffffffffff80821115613b0657600080fd5b613b12858386016138b6565b60208401526040840135915080821115613b2b57600080fd5b613b37858386016138b6565b60408401526060840135915080821115613b5057600080fd5b613b5c858386016138fe565b60608401526080840135915080821115613b7557600080fd5b50613b82848285016139a3565b60808301525092915050565b600080600080600080600060e0888a031215613ba957600080fd5b613bb2886136d9565b965060208801359550604088013567ffffffffffffffff80821115613bd657600080fd5b613be28b838c016138b6565b965060608a0135915080821115613bf857600080fd5b613c048b838c016138b6565b955060808a0135915080821115613c1a57600080fd5b613c268b838c01613ac4565b945060a08a0135915080821115613c3c57600080fd5b50613c498a828b01613ac4565b92505060c0880135905092959891949750929550565b600060208284031215613c7157600080fd5b813561305d816136c4565b60008060408385031215613c8f57600080fd5b823591506020830135613ca1816136c4565b809150509250929050565b600080600080600080600080610100898b031215613cc957600080fd5b613cd2896136d9565b97506020890135965060408901359550606089013567ffffffffffffffff80821115613cfd57600080fd5b613d098c838d016138b6565b965060808b0135915080821115613d1f57600080fd5b613d2b8c838d016138b6565b955060a08b0135915080821115613d4157600080fd5b613d4d8c838d01613ac4565b945060c08b0135915080821115613d6357600080fd5b50613d708b828c01613ac4565b92505060e089013590509295985092959890939650565b60008060408385031215613d9a57600080fd5b8235613da5816136c4565b91506020830135613ca1816138d6565b60008060008060808587031215613dcb57600080fd5b8435613dd6816136c4565b93506020850135613de6816136c4565b925060408501359150606085013567ffffffffffffffff811115613e0957600080fd5b613e15878288016138b6565b91505092959194509250565b60008060408385031215613e3457600080fd5b8235613e3f816136c4565b91506020830135613ca1816136c4565b600181811c90821680613e6357607f821691505b60208210811415613e8457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052602160045260246000fd5b60068110613eb057613eb0613e8a565b9052565b600081518084526020808501808196508360051b8101915082860160005b85811015613f435782840389528151608081511515865286820151613ef988880182613ea0565b506040808301518282890152613f118389018261366c565b9250505060608083015192508682038188015250613f2f818361366c565b9a87019a9550505090840190600101613ed2565b5091979650505050505050565b8051151582526000602082015160a06020850152613f7160a085018261366c565b905060408301518482036040860152613f8a828261366c565b915050606083015184820360608601528051151582526020810151613fb26020840182613ea0565b506040810151613fc56040840182613ea0565b506060810151613fd86060840182613ea0565b50608081015160098110613fee57613fee613e8a565b8060808401525060a0810151905060c060a083015261401060c083018261366c565b9150506080830151848203608086015261402a8282613eb4565b95945050505050565b8681526001600160a01b038616602082015260c06040820152600061405b60c0830187613f50565b828103606084015261406d818761366c565b90508281036080840152614081818661366c565b905082810360a08401526140958185613f50565b9998505050505050505050565b6000602082840312156140b457600080fd5b815161305d816138d6565b600082601f8301126140d057600080fd5b81516140de61383d82613807565b8181528460208386010111156140f357600080fd5b61247e826020830160208701613640565b6000806000806080858703121561411a57600080fd5b84519350602085015167ffffffffffffffff81111561413857600080fd5b614144878288016140bf565b9350506040850151614155816136c4565b6060959095015193969295505050565b8481526000845161417d816020850160208901613640565b80830190506bffffffffffffffffffffffff198560601b1660208201528360348201526054810191505095945050505050565b6000602082840312156141c257600080fd5b815161305d816136c4565b6000602082840312156141df57600080fd5b5051919050565b600080604083850312156141f957600080fd5b505080516020909101519092909150565b6000806040838503121561421d57600080fd5b8251614228816136c4565b602084015190925067ffffffffffffffff81111561424557600080fd5b614251858286016140bf565b9150509250929050565b6bffffffffffffffffffffffff198360601b16815260008251614285816014850160208701613640565b919091016014019392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156142bb576142bb614293565b500390565b600082198211156142d3576142d3614293565b500190565b600083516142ea818460208801613640565b8351908301906142fe818360208801613640565b01949350505050565b60006001600160a01b03808716835280861660208401525083604083015260806060830152614339608083018461366c565b9695505050505050565b60006020828403121561435557600080fd5b815161305d8161360d565b600060001982141561437457614374614293565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826143a0576143a061437b565b500490565b6000826143b4576143b461437b565b500690565b634e487b7160e01b600052603260045260246000fdfea26469706673582212209800acea5cdeb266d8a13e9403c402ca03243036785761b0bbbf9b7ad44856c764736f6c634300080b0033";

type WXDVConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WXDVConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WXDV__factory extends ContractFactory {
  constructor(...args: WXDVConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WXDV> {
    return super.deploy(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      chain,
      overrides || {}
    ) as Promise<WXDV>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tokenERC20: string,
    anconprotocolAddr: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tokenERC20,
      anconprotocolAddr,
      chain,
      overrides || {}
    );
  }
  attach(address: string): WXDV {
    return super.attach(address) as WXDV;
  }
  connect(signer: Signer): WXDV__factory {
    return super.connect(signer) as WXDV__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WXDVInterface {
    return new utils.Interface(_abi) as WXDVInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): WXDV {
    return new Contract(address, _abi, signerOrProvider) as WXDV;
  }
}
