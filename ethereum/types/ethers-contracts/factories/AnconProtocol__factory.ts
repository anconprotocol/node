/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AnconProtocol, AnconProtocolInterface } from "../AnconProtocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enrolledStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "roothash",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct AnconProtocol.Header",
        name: "header",
        type: "tuple",
      },
    ],
    name: "AccountRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "roothash",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct AnconProtocol.Header",
        name: "header",
        type: "tuple",
      },
    ],
    name: "HeaderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "roothash",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct AnconProtocol.Header",
        name: "header",
        type: "tuple",
      },
    ],
    name: "ProofPacketSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "ENROLL_DAG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ENROLL_PAYMENT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBMIT_PAYMENT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountByAddrProofs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "accountProofs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accountRegistrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dagRegistrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIavlSpec",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leafSpec",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "childOrder",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "childSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minPrefixLength",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPrefixLength",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "emptyChild",
                type: "bytes",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
            ],
            internalType: "struct Ics23Helper.InnerSpec",
            name: "innerSpec",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDepth",
            type: "uint256",
          },
        ],
        internalType: "struct Ics23Helper.ProofSpec",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "proofs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "relayerHashTable",
    outputs: [
      {
        internalType: "bytes",
        name: "roothash",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leafSpec",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "childOrder",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "childSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minPrefixLength",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPrefixLength",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "emptyChild",
                type: "bytes",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
            ],
            internalType: "struct Ics23Helper.InnerSpec",
            name: "innerSpec",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDepth",
            type: "uint256",
          },
        ],
        internalType: "struct Ics23Helper.ProofSpec",
        name: "spec",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "root",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "whitelistedDagGraph",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractIdentifier",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "dagAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "setWhitelistedDagGraph",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "rootHash",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "updateRelayerHeader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setAccountRegistrationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setDagGraphFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
    ],
    name: "getProtocolHeader",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "roothash",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct AnconProtocol.Header",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "did",
        type: "bytes",
      },
    ],
    name: "getProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "hasProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "did",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "enrollL2Account",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "submitPacketWithProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "exProof",
        type: "tuple",
      },
    ],
    name: "verifyProofWithKV",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527faa38c8fcdb8500f6802157621989c44502acc94ca3eb31e1547a766ce91448b26000557f2f6bb624cb316ab670df79a1530a1105c05bdac88a2221c0a2c3efa065e294666001557fa8a7d14acee15b581bdc62c67a1b2711ec58a960850b336a002a03c0f3367b3b60025560006006556000600755600060085560006009553480156200009157600080fd5b5060405162003c8538038062003c85833981016040819052620000b491620000ec565b60038054336001600160a01b031991821617909155600580549091166001600160a01b03939093169290921790915560095562000128565b600080604083850312156200010057600080fd5b82516001600160a01b03811681146200011857600080fd5b6020939093015192949293505050565b613b4d80620001386000396000f3fe6080604052600436106101d85760003560e01c80638406c07911610102578063b0e21e8a11610095578063e9cbd82211610064578063e9cbd82214610582578063e9f49b53146105a2578063ee983e8c146105c2578063fc7ea420146105d857600080fd5b8063b0e21e8a146104fc578063c284bdf314610512578063d56a07e314610527578063d7c9b5691461056257600080fd5b8063998b32e8116100d1578063998b32e814610493578063a21c87d8146104a6578063b05cedcd146104bc578063b0d264e7146104dc57600080fd5b80638406c079146104205780638b178bec146104405780638da5cb5b1461046057806397554e8f1461048057600080fd5b806351cff8d91161017a5780636a326ab1116101495780636a326ab11461038f57806373d15717146103af578063787dce3d146103cf5780637a24f02b146103ef57600080fd5b806351cff8d91461030c5780635dad28de1461032c5780635eccc37114610342578063693ac4fb1461036f57600080fd5b806327dcd78c116101b657806327dcd78c146102765780633aeac4e11461029857806340ae5ffa146102b857806351ceefe7146102dc57600080fd5b806301644028146101dd57806305c24853146102135780630c1944a514610261575b600080fd5b3480156101e957600080fd5b506101fd6101f8366004612d08565b6105ee565b60405161020a9190612d99565b60405180910390f35b34801561021f57600080fd5b5061024961022e366004612dac565b600d602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161020a565b61027461026f366004612dfe565b610693565b005b34801561028257600080fd5b5061028b6107ff565b60405161020a9190612f09565b3480156102a457600080fd5b506102746102b3366004612fce565b610913565b3480156102c457600080fd5b506102ce60005481565b60405190815260200161020a565b3480156102e857600080fd5b506102fc6102f73660046132d8565b610ab9565b604051901515815260200161020a565b34801561031857600080fd5b5061027461032736600461336a565b610b70565b34801561033857600080fd5b506102ce60075481565b34801561034e57600080fd5b5061036261035d366004612dac565b610c76565b60405161020a9190613387565b34801561037b57600080fd5b506101fd61038a366004612d08565b610d7d565b34801561039b57600080fd5b506102746103aa36600461336a565b610e2d565b3480156103bb57600080fd5b506101fd6103ca36600461336a565b610e73565b3480156103db57600080fd5b506102746103ea366004612dac565b610e8c565b3480156103fb57600080fd5b5061040f61040a366004612dac565b610ea8565b60405161020a9594939291906133da565b34801561042c57600080fd5b50600454610249906001600160a01b031681565b34801561044c57600080fd5b5061027461045b366004612dac565b610f63565b34801561046c57600080fd5b50600354610249906001600160a01b031681565b6102fc61048e366004613414565b610f7f565b6102fc6104a13660046132d8565b6111f9565b3480156104b257600080fd5b506102ce60085481565b3480156104c857600080fd5b506102746104d73660046134da565b6113df565b3480156104e857600080fd5b506102746104f73660046136ae565b61158f565b34801561050857600080fd5b506102ce60065481565b34801561051e57600080fd5b506102ce6116fe565b34801561053357600080fd5b506102fc610542366004612d08565b8051602081830181018051600c8252928201919093012091525460ff1681565b34801561056e57600080fd5b5061027461057d366004612dac565b61174b565b34801561058e57600080fd5b50600554610249906001600160a01b031681565b3480156105ae57600080fd5b506102fc6105bd366004612d08565b611767565b3480156105ce57600080fd5b506102ce60015481565b3480156105e457600080fd5b506102ce60025481565b8051602081830181018051600a825292820191909301209152805461061290613780565b80601f016020809104026020016040519081016040528092919081815260200182805461063e90613780565b801561068b5780601f106106605761010080835404028352916020019161068b565b820191906000526020600020905b81548152906001019060200180831161066e57829003601f168201915b505050505081565b6003546001600160a01b031633146106f25760405162461bcd60e51b815260206004820152600d60248201527f696e76616c6964206f776e65720000000000000000000000000000000000000060448201526064015b60405180910390fd5b6040805160008082526020820180845288905260ff861692820192909252606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610746573d6000803e3d6000fd5b505050602060405103519050806001600160a01b0316856001600160a01b0316146107b35760405162461bcd60e51b815260206004820152600f60248201527f696e76616c69642061646472657373000000000000000000000000000000000060448201526064016106e9565b6107bf60015433611792565b6000958652600d6020526040909520805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039096169590951790945550505050565b610807612aa6565b61080f612aa6565b604080516002808252606082018352600092602083019080368337019050509050600081600081518110610845576108456137bb565b602002602001018181525050600181600181518110610866576108666137bb565b6020026020010181815250506040518060c001604052806001151581526020016001600581111561089957610899612e4e565b815260200160008152602001600181526020016001815260408051808201825260018082526000602083810182905294850192909252938652815160c081018352858152602181850152600481840152600c60608201528251938401909252825260808101919091529060a0820152602083015250919050565b6003546001600160a01b0316331461092a57600080fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610971573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099591906137d1565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015610a01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2591906137ea565b610a715760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c6564000000000000000000000000000000000060448201526064016106e9565b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051610aac91815260200190565b60405180910390a2505050565b6000610b6582610ac76107ff565b6000888152600e602052604090208054610ae090613780565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0c90613780565b8015610b595780601f10610b2e57610100808354040283529160200191610b59565b820191906000526020600020905b815481529060010190602001808311610b3c57829003601f168201915b5050505050878761158f565b506001949350505050565b6003546001600160a01b03163314610b8757600080fd5b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610bd6576040519150601f19603f3d011682016040523d82523d6000602084013e610bdb565b606091505b509150915081610c2d5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016106e9565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610c6891815260200190565b60405180910390a250505050565b6040805160a0810182526060808252600060208301819052928201839052810182905260808101919091526000828152600e602052604090819020815160a08101909252805482908290610cc990613780565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf590613780565b8015610d425780601f10610d1757610100808354040283529160200191610d42565b820191906000526020600020905b815481529060010190602001808311610d2557829003601f168201915b505050918352505060018201546020820152600282015460ff1660408201526003820154606082015260049091015460809091015292915050565b6060600a82604051610d8f9190613807565b90815260200160405180910390208054610da890613780565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd490613780565b8015610e215780601f10610df657610100808354040283529160200191610e21565b820191906000526020600020905b815481529060010190602001808311610e0457829003601f168201915b50505050509050919050565b6003546001600160a01b03163314610e4457600080fd5b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b602052600090815260409020805461061290613780565b6003546001600160a01b03163314610ea357600080fd5b600655565b600e60205260009081526040902080548190610ec390613780565b80601f0160208091040260200160405190810160405280929190818152602001828054610eef90613780565b8015610f3c5780601f10610f1157610100808354040283529160200191610f3c565b820191906000526020600020905b815481529060010190602001808311610f1f57829003601f168201915b505050506001830154600284015460038501546004909501549394919360ff909116925085565b6003546001600160a01b03163314610f7a57600080fd5b600755565b6000600c84604051610f919190613807565b9081526040519081900360200190205460ff16156110165760405162461bcd60e51b8152602060048201526024808201527f70726f6f6620686173206265656e207375626d69747465642028666f756e642060448201527f6b6579290000000000000000000000000000000000000000000000000000000060648201526084016106e9565b8380519060200120826020015180519060200120146110655760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964206b657960a81b60448201526064016106e9565b846020015180519060200120600b6000886001600160a01b03166001600160a01b031681526020019081526020016000206040516110a39190613823565b6040518091039020146110f85760405162461bcd60e51b815260206004820152601060248201527f696e76616c69642075736572206b65790000000000000000000000000000000060448201526064016106e9565b6111028786611ba4565b61114e5760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420757365722070726f6f66000000000000000000000000000060448201526064016106e9565b6111588783611ba4565b61116157600080fd5b6001600c856040516111739190613807565b908152604051908190036020019020805491151560ff199092169190911790556002546111a09087611792565b6000878152600e60205260409081902090517feb70717aed86b7b74922bf3c897132cf2b351777500f47ba85892d9a8b9ded11916111e491879187918c9190613945565b60405180910390a15060019695505050505050565b600083805190602001208260200151805190602001201461124a5760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964206b657960a81b60448201526064016106e9565b6112548583611ba4565b6112a05760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f660000000000000000000000000000000000000060448201526064016106e9565b600a836040516112b09190613807565b9081526040519081900360200181206112c891613823565b6040518091039020848051906020012014156113265760405162461bcd60e51b815260206004820152601760248201527f7573657220616c7265616479207265676973746572656400000000000000000060448201526064016106e9565b61133260005433611792565b83600a846040516113439190613807565b90815260200160405180910390209080519060200190611364929190612b03565b50336000908152600b60209081526040909120855161138592870190612b03565b506000858152600e60205260409081902090517f6c192fb78c273524a335413437de624fbbb70b8d397c3da1125cf3bc67ee8d01916113cc91600191889188918b9161398f565b60405180910390a1506001949350505050565b6040805160008082526020820180845289905260ff861692820192909252606081018490526080810183905260019060a0016020604051602081039080840390855afa158015611433573d6000803e3d6000fd5b505060408051601f19015160008a8152600d60205291909120549092506001600160a01b0380841691161490506114ac5760405162461bcd60e51b815260206004820152601760248201527f696e76616c6964206e6574776f726b206d6f6e696b657200000000000000000060448201526064016106e9565b6040805160a081018252878152602080820188905260ff871682840152606082018690526080820185905260008a8152600e82529290922081518051929391926114f99284920190612b03565b506020820151816001015560408201518160020160006101000a81548160ff021916908360ff1602179055506060820151816003015560808201518160040155905050867f8ddc58a9c09dd6d097e7bb02a8823cf939ba9b889769ce9da141e6c7c6c26570600e60008a815260200190815260200160002060405161157e91906139e2565b60405180910390a250505050505050565b6115998585611c62565b6115a7856020015183611d8a565b6115f35760405162461bcd60e51b815260206004820181905260248201527f50726f7669646564206b657920646f65736e2774206d617463682070726f6f6660448201526064016106e9565b611601856040015182611d8a565b6116735760405162461bcd60e51b815260206004820152602260248201527f50726f76696465642076616c756520646f65736e2774206d617463682070726f60448201527f6f6600000000000000000000000000000000000000000000000000000000000060648201526084016106e9565b61168561167f86611dba565b84611d8a565b6116f75760405162461bcd60e51b815260206004820152602c60248201527f43616c63756c636174656420726f6f7420646f65736e2774206d61746368207060448201527f726f766964656420726f6f74000000000000000000000000000000000000000060648201526084016106e9565b5050505050565b60006009543060405160200161173092919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60405160208183030381529060405280519060200120905090565b6003546001600160a01b0316331461176257600080fd5b600855565b6000600c826040516117799190613807565b9081526040519081900360200190205460ff1692915050565b6005546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156117db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ff91906137d1565b1161184c5760405162461bcd60e51b815260206004820152601160248201527f6e6f20656e6f7567682062616c616e636500000000000000000000000000000060448201526064016106e9565b600154821415611968576005546008546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af11580156118b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d691906137ea565b6119225760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572206661696c656420666f7220726563697069656e7400000060448201526064016106e9565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b360085460405161195f91815260200190565b60405180910390a25b600054821415611a84576005546007546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af11580156119ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f291906137ea565b611a3e5760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572206661696c656420666f7220726563697069656e7400000060448201526064016106e9565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b3600754604051611a7b91815260200190565b60405180910390a25b600254821415611ba0576005546006546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af1158015611aea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b0e91906137ea565b611b5a5760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572206661696c656420666f7220726563697069656e7400000060448201526064016106e9565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b3600654604051611b9791815260200190565b60405180910390a25b5050565b6000611c5882611bb26107ff565b6000868152600e602052604090208054611bcb90613780565b80601f0160208091040260200160405190810160405280929190818152602001828054611bf790613780565b8015611c445780601f10611c1957610100808354040283529160200191611c44565b820191906000526020600020905b815481529060010190602001808311611c2757829003601f168201915b50505050508560200151866040015161158f565b5060015b92915050565b611c70826060015182611e29565b60608101511580611c8a5750806060015182608001515110155b611cd65760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f707320646570746820746f6f2073686f7274000000000000000060448201526064016106e9565b60408101511580611cf05750806040015182608001515110155b611d3c5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f707320646570746820746f6f2073686f7274000000000000000060448201526064016106e9565b60005b826080015151811015611d8557611d7383608001518281518110611d6557611d656137bb565b602002602001015183612073565b80611d7d81613a0b565b915050611d3f565b505050565b60008151835114611d9d57506000611c5c565b825160208381018281209186019283209091145b95945050505050565b60606000611dd583606001518460200151856040015161223e565b905060005b836080015151811015611e2257611e0e84608001518281518110611e0057611e006137bb565b60200260200101518361235f565b915080611e1a81613a0b565b915050611dda565b5092915050565b8051602001516005811115611e4057611e40612e4e565b82602001516005811115611e5657611e56612e4e565b14611ea35760405162461bcd60e51b815260206004820152601160248201527f556e657870656374656420486173684f7000000000000000000000000000000060448201526064016106e9565b8051604001516005811115611eba57611eba612e4e565b82604001516005811115611ed057611ed0612e4e565b14611f1d5760405162461bcd60e51b815260206004820152601560248201527f556e657870656374656420507265686173684b6579000000000000000000000060448201526064016106e9565b8051606001516005811115611f3457611f34612e4e565b82606001516005811115611f4a57611f4a612e4e565b14611f975760405162461bcd60e51b815260206004820152601560248201527f556e657870656374656420507265686173684b6579000000000000000000000060448201526064016106e9565b8051608001516008811115611fae57611fae612e4e565b82608001516008811115611fc457611fc4612e4e565b146120115760405162461bcd60e51b815260206004820152601a60248201527f556e657870656374656c65616653706563204c656e6774684f7000000000000060448201526064016106e9565b6120278260a00151826000015160a0015161240e565b611ba05760405162461bcd60e51b815260206004820152601760248201527f4c6561664f704c69623a2077726f6e672070726566697800000000000000000060448201526064016106e9565b805160200151600581111561208a5761208a612e4e565b826020015160058111156120a0576120a0612e4e565b146120ed5760405162461bcd60e51b815260206004820152601160248201527f556e657870656374656420486173684f7000000000000000000000000000000060448201526064016106e9565b6121038260400151826000015160a0015161240e565b156121505760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f704c69623a2077726f6e6720707265666978000000000000000060448201526064016106e9565b80602001516040015182604001515110156121ad5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f702070726566697820746f6f2073686f7274000000000000000060448201526064016106e9565b60208082015190810151905151600091906121ca90600190613a26565b6121d49190613a3d565b9050808260200151606001516121ea9190613a5c565b8360400151511115611d855760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f702070726566697820746f6f2073686f7274000000000000000060448201526064016106e9565b606060008351116122915760405162461bcd60e51b815260206004820152601160248201527f4c656166206f70206e65656473206b657900000000000000000000000000000060448201526064016106e9565b60008251116122e25760405162461bcd60e51b815260206004820152601360248201527f4c656166206f70206e656564732076616c75650000000000000000000000000060448201526064016106e9565b60008460a001516122fc86604001518760800151876124d1565b60405160200161230d929190613a74565b60405160208183030381529060405261232f86606001518760800151866124d1565b604051602001612340929190613a74565b6040516020818303038152906040529050611db18560200151826124ee565b606060008251116123b25760405162461bcd60e51b815260206004820152601a60248201527f496e6e6572206f70206e65656473206368696c642076616c756500000000000060448201526064016106e9565b61240783602001518460400151846040516020016123d1929190613a74565b60408051601f198184030181529082905260608701516123f392602001613a74565b6040516020818303038152906040526124ee565b9392505050565b600081518351101561242257506000611c5c565b60005b82518110156124c757828181518110612440576124406137bb565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191684828151811061247f5761247f6137bb565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016146124b5576000915050611c5c565b806124bf81613a0b565b915050612425565b5060019392505050565b60606124e6836124e1868561270c565b612739565b949350505050565b6060600183600581111561250457612504612e4e565b14156125695761256260028360405161251d9190613807565b602060405180830381855afa15801561253a573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061255d91906137d1565b6128cd565b9050611c5c565b600283600581111561257d5761257d612e4e565b14156125cb5760405162461bcd60e51b815260206004820152601660248201527f534841353132206e6f7420696d706c656d656e7465640000000000000000000060448201526064016106e9565b60048360058111156125df576125df612e4e565b1415612633576125626003836040516125f89190613807565b602060405180830381855afa158015612615573d6000803e3d6000fd5b5050506040515160601b6bffffffffffffffffffffffff19166128cd565b600583600581111561264757612647612e4e565b14156126c457600060028360405161265f9190613807565b602060405180830381855afa15801561267c573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061269f91906137d1565b90506126bc60036126af836128cd565b6040516125f89190613807565b915050611c5c565b60405162461bcd60e51b815260206004820152601260248201527f556e737570706f7274656420686173686f70000000000000000000000000000060448201526064016106e9565b6060600083600581111561272257612722612e4e565b141561272f575080611c5c565b61240783836124ee565b6060600083600881111561274f5761274f612e4e565b141561275c575080611c5c565b600183600881111561277057612770612e4e565b14156127a85761278082516128f7565b82604051602001612792929190613a74565b6040516020818303038152906040529050611c5c565b60078360088111156127bc576127bc612e4e565b141561281a5781516020146128135760405162461bcd60e51b815260206004820152601160248201527f457870656374656420333220627974657300000000000000000000000000000060448201526064016106e9565b5080611c5c565b600883600881111561282e5761282e612e4e565b14156128855781516040146128135760405162461bcd60e51b815260206004820152601160248201527f457870656374656420363420627974657300000000000000000000000000000060448201526064016106e9565b60405162461bcd60e51b815260206004820152601460248201527f556e737570706f72746564206c656e6774686f7000000000000000000000000060448201526064016106e9565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b60608160015b607f8267ffffffffffffffff1611156129355760078267ffffffffffffffff16901c915060018161292e9190613aa3565b90506128fd565b60008167ffffffffffffffff1667ffffffffffffffff81111561295a5761295a612be2565b6040519080825280601f01601f191660200182016040528015612984576020820181803683370190505b50905084925060005b8267ffffffffffffffff168167ffffffffffffffff161015612a225783607f1660801760f81b828267ffffffffffffffff16815181106129cf576129cf6137bb565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060078467ffffffffffffffff16901c93508080612a1a90613ac6565b91505061298d565b507f7f0000000000000000000000000000000000000000000000000000000000000081612a50600185613aee565b67ffffffffffffffff1681518110612a6a57612a6a6137bb565b0160200180519091167fff000000000000000000000000000000000000000000000000000000000000001690600082901a905350949350505050565b60408051610140810190915260006080820181815260a0830182905260c0830182905260e083018290526101008301919091526060610120830152815260208101612aef612b87565b815260200160008152602001600081525090565b828054612b0f90613780565b90600052602060002090601f016020900481019282612b315760008555612b77565b82601f10612b4a57805160ff1916838001178555612b77565b82800160010185558215612b77579182015b82811115612b77578251825591602001919060010190612b5c565b50612b83929150612bcd565b5090565b6040518060c00160405280606081526020016000815260200160008152602001600081526020016060815260200160006005811115612bc857612bc8612e4e565b905290565b5b80821115612b835760008155600101612bce565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612c1b57612c1b612be2565b60405290565b6040516080810167ffffffffffffffff81118282101715612c1b57612c1b612be2565b60405160a0810167ffffffffffffffff81118282101715612c1b57612c1b612be2565b604051601f8201601f1916810167ffffffffffffffff81118282101715612c9057612c90612be2565b604052919050565b600082601f830112612ca957600080fd5b813567ffffffffffffffff811115612cc357612cc3612be2565b612cd6601f8201601f1916602001612c67565b818152846020838601011115612ceb57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215612d1a57600080fd5b813567ffffffffffffffff811115612d3157600080fd5b6124e684828501612c98565b60005b83811015612d58578181015183820152602001612d40565b83811115612d67576000848401525b50505050565b60008151808452612d85816020860160208601612d3d565b601f01601f19169290920160200192915050565b6020815260006124076020830184612d6d565b600060208284031215612dbe57600080fd5b5035919050565b6001600160a01b0381168114612dda57600080fd5b50565b8035612de881612dc5565b919050565b803560ff81168114612de857600080fd5b600080600080600060a08688031215612e1657600080fd5b853594506020860135612e2881612dc5565b9350612e3660408701612ded565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052602160045260246000fd5b60068110612e7457612e74612e4e565b9052565b805160c080845281519084018190526000916020919082019060e0860190845b81811015612eb457835183529284019291840191600101612e98565b505082850151838701526040850151604087015260608501516060870152608085015192508581036080870152612eeb8184612d6d565b9250505060a0830151612f0160a0860182612e64565b509392505050565b6020815260008251608060208401528051151560a08401526020810151612f3360c0850182612e64565b506040810151612f4660e0850182612e64565b506060810151612f5a610100850182612e64565b50608081015160098110612f7057612f70612e4e565b61012084015260a0015160c0610140840152612f90610160840182612d6d565b90506020840151601f19848303016040850152612fad8282612e78565b91505060408401516060840152606084015160808401528091505092915050565b60008060408385031215612fe157600080fd5b8235612fec81612dc5565b91506020830135612ffc81612dc5565b809150509250929050565b8015158114612dda57600080fd5b8035612de881613007565b803560068110612de857600080fd5b600060c0828403121561304157600080fd5b613049612bf8565b9050813561305681613007565b815261306460208301613020565b602082015261307560408301613020565b604082015261308660608301613020565b606082015260808201356009811061309d57600080fd5b608082015260a082013567ffffffffffffffff8111156130bc57600080fd5b6130c884828501612c98565b60a08301525092915050565b600067ffffffffffffffff8211156130ee576130ee612be2565b5060051b60200190565b600082601f83011261310957600080fd5b8135602061311e613119836130d4565b612c67565b82815260059290921b8401810191818101908684111561313d57600080fd5b8286015b8481101561320357803567ffffffffffffffff808211156131625760008081fd5b908801906080828b03601f190181131561317c5760008081fd5b613184612c21565b8784013561319181613007565b815260406131a0858201613020565b89830152606080860135858111156131b85760008081fd5b6131c68f8c838a0101612c98565b84840152509285013592848411156131e057600091508182fd5b6131ee8e8b86890101612c98565b90830152508652505050918301918301613141565b509695505050505050565b600060a0828403121561322057600080fd5b613228612c44565b905061323382613015565b8152602082013567ffffffffffffffff8082111561325057600080fd5b61325c85838601612c98565b6020840152604084013591508082111561327557600080fd5b61328185838601612c98565b6040840152606084013591508082111561329a57600080fd5b6132a68583860161302f565b606084015260808401359150808211156132bf57600080fd5b506132cc848285016130f8565b60808301525092915050565b600080600080608085870312156132ee57600080fd5b84359350602085013567ffffffffffffffff8082111561330d57600080fd5b61331988838901612c98565b9450604087013591508082111561332f57600080fd5b61333b88838901612c98565b9350606087013591508082111561335157600080fd5b5061335e8782880161320e565b91505092959194509250565b60006020828403121561337c57600080fd5b813561240781612dc5565b602081526000825160a060208401526133a360c0840182612d6d565b90506020840151604084015260ff604085015116606084015260608401516080840152608084015160a08401528091505092915050565b60a0815260006133ed60a0830188612d6d565b905085602083015260ff851660408301528360608301528260808301529695505050505050565b60008060008060008060c0878903121561342d57600080fd5b8635955061343d60208801612ddd565b9450604087013567ffffffffffffffff8082111561345a57600080fd5b6134668a838b0161320e565b9550606089013591508082111561347c57600080fd5b6134888a838b01612c98565b9450608089013591508082111561349e57600080fd5b6134aa8a838b01612c98565b935060a08901359150808211156134c057600080fd5b506134cd89828a0161320e565b9150509295509295509295565b60008060008060008060c087890312156134f357600080fd5b86359550602087013567ffffffffffffffff81111561351157600080fd5b61351d89828a01612c98565b9550506040870135935061353360608801612ded565b92506080870135915060a087013590509295509295509295565b600082601f83011261355e57600080fd5b8135602061356e613119836130d4565b82815260059290921b8401810191818101908684111561358d57600080fd5b8286015b848110156132035780358352918301918301613591565b6000608082840312156135ba57600080fd5b6135c2612c21565b9050813567ffffffffffffffff808211156135dc57600080fd5b6135e88583860161302f565b835260208401359150808211156135fe57600080fd5b9083019060c0828603121561361257600080fd5b61361a612bf8565b82358281111561362957600080fd5b6136358782860161354d565b82525060208301356020820152604083013560408201526060830135606082015260808301358281111561366857600080fd5b61367487828601612c98565b60808301525061368660a08401613020565b60a0820152806020850152505050604082013560408201526060820135606082015292915050565b600080600080600060a086880312156136c657600080fd5b853567ffffffffffffffff808211156136de57600080fd5b6136ea89838a0161320e565b9650602088013591508082111561370057600080fd5b61370c89838a016135a8565b9550604088013591508082111561372257600080fd5b61372e89838a01612c98565b9450606088013591508082111561374457600080fd5b61375089838a01612c98565b9350608088013591508082111561376657600080fd5b5061377388828901612c98565b9150509295509295909350565b600181811c9082168061379457607f821691505b602082108114156137b557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156137e357600080fd5b5051919050565b6000602082840312156137fc57600080fd5b815161240781613007565b60008251613819818460208701612d3d565b9190910192915050565b600080835461383181613780565b60018281168015613849576001811461385a57613889565b60ff19841687528287019450613889565b8760005260208060002060005b858110156138805781548a820152908401908201613867565b50505082870194505b50929695505050505050565b60a0825260008082546138a781613780565b8060a087015260c06001808416600081146138c957600181146138dd5761390e565b60ff1985168984015260e08901955061390e565b8760005260208060002060005b868110156139055781548c82018701529084019082016138ea565b8b018501975050505b508601546020880152505050600283015460ff16604085015260038301546060850152600490920154608090930192909252919050565b6080815260006139586080830187612d6d565b828103602084015261396a8187612d6d565b905084604084015282810360608401526139848185613895565b979650505050505050565b851515815260a0602082015260006139aa60a0830187612d6d565b82810360408401526139bc8187612d6d565b905084606084015282810360808401526139d68185613895565b98975050505050505050565b6020815260006124076020830184613895565b634e487b7160e01b600052601160045260246000fd5b6000600019821415613a1f57613a1f6139f5565b5060010190565b600082821015613a3857613a386139f5565b500390565b6000816000190483118215151615613a5757613a576139f5565b500290565b60008219821115613a6f57613a6f6139f5565b500190565b60008351613a86818460208801612d3d565b835190830190613a9a818360208801612d3d565b01949350505050565b600067ffffffffffffffff808316818516808303821115613a9a57613a9a6139f5565b600067ffffffffffffffff80831681811415613ae457613ae46139f5565b6001019392505050565b600067ffffffffffffffff83811690831681811015613b0f57613b0f6139f5565b03939250505056fea2646970667358221220775d7b42a009f406406cab56b6c489c5c538fed1c8e1d0e2eaac4c2d6b3aded364736f6c634300080b0033";

type AnconProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnconProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnconProtocol__factory extends ContractFactory {
  constructor(...args: AnconProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    tokenAddress: string,
    network: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AnconProtocol> {
    return super.deploy(
      tokenAddress,
      network,
      overrides || {}
    ) as Promise<AnconProtocol>;
  }
  getDeployTransaction(
    tokenAddress: string,
    network: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenAddress, network, overrides || {});
  }
  attach(address: string): AnconProtocol {
    return super.attach(address) as AnconProtocol;
  }
  connect(signer: Signer): AnconProtocol__factory {
    return super.connect(signer) as AnconProtocol__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnconProtocolInterface {
    return new utils.Interface(_abi) as AnconProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnconProtocol {
    return new Contract(address, _abi, signerOrProvider) as AnconProtocol;
  }
}
