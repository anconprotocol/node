/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AnconProtocol, AnconProtocolInterface } from "../AnconProtocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "starterFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startupFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enrolledStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
    ],
    name: "AccountRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
    ],
    name: "HeaderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
    ],
    name: "ProofPacketSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "tier",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "TierAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "staked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "includedBlocks",
        type: "uint256",
      },
    ],
    name: "TierUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "INCLUDED_BLOCKS_EPOCH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountByAddrProofs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "accountProofs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dagGraphSubscriptions",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "includedBlocks",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "incentiveBlocksMonthly",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "incentivePercentageMonthly",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "includedBlocksStarted",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIavlSpec",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leafSpec",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "childOrder",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "childSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minPrefixLength",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPrefixLength",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "emptyChild",
                type: "bytes",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
            ],
            internalType: "struct Ics23Helper.InnerSpec",
            name: "innerSpec",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDepth",
            type: "uint256",
          },
        ],
        internalType: "struct Ics23Helper.ProofSpec",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "latestRootHashTable",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "proofs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "relayerHashTable",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "seq",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tiers",
    outputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "includedBlocks",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "incentiveBlocksMonthly",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "incentivePercentageMonthly",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "includedBlocksStarted",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalHeaderUpdatesByDagGraph",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalSubmittedByDagGraphUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leafSpec",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "childOrder",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "childSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minPrefixLength",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPrefixLength",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "emptyChild",
                type: "bytes",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
            ],
            internalType: "struct Ics23Helper.InnerSpec",
            name: "innerSpec",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDepth",
            type: "uint256",
          },
        ],
        internalType: "struct Ics23Helper.ProofSpec",
        name: "spec",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "root",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "whitelistedDagGraph",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractIdentifier",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "usernonce",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "verifyContractIdentifier",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "dagAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "tier",
        type: "bytes32",
      },
    ],
    name: "registerDagGraphTier",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "rootHash",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    name: "updateRelayerHeader",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "includedBlocks",
        type: "uint256",
      },
    ],
    name: "addTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "includedBlocks",
        type: "uint256",
      },
    ],
    name: "setTierSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
    ],
    name: "getProtocolHeader",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "did",
        type: "bytes",
      },
    ],
    name: "getProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "hasProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "did",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "enrollL2Account",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "submitPacketWithProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "exProof",
        type: "tuple",
      },
    ],
    name: "verifyProofWithKV",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060035562030d406010553480156200001d57600080fd5b506040516200416e3803806200416e833981016040819052620000409162000472565b60008054336001600160a01b0319918216178255600280549091166001600160a01b0387161790556003849055620000a0907f41a42e79fd442e1d669deabe8f3fe32f1b542665aa85059cc1f8926cb82f7e9c908690859060646200018f565b620000d27fff36d9cf2b3ece1d72ede3685367f881f3c658f8552484d890f2402c99c41d31858360006101f46200018f565b620000f36000805160206200414e833981519152856000806103e86200018f565b620001206000805160206200414e83398151915285631dcd6500683635c9adc5dea000006103e862000344565b620001527f87ef372fa0bc18c38f3c64ff4da209c8dac3db34cdaf2b35aa10008cbe46579f856000806127106200018f565b620001857fbefd8c2da6d9b4da15fb731a7170809acade1d69be3360c680036bd7e08a9c7f85600080620186a06200018f565b50505050620004bf565b6000546001600160a01b03163314620001df5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b60448201526064015b60405180910390fd5b600085815260086020526040902060040154851415620002425760405162461bcd60e51b815260206004820152601360248201527f7469657220616c726561647920696e20757365000000000000000000000000006044820152606401620001d6565b604051806101000160405280856001600160a01b031681526020018481526020018381526020018281526020018681526020016000815260200160008152602001438152506008600087815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155905050847f16ef379f8f00f11ccad2cb44b63097f0f35273e2077b0c305a2c886a62c389ba60405160405180910390a25050505050565b6000546001600160a01b03163314620003905760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b6044820152606401620001d6565b6000858152600860205260409020600401548514620003e15760405162461bcd60e51b815260206004820152600c60248201526b36b4b9b9b4b733903a34b2b960a11b6044820152606401620001d6565b60008581526008602090815260409182902080546001600160a01b0319166001600160a01b03881690811782556001820187905560028201869055600390910184905582519081529081018590529081018390526060810182905285907f78464b89639a347f1d6ed1cb7af1b1dc50ad7fdaecae1fff5d93f3dcc65fd8379060800160405180910390a25050505050565b600080600080608085870312156200048957600080fd5b84516001600160a01b0381168114620004a157600080fd5b60208601516040870151606090970151919890975090945092505050565b613c7f80620004cf6000396000f3fe6080604052600436106102195760003560e01c806370ae92d21161011d578063a848e0ec116100b0578063d087d2881161007f578063d615657111610064578063d61565711461074f578063e9cbd8221461076f578063e9f49b531461078f57600080fd5b8063d087d288146106f2578063d56a07e31461071457600080fd5b8063a848e0ec1461067d578063b0d264e71461069d578063bb229147146106bd578063c284bdf3146106dd57600080fd5b80638da5cb5b116100ec5780638da5cb5b146105fd57806397554e8f1461061d578063998b32e81461063d578063a195c3e31461065d57600080fd5b806370ae92d21461052857806373d15717146105555780638406c0791461057557806389f902f61461059557600080fd5b80634bf26de6116101b05780635eccc3711161017f5780636857ab40116101645780636857ab40146104d2578063693ac4fb146104e85780636a326ab11461050857600080fd5b80635eccc37114610492578063634b8758146104b257600080fd5b80634bf26de61461041c57806351ceefe71461042f57806351cff8d91461045f578063590f862e1461047f57600080fd5b806316afc783116101ec57806316afc783146102f35780631e8e454c146103a057806327dcd78c146103d85780633aeac4e1146103fa57600080fd5b8063016440281461021e57806305c24853146102545780630d358d75146102a257806314263b19146102dd575b600080fd5b34801561022a57600080fd5b5061023e610239366004612f7e565b6107af565b60405161024b919061300f565b60405180910390f35b34801561026057600080fd5b5061028a61026f366004613022565b6007602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161024b565b3480156102ae57600080fd5b506102cf6102bd366004613063565b600a6020526000908152604090205481565b60405190815260200161024b565b3480156102e957600080fd5b506102cf60105481565b3480156102ff57600080fd5b5061035b61030e366004613063565b600960205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007909701546001600160a01b03909616969495939492939192909188565b604080516001600160a01b0390991689526020890197909752958701949094526060860192909252608085015260a084015260c083015260e08201526101000161024b565b3480156103ac57600080fd5b506102cf6103bb366004613080565b600b60209081526000928352604080842090915290825290205481565b3480156103e457600080fd5b506103ed610854565b60405161024b9190613174565b34801561040657600080fd5b5061041a610415366004613080565b610968565b005b61041a61042a366004613239565b610b13565b34801561043b57600080fd5b5061044f61044a36600461355a565b610f21565b604051901515815260200161024b565b34801561046b57600080fd5b5061041a61047a366004613063565b610fd8565b61041a61048d3660046135ec565b6110de565b34801561049e57600080fd5b5061023e6104ad366004613022565b611239565b3480156104be57600080fd5b5061041a6104cd366004613624565b6112db565b3480156104de57600080fd5b506102cf600c5481565b3480156104f457600080fd5b5061023e610503366004612f7e565b611412565b34801561051457600080fd5b5061041a610523366004613063565b61143d565b34801561053457600080fd5b506102cf610543366004613063565b600d6020526000908152604090205481565b34801561056157600080fd5b5061023e610570366004613063565b611483565b34801561058157600080fd5b5060015461028a906001600160a01b031681565b3480156105a157600080fd5b5061035b6105b0366004613022565b600860205260009081526040902080546001820154600283015460038401546004850154600586015460068701546007909701546001600160a01b03909616969495939492939192909188565b34801561060957600080fd5b5060005461028a906001600160a01b031681565b34801561062957600080fd5b5061044f61063836600461366c565b61149c565b34801561064957600080fd5b5061044f61065836600461355a565b6117a4565b34801561066957600080fd5b5061023e610678366004613732565b6119d8565b34801561068957600080fd5b5061023e610698366004613022565b6119fc565b3480156106a957600080fd5b5061041a6106b83660046138b5565b611a15565b3480156106c957600080fd5b5061041a6106d8366004613624565b611b84565b3480156106e957600080fd5b506102cf611d31565b3480156106fe57600080fd5b50336000908152600d60205260409020546102cf565b34801561072057600080fd5b5061044f61072f366004612f7e565b805160208183018101805160068252928201919093012091525460ff1681565b34801561075b57600080fd5b5061044f61076a3660046135ec565b611d7e565b34801561077b57600080fd5b5060025461028a906001600160a01b031681565b34801561079b57600080fd5b5061044f6107aa366004612f7e565b611df3565b8051602081830181018051600482529282019190930120915280546107d390613987565b80601f01602080910402602001604051908101604052809291908181526020018280546107ff90613987565b801561084c5780601f106108215761010080835404028352916020019161084c565b820191906000526020600020905b81548152906001019060200180831161082f57829003601f168201915b505050505081565b61085c612d1c565b610864612d1c565b60408051600280825260608201835260009260208301908036833701905050905060008160008151811061089a5761089a6139c2565b6020026020010181815250506001816001815181106108bb576108bb6139c2565b6020026020010181815250506040518060c00160405280600115158152602001600160058111156108ee576108ee6130b9565b815260200160008152602001600181526020016001815260408051808201825260018082526000602083810182905294850192909252938652815160c081018352858152602181850152600481840152600c60608201528251938401909252825260808101919091529060a0820152602083015250919050565b6000546001600160a01b0316331461097f57600080fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156109c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ea91906139d8565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015610a56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7a91906139f1565b610acb5760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c6564000000000000000000000000000000000060448201526064015b60405180910390fd5b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051610b0691815260200190565b60405180910390a2505050565b6000838152600760205260409020546001600160a01b03163314610b795760405162461bcd60e51b815260206004820152600c60248201527f696e76616c6964207573657200000000000000000000000000000000000000006044820152606401610ac2565b33600081815260096020908152604080832081516101008101835281546001600160a01b0390811682526001830154828601526002830154828501526003830154606083015260048084015460808401819052600585015460a0850152600685015460c085015260079094015460e084015292865260089094528285205492516370a0823160e01b8152918201959095529116919082906370a0823190602401602060405180830381865afa158015610c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5a91906139d8565b11610ca75760405162461bcd60e51b815260206004820152601160248201527f6e6f20656e6f7567682062616c616e63650000000000000000000000000000006044820152606401610ac2565b606082015115610ccc5760018260600151610cc29190613a24565b6060830152610dc1565b6080820151600090815260086020526040908190206001015490517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101919091526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7591906139f1565b610dc15760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572206661696c656420666f7220726563697069656e740000006044820152606401610ac2565b60008260e0015143610dd39190613a24565b9050601054811115610e0257608083015160009081526008602052604090206003015460608401524360e08401525b6000868152600f6020908152604080832087845282529091208651610e2992880190612d79565b506000868152600e602090815260409091208651610e4992880190612d79565b5060808301805160008181526008602090815260408083205494518352918290206001015482516001600160a01b039095168552908401529091889133917ffa3b66570e1859a499f11774a3c47f5bdcd4fc6b9fef49f47066729785ee180c910160405180910390a4600c54610ec0906001613a3b565b600c55336000908152600a6020526040902054610ede906001613a3b565b336000908152600a602052604080822092909255905187917fc4c76143cbd497adc2b5bc159d932dcfa8483928a0d22661d1404ef1c68984a191a2505050505050565b6000610fcd82610f2f610854565b6000888152600e602052604090208054610f4890613987565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7490613987565b8015610fc15780601f10610f9657610100808354040283529160200191610fc1565b820191906000526020600020905b815481529060010190602001808311610fa457829003601f168201915b50505050508787611a15565b506001949350505050565b6000546001600160a01b03163314610fef57600080fd5b604051479060009081906001600160a01b0385169084908381818185875af1925050503d806000811461103e576040519150601f19603f3d011682016040523d82523d6000602084013e611043565b606091505b5091509150816110955760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610ac2565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5846040516110d091815260200190565b60405180910390a250505050565b6000838152600760205260409020546001600160a01b0316156111435760405162461bcd60e51b815260206004820152600e60248201527f6d6f6e696b6572206578697374730000000000000000000000000000000000006044820152606401610ac2565b60008181526008602052604090206004015481146111925760405162461bcd60e51b815260206004820152600c60248201526b36b4b9b9b4b733903a34b2b960a11b6044820152606401610ac2565b600092835260076020818152604080862080546001600160a01b0396871673ffffffffffffffffffffffffffffffffffffffff199182168117909255948752600883528187209087526009909252909420845481549093169290931691909117825560018381015490830155600280840154908301556003808401549083015560048084015490830155600580840154908301556006808401549083015591820154910155565b6000818152600e6020526040902080546060919061125690613987565b80601f016020809104026020016040519081016040528092919081815260200182805461128290613987565b80156112cf5780601f106112a4576101008083540402835291602001916112cf565b820191906000526020600020905b8154815290600101906020018083116112b257829003601f168201915b50505050509050919050565b6000546001600160a01b031633146113255760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b6044820152606401610ac2565b60008581526008602052604090206004015485146113745760405162461bcd60e51b815260206004820152600c60248201526b36b4b9b9b4b733903a34b2b960a11b6044820152606401610ac2565b600085815260086020908152604091829020805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03881690811782556001820187905560028201869055600390910184905582519081529081018590529081018390526060810182905285907f78464b89639a347f1d6ed1cb7af1b1dc50ad7fdaecae1fff5d93f3dcc65fd8379060800160405180910390a25050505050565b60606004826040516114249190613a53565b9081526020016040518091039020805461125690613987565b6000546001600160a01b0316331461145457600080fd5b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600560205260009081526040902080546107d390613987565b60006006846040516114ae9190613a53565b9081526040519081900360200190205460ff16156115335760405162461bcd60e51b8152602060048201526024808201527f70726f6f6620686173206265656e207375626d69747465642028666f756e642060448201527f6b657929000000000000000000000000000000000000000000000000000000006064820152608401610ac2565b8380519060200120826020015180519060200120146115825760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964206b657960a81b6044820152606401610ac2565b84602001518051906020012060056000886001600160a01b03166001600160a01b031681526020019081526020016000206040516115c09190613a6f565b6040518091039020146116155760405162461bcd60e51b815260206004820152601060248201527f696e76616c69642075736572206b6579000000000000000000000000000000006044820152606401610ac2565b61161f8786611e1e565b61166b5760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420757365722070726f6f6600000000000000000000000000006044820152606401610ac2565b6116758783611e1e565b61167e57600080fd5b60016006856040516116909190613a53565b9081526040805160209281900383019020805460ff191693151593909317909255600089815260078252828120546001600160a01b039081168252600b8352838220908a16825290915220546116e7906001613a3b565b6000888152600760209081526040808320546001600160a01b039081168452600b8352818420908b168452825280832093909355600d9052205461172c906001613a3b565b6001600160a01b0387166000908152600d6020526040908190209190915551611756908590613a53565b60405180910390207f6fc7f6a61226dca85dedfb3642afdfbd9aeca6b161137d0c9a09e01a5e4baeee848960405161178f929190613b0b565b60405180910390a25060019695505050505050565b60008380519060200120826020015180519060200120146117f55760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964206b657960a81b6044820152606401610ac2565b6117ff8583611e1e565b61184b5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610ac2565b60048360405161185b9190613a53565b90815260405190819003602001812061187391613a6f565b6040518091039020848051906020012014156118d15760405162461bcd60e51b815260206004820152601760248201527f7573657220616c726561647920726567697374657265640000000000000000006044820152606401610ac2565b6000858152600760209081526040808320546001600160a01b03168352600b8252808320338452909152902054611909906001613a3b565b6000868152600760209081526040808320546001600160a01b03168352600b8252808320338452909152908190209190915551849060049061194c908690613a53565b9081526020016040518091039020908051906020019061196d929190612d79565b50336000908152600560209081526040909120855161198e92870190612d79565b507f7b72d06bd8ccc7a748cfdb8b1df6913a277497c808af0288d0d6c0eb06b3b7b660018585886040516119c59493929190613b2d565b60405180910390a1506001949350505050565b600f602090815260009283526040808420909152908252902080546107d390613987565b600e60205260009081526040902080546107d390613987565b611a1f8585611edc565b611a2d856020015183612004565b611a795760405162461bcd60e51b815260206004820181905260248201527f50726f7669646564206b657920646f65736e2774206d617463682070726f6f666044820152606401610ac2565b611a87856040015182612004565b611af95760405162461bcd60e51b815260206004820152602260248201527f50726f76696465642076616c756520646f65736e2774206d617463682070726f60448201527f6f660000000000000000000000000000000000000000000000000000000000006064820152608401610ac2565b611b0b611b0586612034565b84612004565b611b7d5760405162461bcd60e51b815260206004820152602c60248201527f43616c63756c636174656420726f6f7420646f65736e2774206d61746368207060448201527f726f766964656420726f6f7400000000000000000000000000000000000000006064820152608401610ac2565b5050505050565b6000546001600160a01b03163314611bce5760405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b21037bbb732b960991b6044820152606401610ac2565b600085815260086020526040902060040154851415611c2f5760405162461bcd60e51b815260206004820152601360248201527f7469657220616c726561647920696e20757365000000000000000000000000006044820152606401610ac2565b604051806101000160405280856001600160a01b031681526020018481526020018381526020018281526020018681526020016000815260200160008152602001438152506008600087815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070155905050847f16ef379f8f00f11ccad2cb44b63097f0f35273e2077b0c305a2c886a62c389ba60405160405180910390a25050505050565b600060035430604051602001611d6392919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60405160208183030381529060405280519060200120905090565b60008160035430604051602001611db192919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60405160208183030381529060405280519060200120148015611deb57506001600160a01b0383166000908152600d602052604090205484145b949350505050565b6000600682604051611e059190613a53565b9081526040519081900360200190205460ff1692915050565b6000611ed282611e2c610854565b6000868152600e602052604090208054611e4590613987565b80601f0160208091040260200160405190810160405280929190818152602001828054611e7190613987565b8015611ebe5780601f10611e9357610100808354040283529160200191611ebe565b820191906000526020600020905b815481529060010190602001808311611ea157829003601f168201915b505050505085602001518660400151611a15565b5060015b92915050565b611eea8260600151826120a3565b60608101511580611f045750806060015182608001515110155b611f505760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f707320646570746820746f6f2073686f727400000000000000006044820152606401610ac2565b60408101511580611f6a5750806040015182608001515110155b611fb65760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f707320646570746820746f6f2073686f727400000000000000006044820152606401610ac2565b60005b826080015151811015611fff57611fed83608001518281518110611fdf57611fdf6139c2565b6020026020010151836122f1565b80611ff781613b6c565b915050611fb9565b505050565b6000815183511461201757506000611ed6565b825160208381018281209186019283209091145b95945050505050565b6060600061204f8360600151846020015185604001516124bc565b905060005b83608001515181101561209c576120888460800151828151811061207a5761207a6139c2565b6020026020010151836125dd565b91508061209481613b6c565b915050612054565b5092915050565b80516020015160058111156120ba576120ba6130b9565b826020015160058111156120d0576120d06130b9565b1461211d5760405162461bcd60e51b815260206004820152601160248201527f556e657870656374656420486173684f700000000000000000000000000000006044820152606401610ac2565b8051604001516005811115612134576121346130b9565b8260400151600581111561214a5761214a6130b9565b146121975760405162461bcd60e51b815260206004820152601560248201527f556e657870656374656420507265686173684b657900000000000000000000006044820152606401610ac2565b80516060015160058111156121ae576121ae6130b9565b826060015160058111156121c4576121c46130b9565b146122115760405162461bcd60e51b815260206004820152601560248201527f556e657870656374656420507265686173684b657900000000000000000000006044820152606401610ac2565b8051608001516008811115612228576122286130b9565b8260800151600881111561223e5761223e6130b9565b1461228b5760405162461bcd60e51b815260206004820152601a60248201527f556e657870656374656c65616653706563204c656e6774684f700000000000006044820152606401610ac2565b6122a18260a00151826000015160a0015161268c565b6122ed5760405162461bcd60e51b815260206004820152601760248201527f4c6561664f704c69623a2077726f6e67207072656669780000000000000000006044820152606401610ac2565b5050565b8051602001516005811115612308576123086130b9565b8260200151600581111561231e5761231e6130b9565b1461236b5760405162461bcd60e51b815260206004820152601160248201527f556e657870656374656420486173684f700000000000000000000000000000006044820152606401610ac2565b6123818260400151826000015160a0015161268c565b156123ce5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f704c69623a2077726f6e672070726566697800000000000000006044820152606401610ac2565b806020015160400151826040015151101561242b5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f702070726566697820746f6f2073686f727400000000000000006044820152606401610ac2565b602080820151908101519051516000919061244890600190613a24565b6124529190613b87565b9050808260200151606001516124689190613a3b565b8360400151511115611fff5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f702070726566697820746f6f2073686f727400000000000000006044820152606401610ac2565b6060600083511161250f5760405162461bcd60e51b815260206004820152601160248201527f4c656166206f70206e65656473206b65790000000000000000000000000000006044820152606401610ac2565b60008251116125605760405162461bcd60e51b815260206004820152601360248201527f4c656166206f70206e656564732076616c7565000000000000000000000000006044820152606401610ac2565b60008460a0015161257a866040015187608001518761274f565b60405160200161258b929190613ba6565b6040516020818303038152906040526125ad866060015187608001518661274f565b6040516020016125be929190613ba6565b604051602081830303815290604052905061202b856020015182612764565b606060008251116126305760405162461bcd60e51b815260206004820152601a60248201527f496e6e6572206f70206e65656473206368696c642076616c75650000000000006044820152606401610ac2565b612685836020015184604001518460405160200161264f929190613ba6565b60408051601f1981840301815290829052606087015161267192602001613ba6565b604051602081830303815290604052612764565b9392505050565b60008151835110156126a057506000611ed6565b60005b8251811015612745578281815181106126be576126be6139c2565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168482815181106126fd576126fd6139c2565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614612733576000915050611ed6565b8061273d81613b6c565b9150506126a3565b5060019392505050565b6060611deb8361275f8685612982565b6129af565b6060600183600581111561277a5761277a6130b9565b14156127df576127d86002836040516127939190613a53565b602060405180830381855afa1580156127b0573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906127d391906139d8565b612b43565b9050611ed6565b60028360058111156127f3576127f36130b9565b14156128415760405162461bcd60e51b815260206004820152601660248201527f534841353132206e6f7420696d706c656d656e746564000000000000000000006044820152606401610ac2565b6004836005811115612855576128556130b9565b14156128a9576127d860038360405161286e9190613a53565b602060405180830381855afa15801561288b573d6000803e3d6000fd5b5050506040515160601b6bffffffffffffffffffffffff1916612b43565b60058360058111156128bd576128bd6130b9565b141561293a5760006002836040516128d59190613a53565b602060405180830381855afa1580156128f2573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061291591906139d8565b9050612932600361292583612b43565b60405161286e9190613a53565b915050611ed6565b60405162461bcd60e51b815260206004820152601260248201527f556e737570706f7274656420686173686f7000000000000000000000000000006044820152606401610ac2565b60606000836005811115612998576129986130b9565b14156129a5575080611ed6565b6126858383612764565b606060008360088111156129c5576129c56130b9565b14156129d2575080611ed6565b60018360088111156129e6576129e66130b9565b1415612a1e576129f68251612b6d565b82604051602001612a08929190613ba6565b6040516020818303038152906040529050611ed6565b6007836008811115612a3257612a326130b9565b1415612a90578151602014612a895760405162461bcd60e51b815260206004820152601160248201527f45787065637465642033322062797465730000000000000000000000000000006044820152606401610ac2565b5080611ed6565b6008836008811115612aa457612aa46130b9565b1415612afb578151604014612a895760405162461bcd60e51b815260206004820152601160248201527f45787065637465642036342062797465730000000000000000000000000000006044820152606401610ac2565b60405162461bcd60e51b815260206004820152601460248201527f556e737570706f72746564206c656e6774686f700000000000000000000000006044820152606401610ac2565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b60608160015b607f8267ffffffffffffffff161115612bab5760078267ffffffffffffffff16901c9150600181612ba49190613bd5565b9050612b73565b60008167ffffffffffffffff1667ffffffffffffffff811115612bd057612bd0612e58565b6040519080825280601f01601f191660200182016040528015612bfa576020820181803683370190505b50905084925060005b8267ffffffffffffffff168167ffffffffffffffff161015612c985783607f1660801760f81b828267ffffffffffffffff1681518110612c4557612c456139c2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060078467ffffffffffffffff16901c93508080612c9090613bf8565b915050612c03565b507f7f0000000000000000000000000000000000000000000000000000000000000081612cc6600185613c20565b67ffffffffffffffff1681518110612ce057612ce06139c2565b0160200180519091167fff000000000000000000000000000000000000000000000000000000000000001690600082901a905350949350505050565b60408051610140810190915260006080820181815260a0830182905260c0830182905260e083018290526101008301919091526060610120830152815260208101612d65612dfd565b815260200160008152602001600081525090565b828054612d8590613987565b90600052602060002090601f016020900481019282612da75760008555612ded565b82601f10612dc057805160ff1916838001178555612ded565b82800160010185558215612ded579182015b82811115612ded578251825591602001919060010190612dd2565b50612df9929150612e43565b5090565b6040518060c00160405280606081526020016000815260200160008152602001600081526020016060815260200160006005811115612e3e57612e3e6130b9565b905290565b5b80821115612df95760008155600101612e44565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612e9157612e91612e58565b60405290565b6040516080810167ffffffffffffffff81118282101715612e9157612e91612e58565b60405160a0810167ffffffffffffffff81118282101715612e9157612e91612e58565b604051601f8201601f1916810167ffffffffffffffff81118282101715612f0657612f06612e58565b604052919050565b600082601f830112612f1f57600080fd5b813567ffffffffffffffff811115612f3957612f39612e58565b612f4c601f8201601f1916602001612edd565b818152846020838601011115612f6157600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215612f9057600080fd5b813567ffffffffffffffff811115612fa757600080fd5b611deb84828501612f0e565b60005b83811015612fce578181015183820152602001612fb6565b83811115612fdd576000848401525b50505050565b60008151808452612ffb816020860160208601612fb3565b601f01601f19169290920160200192915050565b6020815260006126856020830184612fe3565b60006020828403121561303457600080fd5b5035919050565b6001600160a01b038116811461305057600080fd5b50565b803561305e8161303b565b919050565b60006020828403121561307557600080fd5b81356126858161303b565b6000806040838503121561309357600080fd5b823561309e8161303b565b915060208301356130ae8161303b565b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b600681106130df576130df6130b9565b9052565b805160c080845281519084018190526000916020919082019060e0860190845b8181101561311f57835183529284019291840191600101613103565b5050828501518387015260408501516040870152606085015160608701526080850151925085810360808701526131568184612fe3565b9250505060a083015161316c60a08601826130cf565b509392505050565b6020815260008251608060208401528051151560a0840152602081015161319e60c08501826130cf565b5060408101516131b160e08501826130cf565b5060608101516131c56101008501826130cf565b506080810151600981106131db576131db6130b9565b61012084015260a0015160c06101408401526131fb610160840182612fe3565b90506020840151601f1984830301604085015261321882826130e3565b91505060408401516060840152606084015160808401528091505092915050565b60008060006060848603121561324e57600080fd5b83359250602084013567ffffffffffffffff81111561326c57600080fd5b61327886828701612f0e565b925050604084013590509250925092565b801515811461305057600080fd5b803561305e81613289565b80356006811061305e57600080fd5b600060c082840312156132c357600080fd5b6132cb612e6e565b905081356132d881613289565b81526132e6602083016132a2565b60208201526132f7604083016132a2565b6040820152613308606083016132a2565b606082015260808201356009811061331f57600080fd5b608082015260a082013567ffffffffffffffff81111561333e57600080fd5b61334a84828501612f0e565b60a08301525092915050565b600067ffffffffffffffff82111561337057613370612e58565b5060051b60200190565b600082601f83011261338b57600080fd5b813560206133a061339b83613356565b612edd565b82815260059290921b840181019181810190868411156133bf57600080fd5b8286015b8481101561348557803567ffffffffffffffff808211156133e45760008081fd5b908801906080828b03601f19018113156133fe5760008081fd5b613406612e97565b8784013561341381613289565b815260406134228582016132a2565b898301526060808601358581111561343a5760008081fd5b6134488f8c838a0101612f0e565b848401525092850135928484111561346257600091508182fd5b6134708e8b86890101612f0e565b908301525086525050509183019183016133c3565b509695505050505050565b600060a082840312156134a257600080fd5b6134aa612eba565b90506134b582613297565b8152602082013567ffffffffffffffff808211156134d257600080fd5b6134de85838601612f0e565b602084015260408401359150808211156134f757600080fd5b61350385838601612f0e565b6040840152606084013591508082111561351c57600080fd5b613528858386016132b1565b6060840152608084013591508082111561354157600080fd5b5061354e8482850161337a565b60808301525092915050565b6000806000806080858703121561357057600080fd5b84359350602085013567ffffffffffffffff8082111561358f57600080fd5b61359b88838901612f0e565b945060408701359150808211156135b157600080fd5b6135bd88838901612f0e565b935060608701359150808211156135d357600080fd5b506135e087828801613490565b91505092959194509250565b60008060006060848603121561360157600080fd5b8335925060208401356136138161303b565b929592945050506040919091013590565b600080600080600060a0868803121561363c57600080fd5b85359450602086013561364e8161303b565b94979496505050506040830135926060810135926080909101359150565b60008060008060008060c0878903121561368557600080fd5b8635955061369560208801613053565b9450604087013567ffffffffffffffff808211156136b257600080fd5b6136be8a838b01613490565b955060608901359150808211156136d457600080fd5b6136e08a838b01612f0e565b945060808901359150808211156136f657600080fd5b6137028a838b01612f0e565b935060a089013591508082111561371857600080fd5b5061372589828a01613490565b9150509295509295509295565b6000806040838503121561374557600080fd5b50508035926020909101359150565b600082601f83011261376557600080fd5b8135602061377561339b83613356565b82815260059290921b8401810191818101908684111561379457600080fd5b8286015b848110156134855780358352918301918301613798565b6000608082840312156137c157600080fd5b6137c9612e97565b9050813567ffffffffffffffff808211156137e357600080fd5b6137ef858386016132b1565b8352602084013591508082111561380557600080fd5b9083019060c0828603121561381957600080fd5b613821612e6e565b82358281111561383057600080fd5b61383c87828601613754565b82525060208301356020820152604083013560408201526060830135606082015260808301358281111561386f57600080fd5b61387b87828601612f0e565b60808301525061388d60a084016132a2565b60a0820152806020850152505050604082013560408201526060820135606082015292915050565b600080600080600060a086880312156138cd57600080fd5b853567ffffffffffffffff808211156138e557600080fd5b6138f189838a01613490565b9650602088013591508082111561390757600080fd5b61391389838a016137af565b9550604088013591508082111561392957600080fd5b61393589838a01612f0e565b9450606088013591508082111561394b57600080fd5b61395789838a01612f0e565b9350608088013591508082111561396d57600080fd5b5061397a88828901612f0e565b9150509295509295909350565b600181811c9082168061399b57607f821691505b602082108114156139bc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156139ea57600080fd5b5051919050565b600060208284031215613a0357600080fd5b815161268581613289565b634e487b7160e01b600052601160045260246000fd5b600082821015613a3657613a36613a0e565b500390565b60008219821115613a4e57613a4e613a0e565b500190565b60008251613a65818460208701612fb3565b9190910192915050565b600080835481600182811c915080831680613a8b57607f831692505b6020808410821415613aab57634e487b7160e01b86526022600452602486fd5b818015613abf5760018114613ad057613afd565b60ff19861689528489019650613afd565b60008a81526020902060005b86811015613af55781548b820152908501908301613adc565b505084890196505b509498975050505050505050565b604081526000613b1e6040830185612fe3565b90508260208301529392505050565b8415158152608060208201526000613b486080830186612fe3565b8281036040840152613b5a8186612fe3565b91505082606083015295945050505050565b6000600019821415613b8057613b80613a0e565b5060010190565b6000816000190483118215151615613ba157613ba1613a0e565b500290565b60008351613bb8818460208801612fb3565b835190830190613bcc818360208801612fb3565b01949350505050565b600067ffffffffffffffff808316818516808303821115613bcc57613bcc613a0e565b600067ffffffffffffffff80831681811415613c1657613c16613a0e565b6001019392505050565b600067ffffffffffffffff83811690831681811015613c4157613c41613a0e565b03939250505056fea2646970667358221220e322f07e2c0b5e74a3771e8c0d380e24d7b060433d29ee4dc5dbca947602391b64736f6c634300080b00333b61c0fe064f998f32a3661de12f8ef66f69d3eed20df1d23c30fc57463ab9b2";

type AnconProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnconProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnconProtocol__factory extends ContractFactory {
  constructor(...args: AnconProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    tokenAddress: string,
    network: BigNumberish,
    starterFee: BigNumberish,
    startupFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AnconProtocol> {
    return super.deploy(
      tokenAddress,
      network,
      starterFee,
      startupFee,
      overrides || {}
    ) as Promise<AnconProtocol>;
  }
  getDeployTransaction(
    tokenAddress: string,
    network: BigNumberish,
    starterFee: BigNumberish,
    startupFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenAddress,
      network,
      starterFee,
      startupFee,
      overrides || {}
    );
  }
  attach(address: string): AnconProtocol {
    return super.attach(address) as AnconProtocol;
  }
  connect(signer: Signer): AnconProtocol__factory {
    return super.connect(signer) as AnconProtocol__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnconProtocolInterface {
    return new utils.Interface(_abi) as AnconProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnconProtocol {
    return new Contract(address, _abi, signerOrProvider) as AnconProtocol;
  }
}
