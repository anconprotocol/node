/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AnconProtocol, AnconProtocolInterface } from "../AnconProtocol";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enrolledStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "AccountRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "hash",
        type: "bytes",
      },
    ],
    name: "HeaderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
    ],
    name: "ProofPacketSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "ENROLL_PAYMENT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUBMIT_PAYMENT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountByAddrProofs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "accountProofs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accountRegistrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getIavlSpec",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leafSpec",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "childOrder",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "childSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minPrefixLength",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPrefixLength",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "emptyChild",
                type: "bytes",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
            ],
            internalType: "struct Ics23Helper.InnerSpec",
            name: "innerSpec",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDepth",
            type: "uint256",
          },
        ],
        internalType: "struct Ics23Helper.ProofSpec",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "proofs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayNetworkHash",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "relayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leafSpec",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "childOrder",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "childSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minPrefixLength",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPrefixLength",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "emptyChild",
                type: "bytes",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
            ],
            internalType: "struct Ics23Helper.InnerSpec",
            name: "innerSpec",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDepth",
            type: "uint256",
          },
        ],
        internalType: "struct Ics23Helper.ProofSpec",
        name: "spec",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "root",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setAccountRegistrationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolHeader",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "did",
        type: "bytes",
      },
    ],
    name: "getProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "hasProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "did",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "enrollL2Account",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "rootHash",
        type: "bytes",
      },
    ],
    name: "updateProtocolHeader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "submitPacketWithProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "exProof",
        type: "tuple",
      },
    ],
    name: "verifyProofWithKV",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040527faa38c8fcdb8500f6802157621989c44502acc94ca3eb31e1547a766ce91448b26000557fa8a7d14acee15b581bdc62c67a1b2711ec58a960850b336a002a03c0f3367b3b6001556000600655600060075534801561006257600080fd5b50600280546001600160a01b03191633179055613095806100846000396000f3fe6080604052600436106101965760003560e01c8063787dce3d116100e1578063bb893b6f1161008a578063e9cbd82211610064578063e9cbd82214610463578063e9f49b5314610483578063f2a4147a146104a3578063fc7ea420146104b857600080fd5b8063bb893b6f146103f5578063c935256b14610408578063d56a07e31461042857600080fd5b80638da5cb5b116100bb5780638da5cb5b1461039f578063b0d264e7146103bf578063b0e21e8a146103df57600080fd5b8063787dce3d146103275780638406c079146103475780638b178bec1461037f57600080fd5b8063410d0d8411610143578063693ac4fb1161011d578063693ac4fb146102c75780636a326ab1146102e757806373d157171461030757600080fd5b8063410d0d841461027c57806351cff8d9146102915780635dad28de146102b157600080fd5b8063322084911161017457806332208491146102235780633aeac4e11461023657806340ae5ffa1461025857600080fd5b8063016440281461019b57806301b3239e146101d157806327dcd78c14610201575b600080fd5b3480156101a757600080fd5b506101bb6101b63660046124b3565b6104ce565b6040516101c89190612544565b60405180910390f35b3480156101dd57600080fd5b506101f16101ec366004612830565b610573565b60405190151581526020016101c8565b34801561020d57600080fd5b5061021661061d565b6040516101c89190612973565b6101f1610231366004612830565b610731565b34801561024257600080fd5b50610256610251366004612a4d565b610908565b005b34801561026457600080fd5b5061026e60005481565b6040519081526020016101c8565b34801561028857600080fd5b506101bb610ac7565b34801561029d57600080fd5b506102566102ac366004612a86565b610ad4565b3480156102bd57600080fd5b5061026e60075481565b3480156102d357600080fd5b506101bb6102e23660046124b3565b610bda565b3480156102f357600080fd5b50610256610302366004612a86565b610c8a565b34801561031357600080fd5b506101bb610322366004612a86565b610cdb565b34801561033357600080fd5b50610256610342366004612aa3565b610cf4565b34801561035357600080fd5b50600354610367906001600160a01b031681565b6040516001600160a01b0390911681526020016101c8565b34801561038b57600080fd5b5061025661039a366004612aa3565b610d10565b3480156103ab57600080fd5b50600254610367906001600160a01b031681565b3480156103cb57600080fd5b506102566103da366004612c1d565b610d2c565b3480156103eb57600080fd5b5061026e60065481565b6101f1610403366004612cef565b610e9b565b34801561041457600080fd5b506102566104233660046124b3565b6110ff565b34801561043457600080fd5b506101f16104433660046124b3565b8051602081830181018051600a8252928201919093012091525460ff1681565b34801561046f57600080fd5b50600554610367906001600160a01b031681565b34801561048f57600080fd5b506101f161049e3660046124b3565b611164565b3480156104af57600080fd5b506101bb61118f565b3480156104c457600080fd5b5061026e60015481565b8051602081830181018051600882529282019190930120915280546104f290612da2565b80601f016020809104026020016040519081016040528092919081815260200182805461051e90612da2565b801561056b5780601f106105405761010080835404028352916020019161056b565b820191906000526020600020905b81548152906001019060200180831161054e57829003601f168201915b505050505081565b60006106138261058161061d565b6004805461058e90612da2565b80601f01602080910402602001604051908101604052809291908181526020018280546105ba90612da2565b80156106075780601f106105dc57610100808354040283529160200191610607565b820191906000526020600020905b8154815290600101906020018083116105ea57829003601f168201915b50505050508787610d2c565b5060019392505050565b610625612251565b61062d612251565b60408051600280825260608201835260009260208301908036833701905050905060008160008151811061066357610663612ddd565b60200260200101818152505060018160018151811061068457610684612ddd565b6020026020010181815250506040518060c00160405280600115158152602001600160058111156106b7576106b76128b8565b815260200160008152602001600181526020016001815260408051808201825260018082526000602083810182905294850192909252938652815160c081018352858152602181850152600481840152600c60608201528251938401909252825260808101919091529060a0820152602083015250919050565b60008380519060200120826020015180519060200120146107875760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964206b657960a81b60448201526064015b60405180910390fd5b61079082611221565b6107dc5760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f6600000000000000000000000000000000000000604482015260640161077e565b6008836040516107ec9190612df3565b90815260405190819003602001812061080491612e0f565b6040518091039020848051906020012014156108625760405162461bcd60e51b815260206004820152601760248201527f7573657220616c72656164792072656769737465726564000000000000000000604482015260640161077e565b61086e600054336112d1565b8360088460405161087f9190612df3565b908152602001604051809103902090805190602001906108a09291906122ae565b5033600090815260096020908152604090912085516108c1928701906122ae565b507fdf285b75c61e111633bd9fdd496ccf9b449555e34d68ea7bf9db18e8f1977c70600185856040516108f693929190612eab565b60405180910390a15060019392505050565b6002546001600160a01b0316331461091f57600080fd5b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa15801561097f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a39190612ee2565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015610a0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a339190612efb565b610a7f5760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c65640000000000000000000000000000000000604482015260640161077e565b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d582604051610aba91815260200190565b60405180910390a2505050565b600480546104f290612da2565b6002546001600160a01b03163314610aeb57600080fd5b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610b3a576040519150601f19603f3d011682016040523d82523d6000602084013e610b3f565b606091505b509150915081610b915760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e64204574686572000000000000000000000000604482015260640161077e565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610bcc91815260200190565b60405180910390a250505050565b6060600882604051610bec9190612df3565b90815260200160405180910390208054610c0590612da2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3190612da2565b8015610c7e5780601f10610c5357610100808354040283529160200191610c7e565b820191906000526020600020905b815481529060010190602001808311610c6157829003601f168201915b50505050509050919050565b6002546001600160a01b03163314610ca157600080fd5b600580547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b600960205260009081526040902080546104f290612da2565b6002546001600160a01b03163314610d0b57600080fd5b600655565b6002546001600160a01b03163314610d2757600080fd5b600755565b610d36858561140d565b610d44856020015183611535565b610d905760405162461bcd60e51b815260206004820181905260248201527f50726f7669646564206b657920646f65736e2774206d617463682070726f6f66604482015260640161077e565b610d9e856040015182611535565b610e105760405162461bcd60e51b815260206004820152602260248201527f50726f76696465642076616c756520646f65736e2774206d617463682070726f60448201527f6f66000000000000000000000000000000000000000000000000000000000000606482015260840161077e565b610e22610e1c86611562565b84611535565b610e945760405162461bcd60e51b815260206004820152602c60248201527f43616c63756c636174656420726f6f7420646f65736e2774206d61746368207060448201527f726f766964656420726f6f740000000000000000000000000000000000000000606482015260840161077e565b5050505050565b6000600a84604051610ead9190612df3565b9081526040519081900360200190205460ff1615610f325760405162461bcd60e51b8152602060048201526024808201527f70726f6f6620686173206265656e207375626d69747465642028666f756e642060448201527f6b65792900000000000000000000000000000000000000000000000000000000606482015260840161077e565b838051906020012082602001518051906020012014610f815760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964206b657960a81b604482015260640161077e565b84602001518051906020012060096000886001600160a01b03166001600160a01b03168152602001908152602001600020604051610fbf9190612e0f565b6040518091039020146110145760405162461bcd60e51b815260206004820152601060248201527f696e76616c69642075736572206b657900000000000000000000000000000000604482015260640161077e565b61101d85611221565b6110695760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420757365722070726f6f660000000000000000000000000000604482015260640161077e565b61107282611221565b61107b57600080fd5b6001600a8560405161108d9190612df3565b908152604051908190036020019020805491151560ff199092169190911790556001546110ba90876112d1565b7f10a499eb855a3bf46db4fa7a4aa05f939a5d06c8a3a96ad7f4d840ee9817924e84846040516110eb929190612f18565b60405180910390a150600195945050505050565b6002546001600160a01b0316331461111657600080fd5b80516111299060049060208401906122ae565b507fe0b001f59b54160030a2302b411d234315941c6c1d33a52bdb8f3c46a1dffeb8816040516111599190612544565b60405180910390a150565b6000600a826040516111769190612df3565b9081526040519081900360200190205460ff1692915050565b60606004805461119e90612da2565b80601f01602080910402602001604051908101604052809291908181526020018280546111ca90612da2565b80156112175780601f106111ec57610100808354040283529160200191611217565b820191906000526020600020905b8154815290600101906020018083116111fa57829003601f168201915b5050505050905090565b60006112c98261122f61061d565b6004805461123c90612da2565b80601f016020809104026020016040519081016040528092919081815260200182805461126890612da2565b80156112b55780601f1061128a576101008083540402835291602001916112b5565b820191906000526020600020905b81548152906001019060200180831161129857829003601f168201915b505050505085602001518660400151610d2c565b506001919050565b600080548314156112e157506007545b6001548314156112f057506006545b6005546040517f23b872dd0000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015230602483015260448201849052909116906323b872dd906064016020604051808303816000875af1158015611362573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113869190612efb565b6113d25760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572206661696c656420666f7220726563697069656e74000000604482015260640161077e565b816001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b382604051610aba91815260200190565b61141b8260600151826115d1565b606081015115806114355750806060015182608001515110155b6114815760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f707320646570746820746f6f2073686f72740000000000000000604482015260640161077e565b6040810151158061149b5750806040015182608001515110155b6114e75760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f707320646570746820746f6f2073686f72740000000000000000604482015260640161077e565b60005b8260800151518110156115305761151e8360800151828151811061151057611510612ddd565b60200260200101518361181f565b8061152881612f53565b9150506114ea565b505050565b600081518351146115485750600061155c565b508151602082810182902090840191909120145b92915050565b6060600061157d8360600151846020015185604001516119ea565b905060005b8360800151518110156115ca576115b6846080015182815181106115a8576115a8612ddd565b602002602001015183611b14565b9150806115c281612f53565b915050611582565b5092915050565b80516020015160058111156115e8576115e86128b8565b826020015160058111156115fe576115fe6128b8565b1461164b5760405162461bcd60e51b815260206004820152601160248201527f556e657870656374656420486173684f70000000000000000000000000000000604482015260640161077e565b8051604001516005811115611662576116626128b8565b82604001516005811115611678576116786128b8565b146116c55760405162461bcd60e51b815260206004820152601560248201527f556e657870656374656420507265686173684b65790000000000000000000000604482015260640161077e565b80516060015160058111156116dc576116dc6128b8565b826060015160058111156116f2576116f26128b8565b1461173f5760405162461bcd60e51b815260206004820152601560248201527f556e657870656374656420507265686173684b65790000000000000000000000604482015260640161077e565b8051608001516008811115611756576117566128b8565b8260800151600881111561176c5761176c6128b8565b146117b95760405162461bcd60e51b815260206004820152601a60248201527f556e657870656374656c65616653706563204c656e6774684f70000000000000604482015260640161077e565b6117cf8260a00151826000015160a00151611bc3565b61181b5760405162461bcd60e51b815260206004820152601760248201527f4c6561664f704c69623a2077726f6e6720707265666978000000000000000000604482015260640161077e565b5050565b8051602001516005811115611836576118366128b8565b8260200151600581111561184c5761184c6128b8565b146118995760405162461bcd60e51b815260206004820152601160248201527f556e657870656374656420486173684f70000000000000000000000000000000604482015260640161077e565b6118af8260400151826000015160a00151611bc3565b156118fc5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f704c69623a2077726f6e67207072656669780000000000000000604482015260640161077e565b80602001516040015182604001515110156119595760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f702070726566697820746f6f2073686f72740000000000000000604482015260640161077e565b602080820151908101519051516000919061197690600190612f6e565b6119809190612f85565b9050808260200151606001516119969190612fa4565b83604001515111156115305760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f702070726566697820746f6f2073686f72740000000000000000604482015260640161077e565b60606000835111611a3d5760405162461bcd60e51b815260206004820152601160248201527f4c656166206f70206e65656473206b6579000000000000000000000000000000604482015260640161077e565b6000825111611a8e5760405162461bcd60e51b815260206004820152601360248201527f4c656166206f70206e656564732076616c756500000000000000000000000000604482015260640161077e565b60008460a00151611aa88660400151876080015187611c7c565b604051602001611ab9929190612fbc565b604051602081830303815290604052611adb8660600151876080015186611c7c565b604051602001611aec929190612fbc565b6040516020818303038152906040529050611b0b856020015182611c99565b95945050505050565b60606000825111611b675760405162461bcd60e51b815260206004820152601a60248201527f496e6e6572206f70206e65656473206368696c642076616c7565000000000000604482015260640161077e565b611bbc8360200151846040015184604051602001611b86929190612fbc565b60408051601f19818403018152908290526060870151611ba892602001612fbc565b604051602081830303815290604052611c99565b9392505050565b6000815183511015611bd75750600061155c565b60005b825181101561061357828181518110611bf557611bf5612ddd565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916848281518110611c3457611c34612ddd565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614611c6a57600091505061155c565b80611c7481612f53565b915050611bda565b6060611c9183611c8c8685611eb7565b611ee4565b949350505050565b60606001836005811115611caf57611caf6128b8565b1415611d1457611d0d600283604051611cc89190612df3565b602060405180830381855afa158015611ce5573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611d089190612ee2565b612078565b905061155c565b6002836005811115611d2857611d286128b8565b1415611d765760405162461bcd60e51b815260206004820152601660248201527f534841353132206e6f7420696d706c656d656e74656400000000000000000000604482015260640161077e565b6004836005811115611d8a57611d8a6128b8565b1415611dde57611d0d600383604051611da39190612df3565b602060405180830381855afa158015611dc0573d6000803e3d6000fd5b5050506040515160601b6bffffffffffffffffffffffff1916612078565b6005836005811115611df257611df26128b8565b1415611e6f576000600283604051611e0a9190612df3565b602060405180830381855afa158015611e27573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611e4a9190612ee2565b9050611e676003611e5a83612078565b604051611da39190612df3565b91505061155c565b60405162461bcd60e51b815260206004820152601260248201527f556e737570706f7274656420686173686f700000000000000000000000000000604482015260640161077e565b60606000836005811115611ecd57611ecd6128b8565b1415611eda57508061155c565b611bbc8383611c99565b60606000836008811115611efa57611efa6128b8565b1415611f0757508061155c565b6001836008811115611f1b57611f1b6128b8565b1415611f5357611f2b82516120a2565b82604051602001611f3d929190612fbc565b604051602081830303815290604052905061155c565b6007836008811115611f6757611f676128b8565b1415611fc5578151602014611fbe5760405162461bcd60e51b815260206004820152601160248201527f4578706563746564203332206279746573000000000000000000000000000000604482015260640161077e565b508061155c565b6008836008811115611fd957611fd96128b8565b1415612030578151604014611fbe5760405162461bcd60e51b815260206004820152601160248201527f4578706563746564203634206279746573000000000000000000000000000000604482015260640161077e565b60405162461bcd60e51b815260206004820152601460248201527f556e737570706f72746564206c656e6774686f70000000000000000000000000604482015260640161077e565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b60608160015b607f8267ffffffffffffffff1611156120e05760078267ffffffffffffffff16901c91506001816120d99190612feb565b90506120a8565b60008167ffffffffffffffff1667ffffffffffffffff8111156121055761210561238d565b6040519080825280601f01601f19166020018201604052801561212f576020820181803683370190505b50905084925060005b8267ffffffffffffffff168167ffffffffffffffff1610156121cd5783607f1660801760f81b828267ffffffffffffffff168151811061217a5761217a612ddd565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060078467ffffffffffffffff16901c935080806121c59061300e565b915050612138565b507f7f00000000000000000000000000000000000000000000000000000000000000816121fb600185613036565b67ffffffffffffffff168151811061221557612215612ddd565b0160200180519091167fff000000000000000000000000000000000000000000000000000000000000001690600082901a905350949350505050565b60408051610140810190915260006080820181815260a0830182905260c0830182905260e08301829052610100830191909152606061012083015281526020810161229a612332565b815260200160008152602001600081525090565b8280546122ba90612da2565b90600052602060002090601f0160209004810192826122dc5760008555612322565b82601f106122f557805160ff1916838001178555612322565b82800160010185558215612322579182015b82811115612322578251825591602001919060010190612307565b5061232e929150612378565b5090565b6040518060c00160405280606081526020016000815260200160008152602001600081526020016060815260200160006005811115612373576123736128b8565b905290565b5b8082111561232e5760008155600101612379565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156123c6576123c661238d565b60405290565b6040516080810167ffffffffffffffff811182821017156123c6576123c661238d565b60405160a0810167ffffffffffffffff811182821017156123c6576123c661238d565b604051601f8201601f1916810167ffffffffffffffff8111828210171561243b5761243b61238d565b604052919050565b600082601f83011261245457600080fd5b813567ffffffffffffffff81111561246e5761246e61238d565b612481601f8201601f1916602001612412565b81815284602083860101111561249657600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156124c557600080fd5b813567ffffffffffffffff8111156124dc57600080fd5b611c9184828501612443565b60005b838110156125035781810151838201526020016124eb565b83811115612512576000848401525b50505050565b600081518084526125308160208601602086016124e8565b601f01601f19169290920160200192915050565b602081526000611bbc6020830184612518565b801515811461256557600080fd5b50565b803561257381612557565b919050565b80356006811061257357600080fd5b600060c0828403121561259957600080fd5b6125a16123a3565b905081356125ae81612557565b81526125bc60208301612578565b60208201526125cd60408301612578565b60408201526125de60608301612578565b60608201526080820135600981106125f557600080fd5b608082015260a082013567ffffffffffffffff81111561261457600080fd5b61262084828501612443565b60a08301525092915050565b600067ffffffffffffffff8211156126465761264661238d565b5060051b60200190565b600082601f83011261266157600080fd5b813560206126766126718361262c565b612412565b82815260059290921b8401810191818101908684111561269557600080fd5b8286015b8481101561275b57803567ffffffffffffffff808211156126ba5760008081fd5b908801906080828b03601f19018113156126d45760008081fd5b6126dc6123cc565b878401356126e981612557565b815260406126f8858201612578565b89830152606080860135858111156127105760008081fd5b61271e8f8c838a0101612443565b848401525092850135928484111561273857600091508182fd5b6127468e8b86890101612443565b90830152508652505050918301918301612699565b509695505050505050565b600060a0828403121561277857600080fd5b6127806123ef565b905061278b82612568565b8152602082013567ffffffffffffffff808211156127a857600080fd5b6127b485838601612443565b602084015260408401359150808211156127cd57600080fd5b6127d985838601612443565b604084015260608401359150808211156127f257600080fd5b6127fe85838601612587565b6060840152608084013591508082111561281757600080fd5b5061282484828501612650565b60808301525092915050565b60008060006060848603121561284557600080fd5b833567ffffffffffffffff8082111561285d57600080fd5b61286987838801612443565b9450602086013591508082111561287f57600080fd5b61288b87838801612443565b935060408601359150808211156128a157600080fd5b506128ae86828701612766565b9150509250925092565b634e487b7160e01b600052602160045260246000fd5b600681106128de576128de6128b8565b9052565b805160c080845281519084018190526000916020919082019060e0860190845b8181101561291e57835183529284019291840191600101612902565b5050828501518387015260408501516040870152606085015160608701526080850151925085810360808701526129558184612518565b9250505060a083015161296b60a08601826128ce565b509392505050565b6020815260008251608060208401528051151560a0840152602081015161299d60c08501826128ce565b5060408101516129b060e08501826128ce565b5060608101516129c46101008501826128ce565b506080810151600981106129da576129da6128b8565b61012084015260a0015160c06101408401526129fa610160840182612518565b90506020840151601f19848303016040850152612a1782826128e2565b91505060408401516060840152606084015160808401528091505092915050565b6001600160a01b038116811461256557600080fd5b60008060408385031215612a6057600080fd5b8235612a6b81612a38565b91506020830135612a7b81612a38565b809150509250929050565b600060208284031215612a9857600080fd5b8135611bbc81612a38565b600060208284031215612ab557600080fd5b5035919050565b600082601f830112612acd57600080fd5b81356020612add6126718361262c565b82815260059290921b84018101918181019086841115612afc57600080fd5b8286015b8481101561275b5780358352918301918301612b00565b600060808284031215612b2957600080fd5b612b316123cc565b9050813567ffffffffffffffff80821115612b4b57600080fd5b612b5785838601612587565b83526020840135915080821115612b6d57600080fd5b9083019060c08286031215612b8157600080fd5b612b896123a3565b823582811115612b9857600080fd5b612ba487828601612abc565b825250602083013560208201526040830135604082015260608301356060820152608083013582811115612bd757600080fd5b612be387828601612443565b608083015250612bf560a08401612578565b60a0820152806020850152505050604082013560408201526060820135606082015292915050565b600080600080600060a08688031215612c3557600080fd5b853567ffffffffffffffff80821115612c4d57600080fd5b612c5989838a01612766565b96506020880135915080821115612c6f57600080fd5b612c7b89838a01612b17565b95506040880135915080821115612c9157600080fd5b612c9d89838a01612443565b94506060880135915080821115612cb357600080fd5b612cbf89838a01612443565b93506080880135915080821115612cd557600080fd5b50612ce288828901612443565b9150509295509295909350565b600080600080600060a08688031215612d0757600080fd5b8535612d1281612a38565b9450602086013567ffffffffffffffff80821115612d2f57600080fd5b612d3b89838a01612766565b95506040880135915080821115612d5157600080fd5b612d5d89838a01612443565b94506060880135915080821115612d7357600080fd5b612d7f89838a01612443565b93506080880135915080821115612d9557600080fd5b50612ce288828901612766565b600181811c90821680612db657607f821691505b60208210811415612dd757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60008251612e058184602087016124e8565b9190910192915050565b600080835481600182811c915080831680612e2b57607f831692505b6020808410821415612e4b57634e487b7160e01b86526022600452602486fd5b818015612e5f5760018114612e7057612e9d565b60ff19861689528489019650612e9d565b60008a81526020902060005b86811015612e955781548b820152908501908301612e7c565b505084890196505b509498975050505050505050565b8315158152606060208201526000612ec66060830185612518565b8281036040840152612ed88185612518565b9695505050505050565b600060208284031215612ef457600080fd5b5051919050565b600060208284031215612f0d57600080fd5b8151611bbc81612557565b604081526000612f2b6040830185612518565b8281036020840152611b0b8185612518565b634e487b7160e01b600052601160045260246000fd5b6000600019821415612f6757612f67612f3d565b5060010190565b600082821015612f8057612f80612f3d565b500390565b6000816000190483118215151615612f9f57612f9f612f3d565b500290565b60008219821115612fb757612fb7612f3d565b500190565b60008351612fce8184602088016124e8565b835190830190612fe28183602088016124e8565b01949350505050565b600067ffffffffffffffff808316818516808303821115612fe257612fe2612f3d565b600067ffffffffffffffff8083168181141561302c5761302c612f3d565b6001019392505050565b600067ffffffffffffffff8381169083168181101561305757613057612f3d565b03939250505056fea26469706673582212204d5a5c52895ea78fd4ffbc9645e77de268a85444d545ec948924df0d5985924764736f6c634300080b0033";

type AnconProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnconProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnconProtocol__factory extends ContractFactory {
  constructor(...args: AnconProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AnconProtocol> {
    return super.deploy(overrides || {}) as Promise<AnconProtocol>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AnconProtocol {
    return super.attach(address) as AnconProtocol;
  }
  connect(signer: Signer): AnconProtocol__factory {
    return super.connect(signer) as AnconProtocol__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnconProtocolInterface {
    return new utils.Interface(_abi) as AnconProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnconProtocol {
    return new Contract(address, _abi, signerOrProvider) as AnconProtocol;
  }
}
