/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AnconProtocol, AnconProtocolInterface } from "../AnconProtocol";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enrolledStatus",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "roothash",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct AnconProtocol.Header",
        name: "header",
        type: "tuple",
      },
    ],
    name: "AccountRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "roothash",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct AnconProtocol.Header",
        name: "header",
        type: "tuple",
      },
    ],
    name: "HeaderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "roothash",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct AnconProtocol.Header",
        name: "header",
        type: "tuple",
      },
    ],
    name: "ProofPacketSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "ServiceFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "paymentAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "ENROLL_DAG",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "ENROLL_PAYMENT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "SUBMIT_PAYMENT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountByAddrProofs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "accountProofs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "accountRegistrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "dagRegistrationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getIavlSpec",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leafSpec",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "childOrder",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "childSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minPrefixLength",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPrefixLength",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "emptyChild",
                type: "bytes",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
            ],
            internalType: "struct Ics23Helper.InnerSpec",
            name: "innerSpec",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDepth",
            type: "uint256",
          },
        ],
        internalType: "struct Ics23Helper.ProofSpec",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "proofs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "relayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "relayerHashTable",
    outputs: [
      {
        internalType: "bytes",
        name: "roothash",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leafSpec",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256[]",
                name: "childOrder",
                type: "uint256[]",
              },
              {
                internalType: "uint256",
                name: "childSize",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minPrefixLength",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPrefixLength",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "emptyChild",
                type: "bytes",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
            ],
            internalType: "struct Ics23Helper.InnerSpec",
            name: "innerSpec",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "maxDepth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minDepth",
            type: "uint256",
          },
        ],
        internalType: "struct Ics23Helper.ProofSpec",
        name: "spec",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "root",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [],
    stateMutability: "pure",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "whitelistedDagGraph",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getContractIdentifier",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "dagAddress",
        type: "address",
      },
    ],
    name: "setWhitelistedDagGraph",
    outputs: [],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "rootHash",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "updateRelayerHeader",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "setPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setAccountRegistrationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setDagGraphFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
    ],
    name: "getProtocolHeader",
    outputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "roothash",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct AnconProtocol.Header",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "did",
        type: "bytes",
      },
    ],
    name: "getProof",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
    ],
    name: "hasProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "did",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "enrollL2Account",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "submitPacketWithProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "key",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "exProof",
        type: "tuple",
      },
    ],
    name: "verifyProofWithKV",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
];

const _bytecode =
  "0x60806040527faa38c8fcdb8500f6802157621989c44502acc94ca3eb31e1547a766ce91448b26000557f2f6bb624cb316ab670df79a1530a1105c05bdac88a2221c0a2c3efa065e294666001557fa8a7d14acee15b581bdc62c67a1b2711ec58a960850b336a002a03c0f3367b3b60025560006006556000600755600060085560006009553480156200009157600080fd5b5060405162003b9638038062003b96833981016040819052620000b491620000ec565b60038054336001600160a01b031991821617909155600580549091166001600160a01b03939093169290921790915560095562000128565b600080604083850312156200010057600080fd5b82516001600160a01b03811681146200011857600080fd5b6020939093015192949293505050565b613a5e80620001386000396000f3fe6080604052600436106101d85760003560e01c80638b178bec11610102578063b0e21e8a11610095578063e9cbd82211610064578063e9cbd82214610582578063e9f49b53146105a2578063ee983e8c146105c2578063fc7ea420146105d857600080fd5b8063b0e21e8a146104fc578063c284bdf314610512578063d56a07e314610527578063d7c9b5691461056257600080fd5b8063a21c87d8116100d1578063a21c87d814610493578063a5aa7bd3146104a9578063b05cedcd146104bc578063b0d264e7146104dc57600080fd5b80638b178bec1461042d5780638da5cb5b1461044d57806397554e8f1461046d578063998b32e81461048057600080fd5b80635dad28de1161017a57806373d157171161014957806373d157171461039c578063787dce3d146103bc5780637a24f02b146103dc5780638406c0791461040d57600080fd5b80635dad28de146103195780635eccc3711461032f578063693ac4fb1461035c5780636a326ab11461037c57600080fd5b80633aeac4e1116101b65780633aeac4e11461028357806340ae5ffa146102a557806351ceefe7146102c957806351cff8d9146102f957600080fd5b806301644028146101dd57806305c248531461021357806327dcd78c14610261575b600080fd5b3480156101e957600080fd5b506101fd6101f8366004612c4d565b6105ee565b60405161020a9190612cde565b60405180910390f35b34801561021f57600080fd5b5061024961022e366004612cf1565b600d602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161020a565b34801561026d57600080fd5b50610276610693565b60405161020a9190612dc5565b34801561028f57600080fd5b506102a361029e366004612eb2565b6107a7565b005b3480156102b157600080fd5b506102bb60005481565b60405190815260200161020a565b3480156102d557600080fd5b506102e96102e43660046131bc565b610952565b604051901515815260200161020a565b34801561030557600080fd5b506102a361031436600461324e565b610a09565b34801561032557600080fd5b506102bb60075481565b34801561033b57600080fd5b5061034f61034a366004612cf1565b610b0f565b60405161020a919061326b565b34801561036857600080fd5b506101fd610377366004612c4d565b610c16565b34801561038857600080fd5b506102a361039736600461324e565b610cc6565b3480156103a857600080fd5b506101fd6103b736600461324e565b610d0c565b3480156103c857600080fd5b506102a36103d7366004612cf1565b610d25565b3480156103e857600080fd5b506103fc6103f7366004612cf1565b610d41565b60405161020a9594939291906132be565b34801561041957600080fd5b50600454610249906001600160a01b031681565b34801561043957600080fd5b506102a3610448366004612cf1565b610dfc565b34801561045957600080fd5b50600354610249906001600160a01b031681565b6102e961047b3660046132f8565b610e18565b6102e961048e3660046131bc565b611092565b34801561049f57600080fd5b506102bb60085481565b6102a36104b73660046133be565b611278565b3480156104c857600080fd5b506102a36104d73660046133e3565b611324565b3480156104e857600080fd5b506102a36104f73660046135bf565b6114d4565b34801561050857600080fd5b506102bb60065481565b34801561051e57600080fd5b506102bb611643565b34801561053357600080fd5b506102e9610542366004612c4d565b8051602081830181018051600c8252928201919093012091525460ff1681565b34801561056e57600080fd5b506102a361057d366004612cf1565b611690565b34801561058e57600080fd5b50600554610249906001600160a01b031681565b3480156105ae57600080fd5b506102e96105bd366004612c4d565b6116ac565b3480156105ce57600080fd5b506102bb60015481565b3480156105e457600080fd5b506102bb60025481565b8051602081830181018051600a825292820191909301209152805461061290613691565b80601f016020809104026020016040519081016040528092919081815260200182805461063e90613691565b801561068b5780601f106106605761010080835404028352916020019161068b565b820191906000526020600020905b81548152906001019060200180831161066e57829003601f168201915b505050505081565b61069b6129eb565b6106a36129eb565b6040805160028082526060820183526000926020830190803683370190505090506000816000815181106106d9576106d96136cc565b6020026020010181815250506001816001815181106106fa576106fa6136cc565b6020026020010181815250506040518060c001604052806001151581526020016001600581111561072d5761072d612d0a565b815260200160008152602001600181526020016001815260408051808201825260018082526000602083810182905294850192909252938652815160c081018352858152602181850152600481840152600c60608201528251938401909252825260808101919091529060a0820152602083015250919050565b6003546001600160a01b031633146107be57600080fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610805573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082991906136e2565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015610895573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b991906136fb565b61090a5760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c6564000000000000000000000000000000000060448201526064015b60405180910390fd5b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161094591815260200190565b60405180910390a2505050565b60006109fe82610960610693565b6000888152600e60205260409020805461097990613691565b80601f01602080910402602001604051908101604052809291908181526020018280546109a590613691565b80156109f25780601f106109c7576101008083540402835291602001916109f2565b820191906000526020600020905b8154815290600101906020018083116109d557829003601f168201915b505050505087876114d4565b506001949350505050565b6003546001600160a01b03163314610a2057600080fd5b604051479060009081906001600160a01b0385169084908381818185875af1925050503d8060008114610a6f576040519150601f19603f3d011682016040523d82523d6000602084013e610a74565b606091505b509150915081610ac65760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e642045746865720000000000000000000000006044820152606401610901565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d584604051610b0191815260200190565b60405180910390a250505050565b6040805160a0810182526060808252600060208301819052928201839052810182905260808101919091526000828152600e602052604090819020815160a08101909252805482908290610b6290613691565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8e90613691565b8015610bdb5780601f10610bb057610100808354040283529160200191610bdb565b820191906000526020600020905b815481529060010190602001808311610bbe57829003601f168201915b505050918352505060018201546020820152600282015460ff1660408201526003820154606082015260049091015460809091015292915050565b6060600a82604051610c289190613718565b90815260200160405180910390208054610c4190613691565b80601f0160208091040260200160405190810160405280929190818152602001828054610c6d90613691565b8015610cba5780601f10610c8f57610100808354040283529160200191610cba565b820191906000526020600020905b815481529060010190602001808311610c9d57829003601f168201915b50505050509050919050565b6003546001600160a01b03163314610cdd57600080fd5b6005805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b600b602052600090815260409020805461061290613691565b6003546001600160a01b03163314610d3c57600080fd5b600655565b600e60205260009081526040902080548190610d5c90613691565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8890613691565b8015610dd55780601f10610daa57610100808354040283529160200191610dd5565b820191906000526020600020905b815481529060010190602001808311610db857829003601f168201915b505050506001830154600284015460038501546004909501549394919360ff909116925085565b6003546001600160a01b03163314610e1357600080fd5b600755565b6000600c84604051610e2a9190613718565b9081526040519081900360200190205460ff1615610eaf5760405162461bcd60e51b8152602060048201526024808201527f70726f6f6620686173206265656e207375626d69747465642028666f756e642060448201527f6b657929000000000000000000000000000000000000000000000000000000006064820152608401610901565b838051906020012082602001518051906020012014610efe5760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964206b657960a81b6044820152606401610901565b846020015180519060200120600b6000886001600160a01b03166001600160a01b03168152602001908152602001600020604051610f3c9190613734565b604051809103902014610f915760405162461bcd60e51b815260206004820152601060248201527f696e76616c69642075736572206b6579000000000000000000000000000000006044820152606401610901565b610f9b87866116d7565b610fe75760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420757365722070726f6f6600000000000000000000000000006044820152606401610901565b610ff187836116d7565b610ffa57600080fd5b6001600c8560405161100c9190613718565b908152604051908190036020019020805491151560ff199092169190911790556002546110399087611795565b6000878152600e60205260409081902090517feb70717aed86b7b74922bf3c897132cf2b351777500f47ba85892d9a8b9ded119161107d91879187918c9190613856565b60405180910390a15060019695505050505050565b60008380519060200120826020015180519060200120146110e35760405162461bcd60e51b815260206004820152600b60248201526a696e76616c6964206b657960a81b6044820152606401610901565b6110ed85836116d7565b6111395760405162461bcd60e51b815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152606401610901565b600a836040516111499190613718565b90815260405190819003602001812061116191613734565b6040518091039020848051906020012014156111bf5760405162461bcd60e51b815260206004820152601760248201527f7573657220616c726561647920726567697374657265640000000000000000006044820152606401610901565b6111cb60005433611795565b83600a846040516111dc9190613718565b908152602001604051809103902090805190602001906111fd929190612a48565b50336000908152600b60209081526040909120855161121e92870190612a48565b506000858152600e60205260409081902090517f6c192fb78c273524a335413437de624fbbb70b8d397c3da1125cf3bc67ee8d019161126591600191889188918b916138a0565b60405180910390a1506001949350505050565b6000828152600d60205260409020546001600160a01b0316156112dd5760405162461bcd60e51b815260206004820152600660248201527f65786973747300000000000000000000000000000000000000000000000000006044820152606401610901565b6112e960015433611795565b6000918252600d6020526040909120805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055565b6040805160008082526020820180845289905260ff861692820192909252606081018490526080810183905260019060a0016020604051602081039080840390855afa158015611378573d6000803e3d6000fd5b505060408051601f19015160008a8152600d60205291909120549092506001600160a01b0380841691161490506113f15760405162461bcd60e51b815260206004820152601760248201527f696e76616c6964206e6574776f726b206d6f6e696b65720000000000000000006044820152606401610901565b6040805160a081018252878152602080820188905260ff871682840152606082018690526080820185905260008a8152600e825292909220815180519293919261143e9284920190612a48565b506020820151816001015560408201518160020160006101000a81548160ff021916908360ff1602179055506060820151816003015560808201518160040155905050867f8ddc58a9c09dd6d097e7bb02a8823cf939ba9b889769ce9da141e6c7c6c26570600e60008a81526020019081526020016000206040516114c391906138f3565b60405180910390a250505050505050565b6114de8585611ba7565b6114ec856020015183611ccf565b6115385760405162461bcd60e51b815260206004820181905260248201527f50726f7669646564206b657920646f65736e2774206d617463682070726f6f666044820152606401610901565b611546856040015182611ccf565b6115b85760405162461bcd60e51b815260206004820152602260248201527f50726f76696465642076616c756520646f65736e2774206d617463682070726f60448201527f6f660000000000000000000000000000000000000000000000000000000000006064820152608401610901565b6115ca6115c486611cff565b84611ccf565b61163c5760405162461bcd60e51b815260206004820152602c60248201527f43616c63756c636174656420726f6f7420646f65736e2774206d61746368207060448201527f726f766964656420726f6f7400000000000000000000000000000000000000006064820152608401610901565b5050505050565b60006009543060405160200161167592919091825260601b6bffffffffffffffffffffffff1916602082015260340190565b60405160208183030381529060405280519060200120905090565b6003546001600160a01b031633146116a757600080fd5b600855565b6000600c826040516116be9190613718565b9081526040519081900360200190205460ff1692915050565b600061178b826116e5610693565b6000868152600e6020526040902080546116fe90613691565b80601f016020809104026020016040519081016040528092919081815260200182805461172a90613691565b80156117775780601f1061174c57610100808354040283529160200191611777565b820191906000526020600020905b81548152906001019060200180831161175a57829003601f168201915b5050505050856020015186604001516114d4565b5060015b92915050565b6005546040516370a0823160e01b81523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156117de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180291906136e2565b1161184f5760405162461bcd60e51b815260206004820152601160248201527f6e6f20656e6f7567682062616c616e63650000000000000000000000000000006044820152606401610901565b60015482141561196b576005546008546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af11580156118b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d991906136fb565b6119255760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572206661696c656420666f7220726563697069656e740000006044820152606401610901565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b360085460405161196291815260200190565b60405180910390a25b600054821415611a87576005546007546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af11580156119d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119f591906136fb565b611a415760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572206661696c656420666f7220726563697069656e740000006044820152606401610901565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b3600754604051611a7e91815260200190565b60405180910390a25b600254821415611ba3576005546006546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201929092529116906323b872dd906064016020604051808303816000875af1158015611aed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b1191906136fb565b611b5d5760405162461bcd60e51b815260206004820152601d60248201527f7472616e73666572206661696c656420666f7220726563697069656e740000006044820152606401610901565b806001600160a01b03167fa70c9ef1994019c7c70e8134256a652460b545755ed8aad140daeaccc30446b3600654604051611b9a91815260200190565b60405180910390a25b5050565b611bb5826060015182611d6e565b60608101511580611bcf5750806060015182608001515110155b611c1b5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f707320646570746820746f6f2073686f727400000000000000006044820152606401610901565b60408101511580611c355750806040015182608001515110155b611c815760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f707320646570746820746f6f2073686f727400000000000000006044820152606401610901565b60005b826080015151811015611cca57611cb883608001518281518110611caa57611caa6136cc565b602002602001015183611fb8565b80611cc28161391c565b915050611c84565b505050565b60008151835114611ce25750600061178f565b825160208381018281209186019283209091145b95945050505050565b60606000611d1a836060015184602001518560400151612183565b905060005b836080015151811015611d6757611d5384608001518281518110611d4557611d456136cc565b6020026020010151836122a4565b915080611d5f8161391c565b915050611d1f565b5092915050565b8051602001516005811115611d8557611d85612d0a565b82602001516005811115611d9b57611d9b612d0a565b14611de85760405162461bcd60e51b815260206004820152601160248201527f556e657870656374656420486173684f700000000000000000000000000000006044820152606401610901565b8051604001516005811115611dff57611dff612d0a565b82604001516005811115611e1557611e15612d0a565b14611e625760405162461bcd60e51b815260206004820152601560248201527f556e657870656374656420507265686173684b657900000000000000000000006044820152606401610901565b8051606001516005811115611e7957611e79612d0a565b82606001516005811115611e8f57611e8f612d0a565b14611edc5760405162461bcd60e51b815260206004820152601560248201527f556e657870656374656420507265686173684b657900000000000000000000006044820152606401610901565b8051608001516008811115611ef357611ef3612d0a565b82608001516008811115611f0957611f09612d0a565b14611f565760405162461bcd60e51b815260206004820152601a60248201527f556e657870656374656c65616653706563204c656e6774684f700000000000006044820152606401610901565b611f6c8260a00151826000015160a00151612353565b611ba35760405162461bcd60e51b815260206004820152601760248201527f4c6561664f704c69623a2077726f6e67207072656669780000000000000000006044820152606401610901565b8051602001516005811115611fcf57611fcf612d0a565b82602001516005811115611fe557611fe5612d0a565b146120325760405162461bcd60e51b815260206004820152601160248201527f556e657870656374656420486173684f700000000000000000000000000000006044820152606401610901565b6120488260400151826000015160a00151612353565b156120955760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f704c69623a2077726f6e672070726566697800000000000000006044820152606401610901565b80602001516040015182604001515110156120f25760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f702070726566697820746f6f2073686f727400000000000000006044820152606401610901565b602080820151908101519051516000919061210f90600190613937565b612119919061394e565b90508082602001516060015161212f919061396d565b8360400151511115611cca5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f702070726566697820746f6f2073686f727400000000000000006044820152606401610901565b606060008351116121d65760405162461bcd60e51b815260206004820152601160248201527f4c656166206f70206e65656473206b65790000000000000000000000000000006044820152606401610901565b60008251116122275760405162461bcd60e51b815260206004820152601360248201527f4c656166206f70206e656564732076616c7565000000000000000000000000006044820152606401610901565b60008460a001516122418660400151876080015187612416565b604051602001612252929190613985565b6040516020818303038152906040526122748660600151876080015186612416565b604051602001612285929190613985565b6040516020818303038152906040529050611cf6856020015182612433565b606060008251116122f75760405162461bcd60e51b815260206004820152601a60248201527f496e6e6572206f70206e65656473206368696c642076616c75650000000000006044820152606401610901565b61234c8360200151846040015184604051602001612316929190613985565b60408051601f1981840301815290829052606087015161233892602001613985565b604051602081830303815290604052612433565b9392505050565b60008151835110156123675750600061178f565b60005b825181101561240c57828181518110612385576123856136cc565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168482815181106123c4576123c46136cc565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016146123fa57600091505061178f565b806124048161391c565b91505061236a565b5060019392505050565b606061242b836124268685612651565b61267e565b949350505050565b6060600183600581111561244957612449612d0a565b14156124ae576124a76002836040516124629190613718565b602060405180830381855afa15801561247f573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906124a291906136e2565b612812565b905061178f565b60028360058111156124c2576124c2612d0a565b14156125105760405162461bcd60e51b815260206004820152601660248201527f534841353132206e6f7420696d706c656d656e746564000000000000000000006044820152606401610901565b600483600581111561252457612524612d0a565b1415612578576124a760038360405161253d9190613718565b602060405180830381855afa15801561255a573d6000803e3d6000fd5b5050506040515160601b6bffffffffffffffffffffffff1916612812565b600583600581111561258c5761258c612d0a565b14156126095760006002836040516125a49190613718565b602060405180830381855afa1580156125c1573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906125e491906136e2565b905061260160036125f483612812565b60405161253d9190613718565b91505061178f565b60405162461bcd60e51b815260206004820152601260248201527f556e737570706f7274656420686173686f7000000000000000000000000000006044820152606401610901565b6060600083600581111561266757612667612d0a565b141561267457508061178f565b61234c8383612433565b6060600083600881111561269457612694612d0a565b14156126a157508061178f565b60018360088111156126b5576126b5612d0a565b14156126ed576126c5825161283c565b826040516020016126d7929190613985565b604051602081830303815290604052905061178f565b600783600881111561270157612701612d0a565b141561275f5781516020146127585760405162461bcd60e51b815260206004820152601160248201527f45787065637465642033322062797465730000000000000000000000000000006044820152606401610901565b508061178f565b600883600881111561277357612773612d0a565b14156127ca5781516040146127585760405162461bcd60e51b815260206004820152601160248201527f45787065637465642036342062797465730000000000000000000000000000006044820152606401610901565b60405162461bcd60e51b815260206004820152601460248201527f556e737570706f72746564206c656e6774686f700000000000000000000000006044820152606401610901565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b60608160015b607f8267ffffffffffffffff16111561287a5760078267ffffffffffffffff16901c915060018161287391906139b4565b9050612842565b60008167ffffffffffffffff1667ffffffffffffffff81111561289f5761289f612b27565b6040519080825280601f01601f1916602001820160405280156128c9576020820181803683370190505b50905084925060005b8267ffffffffffffffff168167ffffffffffffffff1610156129675783607f1660801760f81b828267ffffffffffffffff1681518110612914576129146136cc565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060078467ffffffffffffffff16901c9350808061295f906139d7565b9150506128d2565b507f7f00000000000000000000000000000000000000000000000000000000000000816129956001856139ff565b67ffffffffffffffff16815181106129af576129af6136cc565b0160200180519091167fff000000000000000000000000000000000000000000000000000000000000001690600082901a905350949350505050565b60408051610140810190915260006080820181815260a0830182905260c0830182905260e083018290526101008301919091526060610120830152815260208101612a34612acc565b815260200160008152602001600081525090565b828054612a5490613691565b90600052602060002090601f016020900481019282612a765760008555612abc565b82601f10612a8f57805160ff1916838001178555612abc565b82800160010185558215612abc579182015b82811115612abc578251825591602001919060010190612aa1565b50612ac8929150612b12565b5090565b6040518060c00160405280606081526020016000815260200160008152602001600081526020016060815260200160006005811115612b0d57612b0d612d0a565b905290565b5b80821115612ac85760008155600101612b13565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715612b6057612b60612b27565b60405290565b6040516080810167ffffffffffffffff81118282101715612b6057612b60612b27565b60405160a0810167ffffffffffffffff81118282101715612b6057612b60612b27565b604051601f8201601f1916810167ffffffffffffffff81118282101715612bd557612bd5612b27565b604052919050565b600082601f830112612bee57600080fd5b813567ffffffffffffffff811115612c0857612c08612b27565b612c1b601f8201601f1916602001612bac565b818152846020838601011115612c3057600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215612c5f57600080fd5b813567ffffffffffffffff811115612c7657600080fd5b61242b84828501612bdd565b60005b83811015612c9d578181015183820152602001612c85565b83811115612cac576000848401525b50505050565b60008151808452612cca816020860160208601612c82565b601f01601f19169290920160200192915050565b60208152600061234c6020830184612cb2565b600060208284031215612d0357600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60068110612d3057612d30612d0a565b9052565b805160c080845281519084018190526000916020919082019060e0860190845b81811015612d7057835183529284019291840191600101612d54565b505082850151838701526040850151604087015260608501516060870152608085015192508581036080870152612da78184612cb2565b9250505060a0830151612dbd60a0860182612d20565b509392505050565b6020815260008251608060208401528051151560a08401526020810151612def60c0850182612d20565b506040810151612e0260e0850182612d20565b506060810151612e16610100850182612d20565b50608081015160098110612e2c57612e2c612d0a565b61012084015260a0015160c0610140840152612e4c610160840182612cb2565b90506020840151601f19848303016040850152612e698282612d34565b91505060408401516060840152606084015160808401528091505092915050565b6001600160a01b0381168114612e9f57600080fd5b50565b8035612ead81612e8a565b919050565b60008060408385031215612ec557600080fd5b8235612ed081612e8a565b91506020830135612ee081612e8a565b809150509250929050565b8015158114612e9f57600080fd5b8035612ead81612eeb565b803560068110612ead57600080fd5b600060c08284031215612f2557600080fd5b612f2d612b3d565b90508135612f3a81612eeb565b8152612f4860208301612f04565b6020820152612f5960408301612f04565b6040820152612f6a60608301612f04565b6060820152608082013560098110612f8157600080fd5b608082015260a082013567ffffffffffffffff811115612fa057600080fd5b612fac84828501612bdd565b60a08301525092915050565b600067ffffffffffffffff821115612fd257612fd2612b27565b5060051b60200190565b600082601f830112612fed57600080fd5b81356020613002612ffd83612fb8565b612bac565b82815260059290921b8401810191818101908684111561302157600080fd5b8286015b848110156130e757803567ffffffffffffffff808211156130465760008081fd5b908801906080828b03601f19018113156130605760008081fd5b613068612b66565b8784013561307581612eeb565b81526040613084858201612f04565b898301526060808601358581111561309c5760008081fd5b6130aa8f8c838a0101612bdd565b84840152509285013592848411156130c457600091508182fd5b6130d28e8b86890101612bdd565b90830152508652505050918301918301613025565b509695505050505050565b600060a0828403121561310457600080fd5b61310c612b89565b905061311782612ef9565b8152602082013567ffffffffffffffff8082111561313457600080fd5b61314085838601612bdd565b6020840152604084013591508082111561315957600080fd5b61316585838601612bdd565b6040840152606084013591508082111561317e57600080fd5b61318a85838601612f13565b606084015260808401359150808211156131a357600080fd5b506131b084828501612fdc565b60808301525092915050565b600080600080608085870312156131d257600080fd5b84359350602085013567ffffffffffffffff808211156131f157600080fd5b6131fd88838901612bdd565b9450604087013591508082111561321357600080fd5b61321f88838901612bdd565b9350606087013591508082111561323557600080fd5b50613242878288016130f2565b91505092959194509250565b60006020828403121561326057600080fd5b813561234c81612e8a565b602081526000825160a0602084015261328760c0840182612cb2565b90506020840151604084015260ff604085015116606084015260608401516080840152608084015160a08401528091505092915050565b60a0815260006132d160a0830188612cb2565b905085602083015260ff851660408301528360608301528260808301529695505050505050565b60008060008060008060c0878903121561331157600080fd5b8635955061332160208801612ea2565b9450604087013567ffffffffffffffff8082111561333e57600080fd5b61334a8a838b016130f2565b9550606089013591508082111561336057600080fd5b61336c8a838b01612bdd565b9450608089013591508082111561338257600080fd5b61338e8a838b01612bdd565b935060a08901359150808211156133a457600080fd5b506133b189828a016130f2565b9150509295509295509295565b600080604083850312156133d157600080fd5b823591506020830135612ee081612e8a565b60008060008060008060c087890312156133fc57600080fd5b86359550602087013567ffffffffffffffff81111561341a57600080fd5b61342689828a01612bdd565b95505060408701359350606087013560ff8116811461344457600080fd5b9598949750929560808101359460a0909101359350915050565b600082601f83011261346f57600080fd5b8135602061347f612ffd83612fb8565b82815260059290921b8401810191818101908684111561349e57600080fd5b8286015b848110156130e757803583529183019183016134a2565b6000608082840312156134cb57600080fd5b6134d3612b66565b9050813567ffffffffffffffff808211156134ed57600080fd5b6134f985838601612f13565b8352602084013591508082111561350f57600080fd5b9083019060c0828603121561352357600080fd5b61352b612b3d565b82358281111561353a57600080fd5b6135468782860161345e565b82525060208301356020820152604083013560408201526060830135606082015260808301358281111561357957600080fd5b61358587828601612bdd565b60808301525061359760a08401612f04565b60a0820152806020850152505050604082013560408201526060820135606082015292915050565b600080600080600060a086880312156135d757600080fd5b853567ffffffffffffffff808211156135ef57600080fd5b6135fb89838a016130f2565b9650602088013591508082111561361157600080fd5b61361d89838a016134b9565b9550604088013591508082111561363357600080fd5b61363f89838a01612bdd565b9450606088013591508082111561365557600080fd5b61366189838a01612bdd565b9350608088013591508082111561367757600080fd5b5061368488828901612bdd565b9150509295509295909350565b600181811c908216806136a557607f821691505b602082108114156136c657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156136f457600080fd5b5051919050565b60006020828403121561370d57600080fd5b815161234c81612eeb565b6000825161372a818460208701612c82565b9190910192915050565b600080835461374281613691565b6001828116801561375a576001811461376b5761379a565b60ff1984168752828701945061379a565b8760005260208060002060005b858110156137915781548a820152908401908201613778565b50505082870194505b50929695505050505050565b60a0825260008082546137b881613691565b8060a087015260c06001808416600081146137da57600181146137ee5761381f565b60ff1985168984015260e08901955061381f565b8760005260208060002060005b868110156138165781548c82018701529084019082016137fb565b8b018501975050505b508601546020880152505050600283015460ff16604085015260038301546060850152600490920154608090930192909252919050565b6080815260006138696080830187612cb2565b828103602084015261387b8187612cb2565b9050846040840152828103606084015261389581856137a6565b979650505050505050565b851515815260a0602082015260006138bb60a0830187612cb2565b82810360408401526138cd8187612cb2565b905084606084015282810360808401526138e781856137a6565b98975050505050505050565b60208152600061234c60208301846137a6565b634e487b7160e01b600052601160045260246000fd5b600060001982141561393057613930613906565b5060010190565b60008282101561394957613949613906565b500390565b600081600019048311821515161561396857613968613906565b500290565b6000821982111561398057613980613906565b500190565b60008351613997818460208801612c82565b8351908301906139ab818360208801612c82565b01949350505050565b600067ffffffffffffffff8083168185168083038211156139ab576139ab613906565b600067ffffffffffffffff808316818114156139f5576139f5613906565b6001019392505050565b600067ffffffffffffffff83811690831681811015613a2057613a20613906565b03939250505056fea264697066735822122019a175dc8c73460f008034c9e354e055a94f124f6194f4e9799637a1d5d2f25b64736f6c634300080b0033";

type AnconProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnconProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnconProtocol__factory extends ContractFactory {
  constructor(...args: AnconProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    tokenAddress: string,
    network: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AnconProtocol> {
    return super.deploy(
      tokenAddress,
      network,
      overrides || {}
    ) as Promise<AnconProtocol>;
  }
  getDeployTransaction(
    tokenAddress: string,
    network: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenAddress, network, overrides || {});
  }
  attach(address: string): AnconProtocol {
    return super.attach(address) as AnconProtocol;
  }
  connect(signer: Signer): AnconProtocol__factory {
    return super.connect(signer) as AnconProtocol__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnconProtocolInterface {
    return new utils.Interface(_abi) as AnconProtocolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnconProtocol {
    return new Contract(address, _abi, signerOrProvider) as AnconProtocol;
  }
}
