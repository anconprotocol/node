/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  InvoiceAssetMarketplace,
  InvoiceAssetMarketplaceInterface,
} from "../InvoiceAssetMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenERC20",
        type: "address",
      },
      {
        internalType: "address",
        name: "ancon",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chain",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "id",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "diddoc",
        type: "string",
      },
    ],
    name: "IssuerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weiAmount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "anconprotocol",
    outputs: [
      {
        internalType: "contract IAnconProtocol",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "issuers",
    outputs: [
      {
        internalType: "string",
        name: "id",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "diddoc",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "reputation",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "issuersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc20token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
    ],
    name: "getIssuerLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "category",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "id",
        type: "string",
      },
    ],
    name: "getIssuer",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "id",
            type: "string",
          },
          {
            internalType: "bytes32",
            name: "category",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "diddoc",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "reputation",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "enabled",
            type: "bool",
          },
          {
            internalType: "address",
            name: "creator",
            type: "address",
          },
        ],
        internalType: "struct InvoiceAssetMarketplace.Issuer",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "moniker",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "userProof",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "key",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "value",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_key",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "prehash_value",
                type: "uint8",
              },
              {
                internalType: "enum Ics23Helper.LengthOp",
                name: "len",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.LeafOp",
            name: "leaf",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "bool",
                name: "valid",
                type: "bool",
              },
              {
                internalType: "enum Ics23Helper.HashOp",
                name: "hash",
                type: "uint8",
              },
              {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "suffix",
                type: "bytes",
              },
            ],
            internalType: "struct Ics23Helper.InnerOp[]",
            name: "path",
            type: "tuple[]",
          },
        ],
        internalType: "struct Ics23Helper.ExistenceProof",
        name: "packetProof",
        type: "tuple",
      },
    ],
    name: "registerIssuerWithProof",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006006553480156200001657600080fd5b5060405162001cc138038062001cc18339810160408190526200003991620000ea565b62000044336200007d565b600480546001600160a01b039485166001600160a01b03199182161790915560058054939094169216919091179091556006556200012b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000e557600080fd5b919050565b6000806000606084860312156200010057600080fd5b6200010b84620000cd565b92506200011b60208501620000cd565b9150604084015190509250925092565b611b86806200013b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063730eeadf11610097578063ddca3f4311610066578063ddca3f431461020c578063e245a4a314610215578063e9cbd82214610235578063f2fde38b1461024857600080fd5b8063730eeadf146101ae5780638da5cb5b146101d3578063adb9b61e146101e4578063ced72f871461020457600080fd5b80633cd559a4116100d35780633cd559a41461015557806351cff8d91461018057806369fe0e2d14610193578063715018a6146101a657600080fd5b80631479f99e146100fa57806332e6c907146101205780633aeac4e114610140575b600080fd5b61010d6101083660046110cb565b61025b565b6040519081526020015b60405180910390f35b61013361012e366004611200565b6102ce565b60405161011791906112b7565b61015361014e366004611345565b610519565b005b600554610168906001600160a01b031681565b6040516001600160a01b039091168152602001610117565b61015361018e36600461137e565b61071b565b6101536101a13660046110cb565b610864565b6101536108c3565b6101c16101bc366004611200565b610929565b604051610117969594939291906113a2565b6000546001600160a01b0316610168565b61010d6101f23660046110cb565b60016020526000908152604090205481565b60035461010d565b61010d60035481565b6102286102233660046116d2565b610a96565b6040516101179190611764565b600454610168906001600160a01b031681565b61015361025636600461137e565b610ee8565b6000818152600160205260408120546102bb5760405162461bcd60e51b815260206004820152601060248201527f6e6f206973737565727320666f756e640000000000000000000000000000000060448201526064015b60405180910390fd5b5060009081526001602052604090205490565b6040805160c081018252606080825260006020830181905292820181905281018290526080810182905260a081019190915260008381526002602052604090819020905161031d908490611777565b9081526040519081900360200190206004015460ff16156103805760405162461bcd60e51b815260206004820152601060248201527f6e6f206973737565727320666f756e640000000000000000000000000000000060448201526064016102b2565b60008381526002602052604090819020905161039d908490611777565b90815260200160405180910390206040518060c00160405290816000820180546103c690611793565b80601f01602080910402602001604051908101604052809291908181526020018280546103f290611793565b801561043f5780601f106104145761010080835404028352916020019161043f565b820191906000526020600020905b81548152906001019060200180831161042257829003601f168201915b505050505081526020016001820154815260200160028201805461046290611793565b80601f016020809104026020016040519081016040528092919081815260200182805461048e90611793565b80156104db5780601f106104b0576101008083540402835291602001916104db565b820191906000526020600020905b8154815290600101906020018083116104be57829003601f168201915b50505091835250506003820154602082015260049091015460ff81161515604083015261010090046001600160a01b03166060909101529392505050565b6000546001600160a01b031633146105735760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b2565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156105d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f791906117ce565b6040517fa9059cbb0000000000000000000000000000000000000000000000000000000081526001600160a01b038581166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af1158015610663573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068791906117e7565b6106d35760405162461bcd60e51b815260206004820152600f60248201527f7472616e73666572206661696c6564000000000000000000000000000000000060448201526064016102b2565b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161070e91815260200190565b60405180910390a2505050565b6000546001600160a01b031633146107755760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b2565b604051479060009081906001600160a01b0385169084908381818185875af1925050503d80600081146107c4576040519150601f19603f3d011682016040523d82523d6000602084013e6107c9565b606091505b50915091508161081b5760405162461bcd60e51b815260206004820152601460248201527f4661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016102b2565b836001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58460405161085691815260200190565b60405180910390a250505050565b6000546001600160a01b031633146108be5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b2565b600355565b6000546001600160a01b0316331461091d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b2565b6109276000610fca565b565b6002602090815260009283526040909220815180830184018051928152908401929093019190912091528054819061096090611793565b80601f016020809104026020016040519081016040528092919081815260200182805461098c90611793565b80156109d95780601f106109ae576101008083540402835291602001916109d9565b820191906000526020600020905b8154815290600101906020018083116109bc57829003601f168201915b5050505050908060010154908060020180546109f490611793565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2090611793565b8015610a6d5780601f10610a4257610100808354040283529160200191610a6d565b820191906000526020600020905b815481529060010190602001808311610a5057829003601f168201915b50505050600383015460049093015491929160ff8116915061010090046001600160a01b031686565b6005546040517f5eccc371000000000000000000000000000000000000000000000000000000008152600481018690526060917fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470916001600160a01b0390911690635eccc37190602401600060405180830381865afa158015610b1d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b459190810190611834565b805190602001201415610b9a5760405162461bcd60e51b815260206004820152600f60248201527f496e76616c6964206d6f6e696b6572000000000000000000000000000000000060448201526064016102b2565b60055460208301516040517f97554e8f0000000000000000000000000000000000000000000000000000000081526001600160a01b03909216916397554e8f91610bf191899133918991908b908a90600401611a2e565b6020604051808303816000875af1158015610c10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3491906117e7565b610c805760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964207061636b65742070726f6f6600000000000000000000000060448201526064016102b2565b600080600086806020019051810190610c999190611abd565b9250925092506002600084815260200190815260200160002082604051610cc09190611777565b9081526040519081900360200190206004015460ff161515600114610d4d5760405162461bcd60e51b815260206004820152602160248201527f69737375657220616c72656164792065786973747320616e6420656e61626c6560448201527f640000000000000000000000000000000000000000000000000000000000000060648201526084016102b2565b600083815260016020819052604090912054610d6891611b2a565b600084815260016020818152604080842094909455835160c0810185528681528082018890528085018690526060810184905260808101929092523360a083015286835260029052908290209151909190610dc4908590611777565b90815260200160405180910390206000820151816000019080519060200190610dee929190611032565b50602082810151600183015560408301518051610e119260028501920190611032565b506060820151600382015560808201516004909101805460a0909301516001600160a01b0316610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff921515929092167fffffffffffffffffffffff000000000000000000000000000000000000000000909316929092171790556040518390610e9e908490611777565b60405180910390207fb01af51d4dfd3c71daa3892e6436482dd0b46f90b48566b0387cd5ea1c958a3483604051610ed59190611764565b60405180910390a3509695505050505050565b6000546001600160a01b03163314610f425760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b2565b6001600160a01b038116610fbe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102b2565b610fc781610fca565b50565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461103e90611793565b90600052602060002090601f01602090048101928261106057600085556110a6565b82601f1061107957805160ff19168380011785556110a6565b828001600101855582156110a6579182015b828111156110a657825182559160200191906001019061108b565b506110b29291506110b6565b5090565b5b808211156110b257600081556001016110b7565b6000602082840312156110dd57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561111d5761111d6110e4565b60405290565b6040516080810167ffffffffffffffff8111828210171561111d5761111d6110e4565b60405160a0810167ffffffffffffffff8111828210171561111d5761111d6110e4565b604051601f8201601f1916810167ffffffffffffffff81118282101715611192576111926110e4565b604052919050565b600067ffffffffffffffff8211156111b4576111b46110e4565b50601f01601f191660200190565b60006111d56111d08461119a565b611169565b90508281528383830111156111e957600080fd5b828260208301376000602084830101529392505050565b6000806040838503121561121357600080fd5b82359150602083013567ffffffffffffffff81111561123157600080fd5b8301601f8101851361124257600080fd5b611251858235602084016111c2565b9150509250929050565b60005b8381101561127657818101518382015260200161125e565b83811115611285576000848401525b50505050565b600081518084526112a381602086016020860161125b565b601f01601f19169290920160200192915050565b602081526000825160c060208401526112d360e084018261128b565b9050602084015160408401526040840151601f198483030160608501526112fa828261128b565b915050606084015160808401526080840151151560a08401526001600160a01b0360a08501511660c08401528091505092915050565b6001600160a01b0381168114610fc757600080fd5b6000806040838503121561135857600080fd5b823561136381611330565b9150602083013561137381611330565b809150509250929050565b60006020828403121561139057600080fd5b813561139b81611330565b9392505050565b60c0815260006113b560c083018961128b565b87602084015282810360408401526113cd818861128b565b6060840196909652505091151560808301526001600160a01b031660a0909101529392505050565b600082601f83011261140657600080fd5b61139b838335602085016111c2565b8015158114610fc757600080fd5b803561142e81611415565b919050565b80356006811061142e57600080fd5b600060c0828403121561145457600080fd5b61145c6110fa565b9050813561146981611415565b815261147760208301611433565b602082015261148860408301611433565b604082015261149960608301611433565b60608201526080820135600981106114b057600080fd5b608082015260a082013567ffffffffffffffff8111156114cf57600080fd5b6114db848285016113f5565b60a08301525092915050565b600082601f8301126114f857600080fd5b8135602067ffffffffffffffff80831115611515576115156110e4565b8260051b611524838201611169565b938452858101830193838101908886111561153e57600080fd5b84880192505b858310156115fc5782358481111561155c5760008081fd5b88016080818b03601f19018113156115745760008081fd5b61157c611123565b8783013561158981611415565b81526040611598848201611433565b89830152606080850135898111156115b05760008081fd5b6115be8f8c838901016113f5565b84840152509284013592888411156115d857600091508182fd5b6115e68e8b868801016113f5565b9083015250845250509184019190840190611544565b98975050505050505050565b600060a0828403121561161a57600080fd5b611622611146565b905061162d82611423565b8152602082013567ffffffffffffffff8082111561164a57600080fd5b611656858386016113f5565b6020840152604084013591508082111561166f57600080fd5b61167b858386016113f5565b6040840152606084013591508082111561169457600080fd5b6116a085838601611442565b606084015260808401359150808211156116b957600080fd5b506116c6848285016114e7565b60808301525092915050565b600080600080608085870312156116e857600080fd5b84359350602085013567ffffffffffffffff8082111561170757600080fd5b611713888389016113f5565b9450604087013591508082111561172957600080fd5b61173588838901611608565b9350606087013591508082111561174b57600080fd5b5061175887828801611608565b91505092959194509250565b60208152600061139b602083018461128b565b6000825161178981846020870161125b565b9190910192915050565b600181811c908216806117a757607f821691505b602082108114156117c857634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156117e057600080fd5b5051919050565b6000602082840312156117f957600080fd5b815161139b81611415565b60006118126111d08461119a565b905082815283838301111561182657600080fd5b61139b83602083018461125b565b60006020828403121561184657600080fd5b815167ffffffffffffffff81111561185d57600080fd5b8201601f8101841361186e57600080fd5b61187d84825160208401611804565b949350505050565b634e487b7160e01b600052602160045260246000fd5b600681106118ab576118ab611885565b9052565b600081518084526020808501808196508360051b8101915082860160005b8581101561193e57828403895281516080815115158652868201516118f48888018261189b565b50604080830151828289015261190c8389018261128b565b925050506060808301519250868203818801525061192a818361128b565b9a87019a95505050908401906001016118cd565b5091979650505050505050565b8051151582526000602082015160a0602085015261196c60a085018261128b565b905060408301518482036040860152611985828261128b565b9150506060830151848203606086015280511515825260208101516119ad602084018261189b565b5060408101516119c0604084018261189b565b5060608101516119d3606084018261189b565b506080810151600981106119e9576119e9611885565b8060808401525060a0810151905060c060a0830152611a0b60c083018261128b565b91505060808301518482036080860152611a2582826118af565b95945050505050565b8681526001600160a01b038616602082015260c060408201526000611a5660c083018761194b565b8281036060840152611a68818761128b565b90508281036080840152611a7c818661128b565b905082810360a0840152611a90818561194b565b9998505050505050505050565b600082601f830112611aae57600080fd5b61139b83835160208501611804565b600080600060608486031215611ad257600080fd5b83519250602084015167ffffffffffffffff80821115611af157600080fd5b611afd87838801611a9d565b93506040860151915080821115611b1357600080fd5b50611b2086828701611a9d565b9150509250925092565b60008219821115611b4b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220ba5ddf5a6b540cc0dd41e0be4bd1cebc3b36f5dceb233f65f3d96565453e8e2864736f6c634300080c0033";

type InvoiceAssetMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InvoiceAssetMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InvoiceAssetMarketplace__factory extends ContractFactory {
  constructor(...args: InvoiceAssetMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    tokenERC20: string,
    ancon: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InvoiceAssetMarketplace> {
    return super.deploy(
      tokenERC20,
      ancon,
      chain,
      overrides || {}
    ) as Promise<InvoiceAssetMarketplace>;
  }
  getDeployTransaction(
    tokenERC20: string,
    ancon: string,
    chain: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      tokenERC20,
      ancon,
      chain,
      overrides || {}
    );
  }
  attach(address: string): InvoiceAssetMarketplace {
    return super.attach(address) as InvoiceAssetMarketplace;
  }
  connect(signer: Signer): InvoiceAssetMarketplace__factory {
    return super.connect(signer) as InvoiceAssetMarketplace__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InvoiceAssetMarketplaceInterface {
    return new utils.Interface(_abi) as InvoiceAssetMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InvoiceAssetMarketplace {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InvoiceAssetMarketplace;
  }
}
