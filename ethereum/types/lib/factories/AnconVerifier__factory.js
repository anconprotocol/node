"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnconVerifier__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "onlyOwner",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "getIavlSpec",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leafSpec",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256[]",
                                name: "childOrder",
                                type: "uint256[]",
                            },
                            {
                                internalType: "uint256",
                                name: "childSize",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "minPrefixLength",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "maxPrefixLength",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "emptyChild",
                                type: "bytes",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct ICS23.InnerSpec",
                        name: "innerSpec",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "maxDepth",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minDepth",
                        type: "uint256",
                    },
                ],
                internalType: "struct ICS23.ProofSpec",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "valid",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "key",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leaf",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "suffix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.InnerOp[]",
                        name: "path",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct ICS23.ExistenceProof",
                name: "proof",
                type: "tuple",
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leafSpec",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256[]",
                                name: "childOrder",
                                type: "uint256[]",
                            },
                            {
                                internalType: "uint256",
                                name: "childSize",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "minPrefixLength",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "maxPrefixLength",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "emptyChild",
                                type: "bytes",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct ICS23.InnerSpec",
                        name: "innerSpec",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "maxDepth",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minDepth",
                        type: "uint256",
                    },
                ],
                internalType: "struct ICS23.ProofSpec",
                name: "spec",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "root",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "key",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "value",
                type: "bytes",
            },
        ],
        name: "verify",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "rootHash",
                type: "bytes",
            },
        ],
        name: "setRootHash",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "key",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "value",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "_prefix",
                type: "bytes",
            },
            {
                internalType: "uint256[]",
                name: "_leafOpUint",
                type: "uint256[]",
            },
            {
                internalType: "bytes",
                name: "_innerOpPrefix",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "_innerOpSuffix",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "existenceProofInnerOpHash",
                type: "uint256",
            },
        ],
        name: "convertProof",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "valid",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "key",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leaf",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "suffix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.InnerOp[]",
                        name: "path",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct ICS23.ExistenceProof",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "valid",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "key",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leaf",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "suffix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.InnerOp[]",
                        name: "path",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct ICS23.ExistenceProof",
                name: "proof",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "key",
                type: "bytes",
            },
        ],
        name: "verifyProof",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50604051620023993803806200239983398101604081905261003191610056565b600080546001600160a01b0319166001600160a01b0392909216919091179055610086565b60006020828403121561006857600080fd5b81516001600160a01b038116811461007f57600080fd5b9392505050565b61230380620000966000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100d8578063b0d264e71461011d578063f3b177ec1461013257600080fd5b806327dcd78c146100775780632d4a432f146100955780637946efce146100b8575b600080fd5b61007f610145565b60405161008c9190611787565b60405180910390f35b6100a86100a3366004611c52565b610259565b604051901515815260200161008c565b6100cb6100c6366004611d11565b610307565b60405161008c9190611e11565b6000546100f89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008c565b61013061012b36600461201e565b61051e565b005b6100a86101403660046120f0565b610692565b61014d611512565b610155611512565b60408051600280825260608201835260009260208301908036833701905050905060008160008151811061018b5761018b612125565b6020026020010181815250506001816001815181106101ac576101ac612125565b6020026020010181815250506040518060c00160405280600115158152602001600160058111156101df576101df61168b565b815260200160008152602001600181526020016001815260408051808201825260018082526000602083810182905294850192909252938652815160c081018352858152602181850152600481840152600c60608201528251938401909252825260808101919091529060a0820152602083015250919050565b60006102fd83610267610145565b600180546102749061213b565b80601f01602080910402602001604051908101604052809291908181526020018280546102a09061213b565b80156102ed5780601f106102c2576101008083540402835291602001916102ed565b820191906000526020600020905b8154815290600101906020018083116102d057829003601f168201915b505050505085876040015161051e565b5060015b92915050565b61030f611546565b60006040518060c001604052806001151581526020018760008151811061033857610338612125565b602002602001015160058111156103515761035161168b565b60058111156103625761036261168b565b81526020018760018151811061037a5761037a612125565b602002602001015160058111156103935761039361168b565b60058111156103a4576103a461168b565b8152602001876002815181106103bc576103bc612125565b602002602001015160058111156103d5576103d561168b565b60058111156103e6576103e661168b565b8152602001876003815181106103fe576103fe612125565b602002602001015160088111156104175761041761168b565b60088111156104285761042861168b565b815260200188905260408051600180825281830190925291925060009190816020015b604080516080810182526000808252602082015260609181018290528181019190915281526020019060019003908161044b57905050905060405180608001604052806001151581526020018560058111156104a9576104a961168b565b60058111156104ba576104ba61168b565b815260200187815260200186815250816000815181106104dc576104dc612125565b6020908102919091018101919091526040805160a081018252600181529182018c905281018a9052606081019290925260808201529050979650505050505050565b61052885856106ca565b6105368560200151836107f2565b6105875760405162461bcd60e51b815260206004820181905260248201527f50726f7669646564206b657920646f65736e2774206d617463682070726f6f6660448201526064015b60405180910390fd5b6105958560400151826107f2565b6106075760405162461bcd60e51b815260206004820152602260248201527f50726f76696465642076616c756520646f65736e2774206d617463682070726f60448201527f6f66000000000000000000000000000000000000000000000000000000000000606482015260840161057e565b61061961061386610822565b846107f2565b61068b5760405162461bcd60e51b815260206004820152602c60248201527f43616c63756c636174656420726f6f7420646f65736e2774206d61746368207060448201527f726f766964656420726f6f740000000000000000000000000000000000000000606482015260840161057e565b5050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff1633146106b757600080fd5b81516102fd90600190602085019061157d565b6106d8826060015182610891565b606081015115806106f25750806060015182608001515110155b61073e5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f707320646570746820746f6f2073686f72740000000000000000604482015260640161057e565b604081015115806107585750806040015182608001515110155b6107a45760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f707320646570746820746f6f2073686f72740000000000000000604482015260640161057e565b60005b8260800151518110156107ed576107db836080015182815181106107cd576107cd612125565b602002602001015183610adf565b806107e58161218c565b9150506107a7565b505050565b6000815183511461080557506000610301565b825160208381018281209186019283209091145b95945050505050565b6060600061083d836060015184602001518560400151610caa565b905060005b83608001515181101561088a576108768460800151828151811061086857610868612125565b602002602001015183610dcb565b9150806108828161218c565b915050610842565b5092915050565b80516020015160058111156108a8576108a861168b565b826020015160058111156108be576108be61168b565b1461090b5760405162461bcd60e51b815260206004820152601160248201527f556e657870656374656420486173684f70000000000000000000000000000000604482015260640161057e565b80516040015160058111156109225761092261168b565b826040015160058111156109385761093861168b565b146109855760405162461bcd60e51b815260206004820152601560248201527f556e657870656374656420507265686173684b65790000000000000000000000604482015260640161057e565b805160600151600581111561099c5761099c61168b565b826060015160058111156109b2576109b261168b565b146109ff5760405162461bcd60e51b815260206004820152601560248201527f556e657870656374656420507265686173684b65790000000000000000000000604482015260640161057e565b8051608001516008811115610a1657610a1661168b565b82608001516008811115610a2c57610a2c61168b565b14610a795760405162461bcd60e51b815260206004820152601a60248201527f556e657870656374656c65616653706563204c656e6774684f70000000000000604482015260640161057e565b610a8f8260a00151826000015160a00151610e7a565b610adb5760405162461bcd60e51b815260206004820152601760248201527f4c6561664f704c69623a2077726f6e6720707265666978000000000000000000604482015260640161057e565b5050565b8051602001516005811115610af657610af661168b565b82602001516005811115610b0c57610b0c61168b565b14610b595760405162461bcd60e51b815260206004820152601160248201527f556e657870656374656420486173684f70000000000000000000000000000000604482015260640161057e565b610b6f8260400151826000015160a00151610e7a565b15610bbc5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f704c69623a2077726f6e67207072656669780000000000000000604482015260640161057e565b8060200151604001518260400151511015610c195760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f702070726566697820746f6f2073686f72740000000000000000604482015260640161057e565b6020808201519081015190515160009190610c36906001906121a7565b610c4091906121be565b905080826020015160600151610c5691906121dd565b83604001515111156107ed5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f702070726566697820746f6f2073686f72740000000000000000604482015260640161057e565b60606000835111610cfd5760405162461bcd60e51b815260206004820152601160248201527f4c656166206f70206e65656473206b6579000000000000000000000000000000604482015260640161057e565b6000825111610d4e5760405162461bcd60e51b815260206004820152601360248201527f4c656166206f70206e656564732076616c756500000000000000000000000000604482015260640161057e565b60008460a00151610d688660400151876080015187610f3d565b604051602001610d799291906121f5565b604051602081830303815290604052610d9b8660600151876080015186610f3d565b604051602001610dac9291906121f5565b6040516020818303038152906040529050610819856020015182610f5a565b60606000825111610e1e5760405162461bcd60e51b815260206004820152601a60248201527f496e6e6572206f70206e65656473206368696c642076616c7565000000000000604482015260640161057e565b610e738360200151846040015184604051602001610e3d9291906121f5565b60408051601f19818403018152908290526060870151610e5f926020016121f5565b604051602081830303815290604052610f5a565b9392505050565b6000815183511015610e8e57506000610301565b60005b8251811015610f3357828181518110610eac57610eac612125565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916848281518110610eeb57610eeb612125565b01602001517fff000000000000000000000000000000000000000000000000000000000000001614610f21576000915050610301565b80610f2b8161218c565b915050610e91565b5060019392505050565b6060610f5283610f4d8685611178565b6111a5565b949350505050565b60606001836005811115610f7057610f7061168b565b1415610fd557610fce600283604051610f899190612224565b602060405180830381855afa158015610fa6573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610fc99190612240565b611339565b9050610301565b6002836005811115610fe957610fe961168b565b14156110375760405162461bcd60e51b815260206004820152601660248201527f534841353132206e6f7420696d706c656d656e74656400000000000000000000604482015260640161057e565b600483600581111561104b5761104b61168b565b141561109f57610fce6003836040516110649190612224565b602060405180830381855afa158015611081573d6000803e3d6000fd5b5050506040515160601b6bffffffffffffffffffffffff1916611339565b60058360058111156110b3576110b361168b565b14156111305760006002836040516110cb9190612224565b602060405180830381855afa1580156110e8573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061110b9190612240565b9050611128600361111b83611339565b6040516110649190612224565b915050610301565b60405162461bcd60e51b815260206004820152601260248201527f556e737570706f7274656420686173686f700000000000000000000000000000604482015260640161057e565b6060600083600581111561118e5761118e61168b565b141561119b575080610301565b610e738383610f5a565b606060008360088111156111bb576111bb61168b565b14156111c8575080610301565b60018360088111156111dc576111dc61168b565b1415611214576111ec8251611363565b826040516020016111fe9291906121f5565b6040516020818303038152906040529050610301565b60078360088111156112285761122861168b565b141561128657815160201461127f5760405162461bcd60e51b815260206004820152601160248201527f4578706563746564203332206279746573000000000000000000000000000000604482015260640161057e565b5080610301565b600883600881111561129a5761129a61168b565b14156112f157815160401461127f5760405162461bcd60e51b815260206004820152601160248201527f4578706563746564203634206279746573000000000000000000000000000000604482015260640161057e565b60405162461bcd60e51b815260206004820152601460248201527f556e737570706f72746564206c656e6774686f70000000000000000000000000604482015260640161057e565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b60608160015b607f8267ffffffffffffffff1611156113a15760078267ffffffffffffffff16901c915060018161139a9190612259565b9050611369565b60008167ffffffffffffffff1667ffffffffffffffff8111156113c6576113c6611863565b6040519080825280601f01601f1916602001820160405280156113f0576020820181803683370190505b50905084925060005b8267ffffffffffffffff168167ffffffffffffffff16101561148e5783607f1660801760f81b828267ffffffffffffffff168151811061143b5761143b612125565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060078467ffffffffffffffff16901c935080806114869061227c565b9150506113f9565b507f7f00000000000000000000000000000000000000000000000000000000000000816114bc6001856122a4565b67ffffffffffffffff16815181106114d6576114d6612125565b0160200180519091167fff000000000000000000000000000000000000000000000000000000000000001690600082901a905350949350505050565b6040518060800160405280611525611601565b8152602001611532611630565b815260200160008152602001600081525090565b6040518060a001604052806000151581526020016060815260200160608152602001611570611601565b8152602001606081525090565b8280546115899061213b565b90600052602060002090601f0160209004810192826115ab57600085556115f1565b82601f106115c457805160ff19168380011785556115f1565b828001600101855582156115f1579182015b828111156115f15782518255916020019190600101906115d6565b506115fd929150611676565b5090565b6040805160c0810190915260008082526020820190815260200160008152602001600081526020016000611570565b6040518060c001604052806060815260200160008152602001600081526020016000815260200160608152602001600060058111156116715761167161168b565b905290565b5b808211156115fd5760008155600101611677565b634e487b7160e01b600052602160045260246000fd5b600681106116b1576116b161168b565b9052565b60005b838110156116d05781810151838201526020016116b8565b838111156116df576000848401525b50505050565b600081518084526116fd8160208601602086016116b5565b601f01601f19169290920160200192915050565b8051151582526000602082015161172b60208501826116a1565b50604082015161173e60408501826116a1565b50606082015161175160608501826116a1565b506080820151600981106117675761176761168b565b8060808501525060a082015160c060a0850152610f5260c08501826116e5565b6000602080835283516080828501526117a360a0850182611711565b85830151858203601f19016040870152805160c0808452815190840181905292935090919084019060009060e08501905b808310156117f457835182529286019260019290920191908601906117d4565b508584015186860152604084015160408601526060840151606086015260808401519550848103608086015261182a81876116e5565b955050505060a0810151905061184360a08301826116a1565b505060408401516060840152606084015160808401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561189c5761189c611863565b60405290565b6040516080810167ffffffffffffffff8111828210171561189c5761189c611863565b60405160a0810167ffffffffffffffff8111828210171561189c5761189c611863565b604051601f8201601f1916810167ffffffffffffffff8111828210171561191157611911611863565b604052919050565b8035801515811461192957600080fd5b919050565b600082601f83011261193f57600080fd5b813567ffffffffffffffff81111561195957611959611863565b61196c601f8201601f19166020016118e8565b81815284602083860101111561198157600080fd5b816020850160208301376000918101602001919091529392505050565b80356006811061192957600080fd5b600060c082840312156119bf57600080fd5b6119c7611879565b90506119d282611919565b81526119e06020830161199e565b60208201526119f16040830161199e565b6040820152611a026060830161199e565b6060820152608082013560098110611a1957600080fd5b608082015260a082013567ffffffffffffffff811115611a3857600080fd5b611a448482850161192e565b60a08301525092915050565b600067ffffffffffffffff821115611a6a57611a6a611863565b5060051b60200190565b600082601f830112611a8557600080fd5b81356020611a9a611a9583611a50565b6118e8565b82815260059290921b84018101918181019086841115611ab957600080fd5b8286015b84811015611b7d57803567ffffffffffffffff80821115611ade5760008081fd5b908801906080828b03601f1901811315611af85760008081fd5b611b006118a2565b611b0b888501611919565b81526040611b1a81860161199e565b8983015260608086013585811115611b325760008081fd5b611b408f8c838a010161192e565b8484015250928501359284841115611b5a57600091508182fd5b611b688e8b8689010161192e565b90830152508652505050918301918301611abd565b509695505050505050565b600060a08284031215611b9a57600080fd5b611ba26118c5565b9050611bad82611919565b8152602082013567ffffffffffffffff80821115611bca57600080fd5b611bd68583860161192e565b60208401526040840135915080821115611bef57600080fd5b611bfb8583860161192e565b60408401526060840135915080821115611c1457600080fd5b611c20858386016119ad565b60608401526080840135915080821115611c3957600080fd5b50611c4684828501611a74565b60808301525092915050565b60008060408385031215611c6557600080fd5b823567ffffffffffffffff80821115611c7d57600080fd5b611c8986838701611b88565b93506020850135915080821115611c9f57600080fd5b50611cac8582860161192e565b9150509250929050565b600082601f830112611cc757600080fd5b81356020611cd7611a9583611a50565b82815260059290921b84018101918181019086841115611cf657600080fd5b8286015b84811015611b7d5780358352918301918301611cfa565b600080600080600080600060e0888a031215611d2c57600080fd5b873567ffffffffffffffff80821115611d4457600080fd5b611d508b838c0161192e565b985060208a0135915080821115611d6657600080fd5b611d728b838c0161192e565b975060408a0135915080821115611d8857600080fd5b611d948b838c0161192e565b965060608a0135915080821115611daa57600080fd5b611db68b838c01611cb6565b955060808a0135915080821115611dcc57600080fd5b611dd88b838c0161192e565b945060a08a0135915080821115611dee57600080fd5b50611dfb8a828b0161192e565b92505060c0880135905092959891949750929550565b60006020808352835115158184015280840151604060a081860152611e3960c08601836116e5565b915080860151601f196060818886030181890152611e5785846116e5565b945080890151925060808289870301818a0152611e748685611711565b8a8201518a8203850160a08c015280518083529197508801945087870190600581901b8801890160005b82811015611f0757868a830301845287518051151583528b810151611ec58d8501826116a1565b5089810151868b850152611edb878501826116e5565b91880151848303858a0152919050611ef381836116e5565b998d0199958d019593505050600101611e9e565b509c9b505050505050505050505050565b600060808284031215611f2a57600080fd5b611f326118a2565b9050813567ffffffffffffffff80821115611f4c57600080fd5b611f58858386016119ad565b83526020840135915080821115611f6e57600080fd5b9083019060c08286031215611f8257600080fd5b611f8a611879565b823582811115611f9957600080fd5b611fa587828601611cb6565b825250602083013560208201526040830135604082015260608301356060820152608083013582811115611fd857600080fd5b611fe48782860161192e565b608083015250611ff660a0840161199e565b60a0820152806020850152505050604082013560408201526060820135606082015292915050565b600080600080600060a0868803121561203657600080fd5b853567ffffffffffffffff8082111561204e57600080fd5b61205a89838a01611b88565b9650602088013591508082111561207057600080fd5b61207c89838a01611f18565b9550604088013591508082111561209257600080fd5b61209e89838a0161192e565b945060608801359150808211156120b457600080fd5b6120c089838a0161192e565b935060808801359150808211156120d657600080fd5b506120e38882890161192e565b9150509295509295909350565b60006020828403121561210257600080fd5b813567ffffffffffffffff81111561211957600080fd5b610f528482850161192e565b634e487b7160e01b600052603260045260246000fd5b600181811c9082168061214f57607f821691505b6020821081141561217057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156121a0576121a0612176565b5060010190565b6000828210156121b9576121b9612176565b500390565b60008160001904831182151516156121d8576121d8612176565b500290565b600082198211156121f0576121f0612176565b500190565b600083516122078184602088016116b5565b83519083019061221b8183602088016116b5565b01949350505050565b600082516122368184602087016116b5565b9190910192915050565b60006020828403121561225257600080fd5b5051919050565b600067ffffffffffffffff80831681851680830382111561221b5761221b612176565b600067ffffffffffffffff8083168181141561229a5761229a612176565b6001019392505050565b600067ffffffffffffffff838116908316818110156122c5576122c5612176565b03939250505056fea26469706673582212205d40dd1a0afdd407fb9295aef40a68104ff55bc991fbabfe39c2a0b966cb156a64736f6c634300080b0033";
const isSuperArgs = (xs) => xs.length > 1;
class AnconVerifier__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(onlyOwner, overrides) {
        return super.deploy(onlyOwner, overrides || {});
    }
    getDeployTransaction(onlyOwner, overrides) {
        return super.getDeployTransaction(onlyOwner, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.AnconVerifier__factory = AnconVerifier__factory;
AnconVerifier__factory.bytecode = _bytecode;
AnconVerifier__factory.abi = _abi;
