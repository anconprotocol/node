"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnconProtocol__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_onlyOwner",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes",
                name: "key",
                type: "bytes",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "packet",
                type: "bytes",
            },
        ],
        name: "ProofPacketSubmitted",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "accountByAddrProofs",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "accountProofs",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getIavlSpec",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leafSpec",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256[]",
                                name: "childOrder",
                                type: "uint256[]",
                            },
                            {
                                internalType: "uint256",
                                name: "childSize",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "minPrefixLength",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "maxPrefixLength",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "emptyChild",
                                type: "bytes",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct ICS23.InnerSpec",
                        name: "innerSpec",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "maxDepth",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minDepth",
                        type: "uint256",
                    },
                ],
                internalType: "struct ICS23.ProofSpec",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "proofs",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "relayNetworkHash",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "valid",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "key",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leaf",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "suffix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.InnerOp[]",
                        name: "path",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct ICS23.ExistenceProof",
                name: "proof",
                type: "tuple",
            },
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leafSpec",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256[]",
                                name: "childOrder",
                                type: "uint256[]",
                            },
                            {
                                internalType: "uint256",
                                name: "childSize",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "minPrefixLength",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "maxPrefixLength",
                                type: "uint256",
                            },
                            {
                                internalType: "bytes",
                                name: "emptyChild",
                                type: "bytes",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                        ],
                        internalType: "struct ICS23.InnerSpec",
                        name: "innerSpec",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "maxDepth",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "minDepth",
                        type: "uint256",
                    },
                ],
                internalType: "struct ICS23.ProofSpec",
                name: "spec",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "root",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "key",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "value",
                type: "bytes",
            },
        ],
        name: "verify",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "key",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "did",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "valid",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "key",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leaf",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "suffix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.InnerOp[]",
                        name: "path",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct ICS23.ExistenceProof",
                name: "proof",
                type: "tuple",
            },
        ],
        name: "enrollL2Account",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "rootHash",
                type: "bytes",
            },
        ],
        name: "updateProtocolHeader",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "key",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "packet",
                type: "bytes",
            },
            {
                components: [
                    {
                        internalType: "bool",
                        name: "valid",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "key",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leaf",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "suffix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.InnerOp[]",
                        name: "path",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct ICS23.ExistenceProof",
                name: "proof",
                type: "tuple",
            },
        ],
        name: "submitPacketWithProof",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "key",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "value",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "_prefix",
                type: "bytes",
            },
            {
                internalType: "bytes[][]",
                name: "_innerOp",
                type: "bytes[][]",
            },
        ],
        name: "convertProof",
        outputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "valid",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "key",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leaf",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "suffix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.InnerOp[]",
                        name: "path",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct ICS23.ExistenceProof",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "valid",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "key",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leaf",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "suffix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.InnerOp[]",
                        name: "path",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct ICS23.ExistenceProof",
                name: "exProof",
                type: "tuple",
            },
        ],
        name: "verifyProof",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "bool",
                        name: "valid",
                        type: "bool",
                    },
                    {
                        internalType: "bytes",
                        name: "key",
                        type: "bytes",
                    },
                    {
                        internalType: "bytes",
                        name: "value",
                        type: "bytes",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_key",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "prehash_value",
                                type: "uint8",
                            },
                            {
                                internalType: "enum ICS23.LengthOp",
                                name: "len",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.LeafOp",
                        name: "leaf",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "bool",
                                name: "valid",
                                type: "bool",
                            },
                            {
                                internalType: "enum ICS23.HashOp",
                                name: "hash",
                                type: "uint8",
                            },
                            {
                                internalType: "bytes",
                                name: "prefix",
                                type: "bytes",
                            },
                            {
                                internalType: "bytes",
                                name: "suffix",
                                type: "bytes",
                            },
                        ],
                        internalType: "struct ICS23.InnerOp[]",
                        name: "path",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct ICS23.ExistenceProof",
                name: "proof",
                type: "tuple",
            },
        ],
        name: "queryRootCalculation",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x60806040523480156200001157600080fd5b50604051620028163803806200281683398101604081905262000034916200005a565b600080546001600160a01b0319166001600160a01b03929092169190911790556200008c565b6000602082840312156200006d57600080fd5b81516001600160a01b03811681146200008557600080fd5b9392505050565b61277a806200009c6000396000f3fe6080604052600436106100d25760003560e01c8063410d0d841161007f578063b0d264e711610059578063b0d264e714610239578063c935256b1461025b578063d4f3237c1461027b578063d56a07e31461029b57600080fd5b8063410d0d84146101b257806373d15717146101c75780638da5cb5b146101e757600080fd5b806332208491116100b0578063322084911461015c578063354763d91461017f578063391506e51461019257600080fd5b806301644028146100d757806313f85fee1461010d57806327dcd78c1461013a575b600080fd5b3480156100e357600080fd5b506100f76100f2366004611abf565b6102d6565b6040516101049190611b50565b60405180910390f35b34801561011957600080fd5b5061012d610128366004611b87565b61037b565b6040516101049190611dce565b34801561014657600080fd5b5061014f61052b565b6040516101049190611ed5565b61016f61016a366004612251565b61063f565b6040519015158152602001610104565b61016f61018d366004612251565b6106b1565b34801561019e57600080fd5b5061016f6101ad3660046122d9565b610739565b3480156101be57600080fd5b506100f76107e9565b3480156101d357600080fd5b506100f76101e236600461230e565b6107f6565b3480156101f357600080fd5b506000546102149073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610104565b34801561024557600080fd5b506102596102543660046124a5565b61080f565b005b34801561026757600080fd5b5061016f610276366004611abf565b610983565b34801561028757600080fd5b506100f76102963660046122d9565b6109c4565b3480156102a757600080fd5b5061016f6102b6366004611abf565b805160208183018101805160048252928201919093012091525460ff1681565b8051602081830181018051600282529282019190930120915280546102fa90612577565b80601f016020809104026020016040519081016040528092919081815260200182805461032690612577565b80156103735780601f1061034857610100808354040283529160200191610373565b820191906000526020600020905b81548152906001019060200180831161035657829003601f168201915b505050505081565b610383611820565b6040805160c081018252600180825260208201819052600092820183905260608201819052608082015260a08101859052835190919067ffffffffffffffff8111156103d1576103d1611999565b60405190808252806020026020018201604052801561042557816020015b60408051608081018252600080825260208201526060918101829052818101919091528152602001906001900390816103ef5790505b50905060005b84518110156104fe576000858281518110610448576104486125b2565b6020026020010151905060405180608001604052806001151581526020016001600581111561047957610479611d2e565b600581111561048a5761048a611d2e565b8152602001826000815181106104a2576104a26125b2565b60200260200101518152602001826001815181106104c2576104c26125b2565b60200260200101518152508383815181106104df576104df6125b2565b60200260200101819052505080806104f6906125de565b91505061042b565b506040805160a0810182526001815260208101989098528701959095526060860152505050608082015290565b610533611857565b61053b611857565b604080516002808252606082018352600092602083019080368337019050509050600081600081518110610571576105716125b2565b602002602001018181525050600181600181518110610592576105926125b2565b6020026020010181815250506040518060c00160405280600115158152602001600160058111156105c5576105c5611d2e565b815260200160008152602001600181526020016001815260408051808201825260018082526000602083810182905294850192909252938652815160c081018352858152602181850152600481840152600c60608201528251938401909252825260808101919091529060a0820152602083015250919050565b600061064a82610739565b61065357600080fd5b8360028460405161066491906125f9565b9081526020016040518091039020908051906020019061068592919061188b565b5033600090815260036020908152604090912085516106a69287019061188b565b506001949350505050565b60006106bc82610739565b6106c557600080fd5b60016004856040516106d791906125f9565b908152604051908190036020018120805492151560ff19909316929092179091557f10a499eb855a3bf46db4fa7a4aa05f939a5d06c8a3a96ad7f4d840ee9817924e906107279086908690612615565b60405180910390a15060019392505050565b60006107e18261074761052b565b6001805461075490612577565b80601f016020809104026020016040519081016040528092919081815260200182805461078090612577565b80156107cd5780601f106107a2576101008083540402835291602001916107cd565b820191906000526020600020905b8154815290600101906020018083116107b057829003601f168201915b50505050508560200151866040015161080f565b506001919050565b600180546102fa90612577565b600360205260009081526040902080546102fa90612577565b61081985856109d5565b610827856020015183610afd565b6108785760405162461bcd60e51b815260206004820181905260248201527f50726f7669646564206b657920646f65736e2774206d617463682070726f6f6660448201526064015b60405180910390fd5b610886856040015182610afd565b6108f85760405162461bcd60e51b815260206004820152602260248201527f50726f76696465642076616c756520646f65736e2774206d617463682070726f60448201527f6f66000000000000000000000000000000000000000000000000000000000000606482015260840161086f565b61090a61090486610b27565b84610afd565b61097c5760405162461bcd60e51b815260206004820152602c60248201527f43616c63756c636174656420726f6f7420646f65736e2774206d61746368207060448201527f726f766964656420726f6f740000000000000000000000000000000000000000606482015260840161086f565b5050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff1633146109a857600080fd5b81516109bb90600190602085019061188b565b50600192915050565b60606109cf82610b27565b92915050565b6109e3826060015182610b96565b606081015115806109fd5750806060015182608001515110155b610a495760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f707320646570746820746f6f2073686f72740000000000000000604482015260640161086f565b60408101511580610a635750806040015182608001515110155b610aaf5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f707320646570746820746f6f2073686f72740000000000000000604482015260640161086f565b60005b826080015151811015610af857610ae683608001518281518110610ad857610ad86125b2565b602002602001015183610de4565b80610af0816125de565b915050610ab2565b505050565b60008151835114610b10575060006109cf565b508151602091820181902091909201919091201490565b60606000610b42836060015184602001518560400151610faf565b905060005b836080015151811015610b8f57610b7b84608001518281518110610b6d57610b6d6125b2565b6020026020010151836110d9565b915080610b87816125de565b915050610b47565b5092915050565b8051602001516005811115610bad57610bad611d2e565b82602001516005811115610bc357610bc3611d2e565b14610c105760405162461bcd60e51b815260206004820152601160248201527f556e657870656374656420486173684f70000000000000000000000000000000604482015260640161086f565b8051604001516005811115610c2757610c27611d2e565b82604001516005811115610c3d57610c3d611d2e565b14610c8a5760405162461bcd60e51b815260206004820152601560248201527f556e657870656374656420507265686173684b65790000000000000000000000604482015260640161086f565b8051606001516005811115610ca157610ca1611d2e565b82606001516005811115610cb757610cb7611d2e565b14610d045760405162461bcd60e51b815260206004820152601560248201527f556e657870656374656420507265686173684b65790000000000000000000000604482015260640161086f565b8051608001516008811115610d1b57610d1b611d2e565b82608001516008811115610d3157610d31611d2e565b14610d7e5760405162461bcd60e51b815260206004820152601a60248201527f556e657870656374656c65616653706563204c656e6774684f70000000000000604482015260640161086f565b610d948260a00151826000015160a00151611188565b610de05760405162461bcd60e51b815260206004820152601760248201527f4c6561664f704c69623a2077726f6e6720707265666978000000000000000000604482015260640161086f565b5050565b8051602001516005811115610dfb57610dfb611d2e565b82602001516005811115610e1157610e11611d2e565b14610e5e5760405162461bcd60e51b815260206004820152601160248201527f556e657870656374656420486173684f70000000000000000000000000000000604482015260640161086f565b610e748260400151826000015160a00151611188565b15610ec15760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f704c69623a2077726f6e67207072656669780000000000000000604482015260640161086f565b8060200151604001518260400151511015610f1e5760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f702070726566697820746f6f2073686f72740000000000000000604482015260640161086f565b6020808201519081015190515160009190610f3b9060019061263a565b610f459190612651565b905080826020015160600151610f5b9190612670565b8360400151511115610af85760405162461bcd60e51b815260206004820152601860248201527f496e6e65724f702070726566697820746f6f2073686f72740000000000000000604482015260640161086f565b606060008351116110025760405162461bcd60e51b815260206004820152601160248201527f4c656166206f70206e65656473206b6579000000000000000000000000000000604482015260640161086f565b60008251116110535760405162461bcd60e51b815260206004820152601360248201527f4c656166206f70206e656564732076616c756500000000000000000000000000604482015260640161086f565b60008460a0015161106d866040015187608001518761124b565b60405160200161107e929190612688565b6040516020818303038152906040526110a0866060015187608001518661124b565b6040516020016110b1929190612688565b60405160208183030381529060405290506110d0856020015182611268565b95945050505050565b6060600082511161112c5760405162461bcd60e51b815260206004820152601a60248201527f496e6e6572206f70206e65656473206368696c642076616c7565000000000000604482015260640161086f565b611181836020015184604001518460405160200161114b929190612688565b60408051601f1981840301815290829052606087015161116d92602001612688565b604051602081830303815290604052611268565b9392505050565b600081518351101561119c575060006109cf565b60005b8251811015611241578281815181106111ba576111ba6125b2565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168482815181106111f9576111f96125b2565b01602001517fff00000000000000000000000000000000000000000000000000000000000000161461122f5760009150506109cf565b80611239816125de565b91505061119f565b5060019392505050565b60606112608361125b8685611486565b6114b3565b949350505050565b6060600183600581111561127e5761127e611d2e565b14156112e3576112dc60028360405161129791906125f9565b602060405180830381855afa1580156112b4573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906112d791906126b7565b611647565b90506109cf565b60028360058111156112f7576112f7611d2e565b14156113455760405162461bcd60e51b815260206004820152601660248201527f534841353132206e6f7420696d706c656d656e74656400000000000000000000604482015260640161086f565b600483600581111561135957611359611d2e565b14156113ad576112dc60038360405161137291906125f9565b602060405180830381855afa15801561138f573d6000803e3d6000fd5b5050506040515160601b6bffffffffffffffffffffffff1916611647565b60058360058111156113c1576113c1611d2e565b141561143e5760006002836040516113d991906125f9565b602060405180830381855afa1580156113f6573d6000803e3d6000fd5b5050506040513d601f19601f8201168201806040525081019061141991906126b7565b9050611436600361142983611647565b60405161137291906125f9565b9150506109cf565b60405162461bcd60e51b815260206004820152601260248201527f556e737570706f7274656420686173686f700000000000000000000000000000604482015260640161086f565b6060600083600581111561149c5761149c611d2e565b14156114a95750806109cf565b6111818383611268565b606060008360088111156114c9576114c9611d2e565b14156114d65750806109cf565b60018360088111156114ea576114ea611d2e565b1415611522576114fa8251611671565b8260405160200161150c929190612688565b60405160208183030381529060405290506109cf565b600783600881111561153657611536611d2e565b141561159457815160201461158d5760405162461bcd60e51b815260206004820152601160248201527f4578706563746564203332206279746573000000000000000000000000000000604482015260640161086f565b50806109cf565b60088360088111156115a8576115a8611d2e565b14156115ff57815160401461158d5760405162461bcd60e51b815260206004820152601160248201527f4578706563746564203634206279746573000000000000000000000000000000604482015260640161086f565b60405162461bcd60e51b815260206004820152601460248201527f556e737570706f72746564206c656e6774686f70000000000000000000000000604482015260640161086f565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b60608160015b607f8267ffffffffffffffff1611156116af5760078267ffffffffffffffff16901c91506001816116a891906126d0565b9050611677565b60008167ffffffffffffffff1667ffffffffffffffff8111156116d4576116d4611999565b6040519080825280601f01601f1916602001820160405280156116fe576020820181803683370190505b50905084925060005b8267ffffffffffffffff168167ffffffffffffffff16101561179c5783607f1660801760f81b828267ffffffffffffffff1681518110611749576117496125b2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060078467ffffffffffffffff16901c93508080611794906126f3565b915050611707565b507f7f00000000000000000000000000000000000000000000000000000000000000816117ca60018561271b565b67ffffffffffffffff16815181106117e4576117e46125b2565b0160200180519091167fff000000000000000000000000000000000000000000000000000000000000001690600082901a905350949350505050565b6040518060a00160405280600015158152602001606081526020016060815260200161184a61190f565b8152602001606081525090565b604051806080016040528061186a61190f565b815260200161187761193e565b815260200160008152602001600081525090565b82805461189790612577565b90600052602060002090601f0160209004810192826118b957600085556118ff565b82601f106118d257805160ff19168380011785556118ff565b828001600101855582156118ff579182015b828111156118ff5782518255916020019190600101906118e4565b5061190b929150611984565b5090565b6040805160c081019091526000808252602082019081526020016000815260200160008152602001600061184a565b6040518060c0016040528060608152602001600081526020016000815260200160008152602001606081526020016000600581111561197f5761197f611d2e565b905290565b5b8082111561190b5760008155600101611985565b634e487b7160e01b600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156119d2576119d2611999565b60405290565b6040516080810167ffffffffffffffff811182821017156119d2576119d2611999565b60405160a0810167ffffffffffffffff811182821017156119d2576119d2611999565b604051601f8201601f1916810167ffffffffffffffff81118282101715611a4757611a47611999565b604052919050565b600082601f830112611a6057600080fd5b813567ffffffffffffffff811115611a7a57611a7a611999565b611a8d601f8201601f1916602001611a1e565b818152846020838601011115611aa257600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611ad157600080fd5b813567ffffffffffffffff811115611ae857600080fd5b61126084828501611a4f565b60005b83811015611b0f578181015183820152602001611af7565b83811115611b1e576000848401525b50505050565b60008151808452611b3c816020860160208601611af4565b601f01601f19169290920160200192915050565b6020815260006111816020830184611b24565b600067ffffffffffffffff821115611b7d57611b7d611999565b5060051b60200190565b60008060008060808587031215611b9d57600080fd5b67ffffffffffffffff8086351115611bb457600080fd5b611bc18787358801611a4f565b94508060208701351115611bd457600080fd5b611be48760208801358801611a4f565b93508060408701351115611bf757600080fd5b611c078760408801358801611a4f565b92508060608701351115611c1a57600080fd5b6060860135860187601f820112611c3057600080fd5b611c42611c3d8235611b63565b611a1e565b81358082526020808301929160051b8401018a1015611c6057600080fd5b602083015b6020843560051b850101811015611d1f578481351115611c8457600080fd5b803584018b603f820112611c9757600080fd5b611ca7611c3d6020830135611b63565b602082810135808352908201919060051b83016040018e1015611cc957600080fd5b604083015b6040602085013560051b850101811015611d0e578881351115611cf057600080fd5b611d008f60408335870101611a4f565b835260209283019201611cce565b508552505060209283019201611c65565b50969995985093965050505050565b634e487b7160e01b600052602160045260246000fd5b60068110611d5457611d54611d2e565b9052565b80511515825260006020820151611d726020850182611d44565b506040820151611d856040850182611d44565b506060820151611d986060850182611d44565b50608082015160098110611dae57611dae611d2e565b8060808501525060a082015160c060a085015261126060c0850182611b24565b60006020808352835115158184015280840151604060a081860152611df660c0860183611b24565b915080860151601f196060818886030181890152611e148584611b24565b945080890151925060808289870301818a0152611e318685611d58565b8a8201518a8203850160a08c015280518083529197508801945087870190600581901b8801890160005b82811015611ec457868a830301845287518051151583528b810151611e828d850182611d44565b5089810151868b850152611e9887850182611b24565b91880151848303858a0152919050611eb08183611b24565b998d0199958d019593505050600101611e5b565b509c9b505050505050505050505050565b600060208083528351608082850152611ef160a0850182611d58565b85830151858203601f19016040870152805160c0808452815190840181905292935090919084019060009060e08501905b80831015611f425783518252928601926001929092019190860190611f22565b5085840151868601526040840151604086015260608401516060860152608084015195508481036080860152611f788187611b24565b955050505060a08101519050611f9160a0830182611d44565b505060408401516060840152606084015160808401528091505092915050565b80358015158114611fc157600080fd5b919050565b803560068110611fc157600080fd5b600060c08284031215611fe757600080fd5b611fef6119af565b9050611ffa82611fb1565b815261200860208301611fc6565b602082015261201960408301611fc6565b604082015261202a60608301611fc6565b606082015260808201356009811061204157600080fd5b608082015260a082013567ffffffffffffffff81111561206057600080fd5b61206c84828501611a4f565b60a08301525092915050565b600082601f83011261208957600080fd5b81356020612099611c3d83611b63565b82815260059290921b840181019181810190868411156120b857600080fd5b8286015b8481101561217c57803567ffffffffffffffff808211156120dd5760008081fd5b908801906080828b03601f19018113156120f75760008081fd5b6120ff6119d8565b61210a888501611fb1565b81526040612119818601611fc6565b89830152606080860135858111156121315760008081fd5b61213f8f8c838a0101611a4f565b848401525092850135928484111561215957600091508182fd5b6121678e8b86890101611a4f565b908301525086525050509183019183016120bc565b509695505050505050565b600060a0828403121561219957600080fd5b6121a16119fb565b90506121ac82611fb1565b8152602082013567ffffffffffffffff808211156121c957600080fd5b6121d585838601611a4f565b602084015260408401359150808211156121ee57600080fd5b6121fa85838601611a4f565b6040840152606084013591508082111561221357600080fd5b61221f85838601611fd5565b6060840152608084013591508082111561223857600080fd5b5061224584828501612078565b60808301525092915050565b60008060006060848603121561226657600080fd5b833567ffffffffffffffff8082111561227e57600080fd5b61228a87838801611a4f565b945060208601359150808211156122a057600080fd5b6122ac87838801611a4f565b935060408601359150808211156122c257600080fd5b506122cf86828701612187565b9150509250925092565b6000602082840312156122eb57600080fd5b813567ffffffffffffffff81111561230257600080fd5b61126084828501612187565b60006020828403121561232057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461118157600080fd5b600082601f83011261235557600080fd5b81356020612365611c3d83611b63565b82815260059290921b8401810191818101908684111561238457600080fd5b8286015b8481101561217c5780358352918301918301612388565b6000608082840312156123b157600080fd5b6123b96119d8565b9050813567ffffffffffffffff808211156123d357600080fd5b6123df85838601611fd5565b835260208401359150808211156123f557600080fd5b9083019060c0828603121561240957600080fd5b6124116119af565b82358281111561242057600080fd5b61242c87828601612344565b82525060208301356020820152604083013560408201526060830135606082015260808301358281111561245f57600080fd5b61246b87828601611a4f565b60808301525061247d60a08401611fc6565b60a0820152806020850152505050604082013560408201526060820135606082015292915050565b600080600080600060a086880312156124bd57600080fd5b853567ffffffffffffffff808211156124d557600080fd5b6124e189838a01612187565b965060208801359150808211156124f757600080fd5b61250389838a0161239f565b9550604088013591508082111561251957600080fd5b61252589838a01611a4f565b9450606088013591508082111561253b57600080fd5b61254789838a01611a4f565b9350608088013591508082111561255d57600080fd5b5061256a88828901611a4f565b9150509295509295909350565b600181811c9082168061258b57607f821691505b602082108114156125ac57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156125f2576125f26125c8565b5060010190565b6000825161260b818460208701611af4565b9190910192915050565b6040815260006126286040830185611b24565b82810360208401526110d08185611b24565b60008282101561264c5761264c6125c8565b500390565b600081600019048311821515161561266b5761266b6125c8565b500290565b60008219821115612683576126836125c8565b500190565b6000835161269a818460208801611af4565b8351908301906126ae818360208801611af4565b01949350505050565b6000602082840312156126c957600080fd5b5051919050565b600067ffffffffffffffff8083168185168083038211156126ae576126ae6125c8565b600067ffffffffffffffff80831681811415612711576127116125c8565b6001019392505050565b600067ffffffffffffffff8381169083168181101561273c5761273c6125c8565b03939250505056fea2646970667358221220f965b5c33a189a1cd611e8596204d88956929cdcdc897f29613576824bb7d58564736f6c634300080b0033";
const isSuperArgs = (xs) => xs.length > 1;
class AnconProtocol__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_onlyOwner, overrides) {
        return super.deploy(_onlyOwner, overrides || {});
    }
    getDeployTransaction(_onlyOwner, overrides) {
        return super.getDeployTransaction(_onlyOwner, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.AnconProtocol__factory = AnconProtocol__factory;
AnconProtocol__factory.bytecode = _bytecode;
AnconProtocol__factory.abi = _abi;
