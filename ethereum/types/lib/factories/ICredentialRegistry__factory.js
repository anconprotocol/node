"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ICredentialRegistry__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "credentialHash",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "by",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "id",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "iat",
                type: "uint256",
            },
        ],
        name: "CredentialRegistered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "credentialHash",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "by",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "date",
                type: "uint256",
            },
        ],
        name: "CredentialRevoked",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "issuer",
                type: "address",
            },
            {
                internalType: "address",
                name: "subject",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "credentialHash",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "from",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "exp",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "registerCredential",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "credentialHash",
                type: "bytes32",
            },
        ],
        name: "revokeCredential",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "issuer",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "_credentialHash",
                type: "bytes32",
            },
        ],
        name: "status",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "credentialHash",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "issuer",
                type: "address",
            },
        ],
        name: "exist",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class ICredentialRegistry__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ICredentialRegistry__factory = ICredentialRegistry__factory;
ICredentialRegistry__factory.abi = _abi;
