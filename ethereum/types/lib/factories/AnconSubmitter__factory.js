"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnconSubmitter__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_onlyOwner",
                type: "address",
            },
            {
                internalType: "address",
                name: "_verifier",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [],
        name: "ProofPacketSubmitted",
        type: "event",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        name: "proofs",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "relayNetworkHash",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "verifier",
        outputs: [
            {
                internalType: "contract AnconVerifier",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "rootHash",
                type: "bytes",
            },
        ],
        name: "updateProtocolHeader",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256[]",
                name: "leafOpUint",
                type: "uint256[]",
            },
            {
                internalType: "bytes",
                name: "prefix",
                type: "bytes",
            },
            {
                internalType: "bytes[][]",
                name: "existenceProofInnerOp",
                type: "bytes[][]",
            },
            {
                internalType: "uint256",
                name: "existenceProofInnerOpHash",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "key",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "value",
                type: "bytes",
            },
            {
                internalType: "bytes",
                name: "packet",
                type: "bytes",
            },
        ],
        name: "submitPacketWithProof",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506040516109c53803806109c583398101604081905261002f9161007e565b50600080546001600160a01b039283166001600160a01b03199182161790915560018054918216919092161790556100b1565b80516001600160a01b038116811461007957600080fd5b919050565b6000806040838503121561009157600080fd5b61009a83610062565b91506100a860208401610062565b90509250929050565b610905806100c06000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80638da5cb5b116100505780638da5cb5b146100df578063c935256b146100f2578063d56a07e31461010557600080fd5b80631492c519146100775780632b7ac3f31461009f578063410d0d84146100ca575b600080fd5b61008a610085366004610610565b610118565b60405190151581526020015b60405180910390f35b6001546100b2906001600160a01b031681565b6040516001600160a01b039091168152602001610096565b6100d26101ca565b6040516100969190610710565b6000546100b2906001600160a01b031681565b61008a610100366004610765565b610258565b6100d2610113366004610765565b61031a565b8051602082012060009061012b846107a2565b146101bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f626164207061636b65743a207061636b6574206861736820697320646966666560448201527f72656e742066726f6d2069637332332076616c75650000000000000000000000606482015260840160405180910390fd5b506001979650505050505050565b600280546101d7906107c9565b80601f0160208091040260200160405190810160405280929190818152602001828054610203906107c9565b80156102505780601f1061022557610100808354040283529160200191610250565b820191906000526020600020905b81548152906001019060200180831161023357829003601f168201915b505050505081565b600080546001600160a01b0316331461027057600080fd5b815161028390600290602085019061033e565b506001546040517ff3b177ec0000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063f3b177ec906102ce906002906004016107fe565b6020604051808303816000875af11580156102ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031191906108a6565b50600192915050565b8051602081830181018051600382529282019190930120915280546101d7906107c9565b82805461034a906107c9565b90600052602060002090601f01602090048101928261036c57600085556103b2565b82601f1061038557805160ff19168380011785556103b2565b828001600101855582156103b2579182015b828111156103b2578251825591602001919060010190610397565b506103be9291506103c2565b5090565b5b808211156103be57600081556001016103c3565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610416576104166103d7565b604052919050565b600067ffffffffffffffff821115610438576104386103d7565b5060051b60200190565b600082601f83011261045357600080fd5b813560206104686104638361041e565b6103ed565b82815260059290921b8401810191818101908684111561048757600080fd5b8286015b848110156104a2578035835291830191830161048b565b509695505050505050565b600082601f8301126104be57600080fd5b813567ffffffffffffffff8111156104d8576104d86103d7565b6104eb601f8201601f19166020016103ed565b81815284602083860101111561050057600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261052e57600080fd5b8135602061053e6104638361041e565b82815260059290921b8401810191818101908684111561055d57600080fd5b8286015b848110156104a257803567ffffffffffffffff8082111561058157600080fd5b818901915089603f83011261059557600080fd5b858201356105a56104638261041e565b81815260059190911b830160400190878101908c8311156105c557600080fd5b604085015b838110156105fe578035858111156105e157600080fd5b6105f08f6040838a01016104ad565b8452509189019189016105ca565b50875250505092840192508301610561565b600080600080600080600060e0888a03121561062b57600080fd5b873567ffffffffffffffff8082111561064357600080fd5b61064f8b838c01610442565b985060208a013591508082111561066557600080fd5b6106718b838c016104ad565b975060408a013591508082111561068757600080fd5b6106938b838c0161051d565b965060608a0135955060808a01359150808211156106b057600080fd5b6106bc8b838c016104ad565b945060a08a01359150808211156106d257600080fd5b6106de8b838c016104ad565b935060c08a01359150808211156106f457600080fd5b506107018a828b016104ad565b91505092959891949750929550565b600060208083528351808285015260005b8181101561073d57858101830151858201604001528201610721565b8181111561074f576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561077757600080fd5b813567ffffffffffffffff81111561078e57600080fd5b61079a848285016104ad565b949350505050565b805160208083015191908110156107c3576000198160200360031b1b821691505b50919050565b600181811c908216806107dd57607f821691505b602082108114156107c357634e487b7160e01b600052602260045260246000fd5b600060208083526000845481600182811c91508083168061082057607f831692505b85831081141561083e57634e487b7160e01b85526022600452602485fd5b87860183815260200181801561085b576001811461086c57610897565b60ff19861682528782019650610897565b60008b81526020902060005b8681101561089157815484820152908501908901610878565b83019750505b50949998505050505050505050565b6000602082840312156108b857600080fd5b815180151581146108c857600080fd5b939250505056fea26469706673582212206da100c339baeb6a0bbb090272df445ad959167cece8c6436e2ef47e36a9092564736f6c634300080b0033";
const isSuperArgs = (xs) => xs.length > 1;
class AnconSubmitter__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_onlyOwner, _verifier, overrides) {
        return super.deploy(_onlyOwner, _verifier, overrides || {});
    }
    getDeployTransaction(_onlyOwner, _verifier, overrides) {
        return super.getDeployTransaction(_onlyOwner, _verifier, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.AnconSubmitter__factory = AnconSubmitter__factory;
AnconSubmitter__factory.bytecode = _bytecode;
AnconSubmitter__factory.abi = _abi;
